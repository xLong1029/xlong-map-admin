import{u as M,ae as R,w as q,a as U,ap as $,e as h,y as x,b as I}from"./index.a33ecea7.js";import{a as w}from"./BitmapContainer.78a1e7fc.js";import{f as E}from"./LayerView2D.d9ef92c2.js";import{v as H}from"./ExportStrategy.9d5a6ffc.js";import{u as W}from"./LayerView.88bcfa48.js";import{i as A}from"./RefreshableLayerView.e0df9b3f.js";import{i as F}from"./WMSLayerView.06c4631b.js";import"./WGLContainer.5bbfc124.js";import"./definitions.618cbc79.js";import"./WGLBrushVTLSymbol.4ddaefec.js";import"./enums.a12f2baf.js";import"./number.e821bc3e.js";import"./StyleDefinition.630dd2fa.js";import"./GeometryUtils.b69b6363.js";import"./color.d55e9401.js";import"./ShaderCompiler.915a06d7.js";import"./ProgramTemplate.6d98fd14.js";import"./MaterialKey.23a3bc73.js";import"./alignmentUtils.cba6cd73.js";import"./utils.28eb7bc1.js";import"./heatmapTextureUtils.e4986b56.js";import"./Container.5f323bc4.js";import"./EffectView.f5ec831b.js";import"./Bitmap.0ee5b9a3.js";import"./ExportWMSImageParameters.4cd98c6e.js";let s=class extends F(A(E(W))){constructor(){super(...arguments),this.bitmapContainer=new w}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{M(e)||R.getLogger(this.declaredClass).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new w,this.container.addChild(this.bitmapContainer),this.strategy=new H({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(q(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=U(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:o}=t,{spatialReference:v}=e;let i,p=0,d=0;if(r.children.some(S=>{const{width:c,height:g,resolution:l,x:m,y:n}=S,y=m+l*c,f=n-l*g;return a>=m&&a<=y&&o<=n&&o>=f&&(i=new $({xmin:m,ymin:f,xmax:y,ymax:n,spatialReference:v}),p=c,d=g,!0)}),!i)return null;const u=i.width/p,C=Math.round((a-i.xmin)/u),b=Math.round((i.ymax-o)/u);return{extent:i,width:p,height:d,x:C,y:b}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};h([x()],s.prototype,"strategy",void 0),h([x()],s.prototype,"updating",void 0),s=h([I("esri.views.2d.layers.WMSLayerView2D")],s);const ot=s;export{ot as default};
