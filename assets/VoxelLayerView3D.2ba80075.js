import{t as S,aD as c,bu as f,aV as x,r as a,w as l,h as T,a as E,af as A,aO as L,dj as I,ai as M,l6 as D,l7 as P,aN as F,ae as V,e as b,y as _,b as C,ak as v}from"./index.a33ecea7.js";import{n as R}from"./LayerView3D.f81b9bae.js";import{c as U}from"./PopupSceneLayerView.68c42b2c.js";import{u as $}from"./LayerView.88bcfa48.js";import"./popupUtils.5d07a4ea.js";var r;(function(s){s[s.API=1]="API",s[s.VerboseAPI=2]="VerboseAPI",s[s.Error=3]="Error"})(r||(r={}));const h=v(),w=v();let u=class extends U(R($)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this._handles=new S,this._dbgFlags=new Set}get baseUrl(){var s,e;return(e=(s=this.layer.parsedUrl)==null?void 0:s.path)!=null?e:""}get wasmLayerId(){return this._wasmLayerId}initialize(){var m;if(this._dbgFlags.add(r.Error),this.view.viewingMode!=="local")throw new c("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(this.view._stage.renderView.renderingContext.type!==f.WEBGL2)throw new c("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});if(!((m=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&m.textureFloat))throw new c("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const s=this.layer.spatialReference;if(!x(s,this.view.spatialReference))throw new c("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const e=this.layer.currentVariableId,t=this.layer.getVolume(e),o=this.layer.getVariable(e);if(a(t)&&a(o)){const d=t.dimensions[0],i=t.dimensions[1],y=t.zDimension;if(y>1){const W=t.dimensions[y],g=d.size*i.size*W.size;let p=1;switch(o.renderingFormat.type){case"Int16":case"UInt16":p=2;break;case"Int32":case"UInt32":case"Float32":p=4}this._futureMemory=p*g}}const n=this.view.addVoxelLayerViewToWasm(this).then(d=>{this._wasmLayerId=d,this._suspendedHandle=l(()=>this.suspended,i=>{const y=this.view.voxelWasm;a(y)&&y.setEnabled(this,!i)},T),this._handles.add([l(()=>this.layer.renderMode,i=>this._pushRenderModeToWasm(i)),l(()=>this.layer.currentVariableId,i=>this._pushCurrentVariableIdToWasm(i)),l(()=>this.layer.getSections(),i=>this._pushSectionsToWasm(i)),l(()=>this.layer.getVariableStyles(),i=>this._pushVariableStylesToWasm(i)),l(()=>this.layer.getVolumeStyles(),i=>this._pushVolumeStylesToWasm(i)),l(()=>this.layer.enableDynamicSections,i=>this._pushEnableDynamicSectionsToWasm(i)),l(()=>this.layer.enableIsosurfaces,i=>this._pushEnableIsosurfacesToWasm(i)),l(()=>this.layer.enableSections,i=>this._pushEnableSectionsToWasm(i)),l(()=>this.layer.enableSlices,i=>this._pushEnableSlicesToWasm(i)),l(()=>this.slicePlaneEnabled,i=>this._pushAnalysisSliceToWasm(i,this.view.slicePlane)),l(()=>this.view.slicePlane,i=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,i))])}).catch(d=>{if(this.view.removeVoxelLayerViewFromWasm(this),this._wasmLayerId=-1,d===-1)throw new c("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(d===-2)throw new c("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(n)}destroy(){this.view.removeVoxelLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._handles=E(this._handles)}isUpdating(){const s=this.view.voxelWasm;return!(this._wasmLayerId<0||!a(s))&&s.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}getUsedMemory(){return this._usedMemory}getUnloadedMemory(){return this._futureMemory}ignoresMemoryFactor(){return!0}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}whenGraphicBounds(s,e){const t=s.attributes["Voxel.WorldPosition"];if(t){const o=A(),n=JSON.parse(t);if(L(n,this.view.renderSpatialReference,w,this.view.spatialReference||I.WGS84))return M(o,w),Promise.resolve({boundingBox:o,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(s){this._usedMemory=s,this._futureMemory=0}captureFrustum(){const s=this.view.voxelWasm;a(s)&&s.captureFrustum()}toggleFullVolumeExtentDraw(){const s=this.view.voxelWasm;a(s)&&s.toggleFullVolumeExtentDraw(this)}getLayerTimes(){let s=[];const e=this.view.voxelWasm;return a(e)&&(s=e.getLayerTimes(this)),s}getCurrentLayerTimeIndex(){let s=0;const e=this.view.voxelWasm;return a(e)&&(s=e.getCurrentLayerTimeIndex(this)),s}_pushRenderModeToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!")),!!a(e)&&e.setRenderMode(this,s)||this._dbg(r.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!")),!!a(e)&&e.setStaticSections(this,s)||this._dbg(r.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(a(e)?"have WASM":"don't have WASM!!!")),!!a(e)&&e.setCurrentVariable(this,s)||this._dbg(r.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!"));let t=!1;a(e)&&(t=e.setVariableStyles(this,s),t||this._dbg(r.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!"))}_accountForEnableSlices(s,e){const t=a(e)?e:this.layer.enableSlices;for(let o=0;o<s.length;++o){const n=s[o];for(const m of n.slices)m.enabled=m.enabled&&t}}_pushVolumeStylesToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!"));let t=!1;a(e)&&(this._accountForEnableSlices(s,null),t=e.setVolumeStyles(this,s),t||this._dbg(r.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(s,e){const t=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(a(t)?"have WASM":"don't have WASM!!!"));let o=!1;if(a(t)){if(a(e)){const n=e.origin;D(h,e.basis1,e.basis2),P(h,h),o=t.setAnalysisSlice(this,s,n,h)}else F(h,0,0,1),o=t.setAnalysisSlice(this,!1,h,h);o||this._dbg(r.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!"));let t=!1;a(e)&&(t=e.setEnableDynamicSections(this,s),t||this._dbg(r.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!"))}_pushEnableSlicesToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!"));let t=!1;if(a(e)){const o=this.layer.getVolumeStyles();this._accountForEnableSlices(o,s),t=e.setVolumeStyles(this,o),t||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!"));let t=!1;a(e)&&(t=e.setEnableIsosurfaces(this,s),t||this._dbg(r.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!"))}_pushEnableSectionsToWasm(s){const e=this.view.voxelWasm;this._dbg(r.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(a(e)?"have WASM":"don't have WASM!!!"));let t=!1;a(e)&&(t=e.setEnableSections(this,s),t||this._dbg(r.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!"))}async whenGraphicAttributes(s,e){return s}_dbg(s,e){this._dbgFlags.has(s)&&(s===r.Error?V.getLogger(this.declaredClass).error(e):V.getLogger(this.declaredClass).warn(e))}};b([_()],u.prototype,"layer",void 0),b([_()],u.prototype,"baseUrl",null),b([_({type:Boolean})],u.prototype,"slicePlaneEnabled",void 0),u=b([C("esri.views.3d.layers.VoxelLayerView3D")],u);const N=u;export{N as default};
