import{oO as x,y0 as U,y1 as A,aN as j,i4 as D,e as n,y as r,b as I,d as H,r as h,bc as J,i as k,rh as T,w as S,U as R,p as M,h as _,y2 as V,t as Z,H as L,v as q,iT as W,hr as G,iE as B,i_ as Q,hs as K,d$ as X,lH as Y,aR as ee,sn as te,cH as ie,a4 as E,y3 as ne,y4 as se,nO as v,eN as ae,fA as re,az as oe,wo as le,kp as F,y5 as de}from"./index.a33ecea7.js";import{i as ue,p as pe}from"./queryEngineUtils.e7268e90.js";import{b as he}from"./TileTreeDebugger.ed587455.js";import"./VertexSnappingCandidate.63f00b1a.js";function b(e,t){return U(t.extent,P),A(P,j(ce,e.x,e.y,0))}const P=x(),ce=D();let y=class extends H{get tiles(){const e=this.tilesCoveringView,t=h(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((s,a)=>b(t,s)-b(t,a)),e}_scaleEnabled(){return J(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||k(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:s}=t,a=[];for(const{row:i,colFrom:l,colTo:d}of e)for(let o=l;o<=d;o++){const u=t.normalizeCol(o),g=new T(null,s,i,u);this.tileInfo.updateTileInfo(g),a.push(g)}return a}get tileInfo(){var e,t;return(t=(e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)!=null?t:null}get tileSize(){return h(this.tileInfo)?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(S(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.state)==null?void 0:t.viewpoint},()=>this.notifyChange("tilesCoveringView"),R))}};n([r({readOnly:!0})],y.prototype,"tiles",null),n([r({readOnly:!0})],y.prototype,"_scaleEnabled",null),n([r({readOnly:!0})],y.prototype,"tilesCoveringView",null),n([r({readOnly:!0})],y.prototype,"tileInfo",null),n([r({readOnly:!0})],y.prototype,"tileSize",null),n([r({constructOnly:!0})],y.prototype,"view",void 0),n([r({constructOnly:!0})],y.prototype,"layer",void 0),n([r()],y.prototype,"pointOfInterest",void 0),y=n([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],y);let f=class extends M{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(h(t)){const s=e.map(a=>b(t,a));for(let a=1;a<s.length;a++)if(s[a-1]>s[a])return e.sort((i,l)=>b(t,i)-b(t,l)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(ye)}get tileInfo(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())!=null?t:null}get tileSize(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tileSize)!=null?t:256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return h(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(S(()=>this.view.featureTiles,e=>{this.handles.remove(z),e&&this.handles.add(e.addClient(),z)},_))}_filterTiles(e){return k(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>fe&&t.measures.visibility===V.VISIBLE_ON_SURFACE)}};function ye({lij:[e,t,s],extent:a}){return new T(`${e}/${t}/${s}`,e,t,s,a)}n([r({readOnly:!0})],f.prototype,"tiles",null),n([r({readOnly:!0})],f.prototype,"tilesCoveringView",null),n([r({readOnly:!0})],f.prototype,"tileInfo",null),n([r({readOnly:!0})],f.prototype,"tileSize",null),n([r({constructOnly:!0})],f.prototype,"view",void 0),n([r()],f.prototype,"pointOfInterest",void 0),n([r()],f.prototype,"_effectivePointOfInterest",null),f=n([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],f);const fe=50,z="feature-tiles";let O=class extends he{constructor(e){super(e),this._handles=new Z}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(L(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(i=>{e.set(i.data.id,i.featureCount)}),this._debugInfo.pendingTiles.forEach(i=>{e.set(i.data.id,i.featureCount),t.set(i.data.id,i.state)});const s=i=>{var o;const l=t.get(i),d=(o=e.get(i))!=null?o:"?";return l?`${l}:${d}
${i}`:`store:${d}
${i}`},a=new Map;return this._debugInfo.storedTiles.forEach(i=>{a.set(i.data.id,i.data)}),this._debugInfo.pendingTiles.forEach(i=>{a.set(i.data.id,i.data)}),Array.from(a.values()).map(i=>({lij:[i.level,i.row,i.col],geometry:q.fromExtent(W(i.extent,this.view.spatialReference)),label:s(i.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([r({constructOnly:!0})],O.prototype,"handle",void 0),O=n([I("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],O);let p=class extends M{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const s=[];for(const{points:a}of t)for(const{z:i}of a)s.push(i);return{elevations:s,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new ge(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var i;const s=this._serviceInfoFromLayer(e.layer);if(k(s))return;const a={configuration:this._convertConfiguration(e.configuration),serviceInfo:s,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(i=e.layer.elevationInfo)==null?void 0:i.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const s=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",s,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const s=e.point,a={distance:e.distance,mode:e.mode,point:G(s[0],s[1],s[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:h(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(a,t)}async updateTiles(e,t){const s={tiles:e.tiles,tileInfo:h(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",s,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var d,o,u,g,$,C;const s=this._editId++,a={id:s};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",a,t));const i=await this.updatingHandles.addPromise(B(e.result,t)),l={id:s,edits:{addedFeatures:(o=(d=i.addedFeatures)==null?void 0:d.map(({objectId:m})=>m).filter(h))!=null?o:[],deletedFeatures:(g=(u=i.deletedFeatures)==null?void 0:u.map(({objectId:m,globalId:N})=>({objectId:m,globalId:N})))!=null?g:[],updatedFeatures:(C=($=i.updatedFeatures)==null?void 0:$.map(({objectId:m})=>m).filter(h))!=null?C:[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:h(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,s,a;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:(s=(t=e.parsedUrl)==null?void 0:t.path)!=null?s:"",fields:e.fields.map(i=>i.toJSON()),geometryType:Q.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(a=e.timeInfo)==null?void 0:a.toJSON()}}};n([r({constructOnly:!0})],p.prototype,"schedule",void 0),n([r({constructOnly:!0})],p.prototype,"hasZ",void 0),n([r({constructOnly:!0})],p.prototype,"elevationAlignPointsInFeatures",void 0),n([r({constructOnly:!0})],p.prototype,"queryForSymbologySnapping",void 0),n([r({readOnly:!0})],p.prototype,"updating",null),n([r({readOnly:!0})],p.prototype,"availability",void 0),n([r()],p.prototype,"_workerHandleUpdating",void 0),p=n([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],p);class ge extends K{constructor(t,s){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:s})}}let w=class extends H{get tiles(){return[new T("0/0/0",0,0,0,X(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Y({origin:new ee({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new te({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([r({readOnly:!0})],w.prototype,"tiles",null),n([r({readOnly:!0})],w.prototype,"tileInfo",null),n([r({readOnly:!0})],w.prototype,"tileSize",null),n([r({constructOnly:!0})],w.prototype,"layer",void 0),n([r()],w.prototype,"pointOfInterest",void 0),w=n([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],w);let c=class extends ie(H){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=h(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){var e,t;return(t=(e=this._workerHandle)==null?void 0:e.availability)!=null?t:0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){var s;let e;const t=this.view;if(h(t))switch(t.type){case"2d":this._tilesOfInterest=new y({view:t,layer:this._layer}),e=this._workerHandle=new p;break;case"3d":{const{resourceController:a}=t,i=this._layer,l=t.whenLayerView(i);this._tilesOfInterest=new f({view:t}),e=this._workerHandle=new p({schedule:o=>a.immediate.schedule(o),hasZ:this._layer.hasZ&&((s=this._layer.returnZ)!=null?s:!0),elevationAlignPointsInFeatures:async(o,u)=>{const g=await l;return E(u),g.elevationAlignPointsInFeatures(o,u)},queryForSymbologySnapping:async(o,u)=>{const g=await l;return E(u),g.queryForSymbologySnapping(o,u)}});const d=new ne(null);l.then(o=>d.set(o)),this.addHandles([t.elevationProvider.on("elevation-change",({context:o})=>{const{elevationInfo:u}=i;se(o,u)&&v(e.notifyElevationSourceChange())}),S(()=>i.elevationInfo,()=>v(e.notifyElevationSourceChange()),_),S(()=>ae(d.get(),({processor:o})=>o==null?void 0:o.renderer),()=>v(e.notifySymbologyChange()),_),S(()=>re(d.get(),!1,o=>o.symbologySnappingSupported),o=>v(e.setSymbologySnappingSupported(o)),_),oe(()=>{var o;return(o=le(d.get()))==null?void 0:o.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new w({layer:this._layer}),e=this._workerHandle=new p;this.handles.add([F(e)]),v(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>v(e.updateTiles(this._updateTilesParameters,null)),_),this.handles.add([S(()=>this.configuration,a=>v(e.configure(a,null)),R)]),h(t)&&this.handles.add(S(()=>de.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,a=>{a&&!this._debug?(this._debug=new O({view:t,handle:e}),this.handles.add(F(this._debug),"debug")):!a&&this._debug&&this.handles.remove("debug")},_)),this.handles.add(this.layerSource.layer.on("apply-edits",a=>{v(e.applyEdits(a,null))}))}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:s,point:a}=e;this._tilesOfInterest.pointOfInterest=s.arrayToPoint(a);const i=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(l=>ue(l,i))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return pe(this.view)}};n([r({constructOnly:!0})],c.prototype,"spatialReference",void 0),n([r({constructOnly:!0})],c.prototype,"layerSource",void 0),n([r({constructOnly:!0})],c.prototype,"view",void 0),n([r()],c.prototype,"_tilesOfInterest",void 0),n([r({readOnly:!0})],c.prototype,"_updateTilesParameters",null),n([r({readOnly:!0})],c.prototype,"updating",null),n([r({readOnly:!0})],c.prototype,"configuration",null),n([r({readOnly:!0})],c.prototype,"availability",null),n([r()],c.prototype,"_getGroundElevation",null),c=n([I("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],c);export{c as FeatureServiceSnappingSource};
