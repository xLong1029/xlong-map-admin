import{aD as g,aM as u,r as p,n as f,i as y,lj as b,fW as I,dg as w,e as o,y as h,b as R}from"./index.a33ecea7.js";import{n as T}from"./LayerView3D.f81b9bae.js";import{c as v}from"./TiledLayerView3D.7ebbd153.js";import{f as z}from"./ImageryTileLayerView.90bcba78.js";import{u as x}from"./LayerView.88bcfa48.js";import{i as S}from"./RefreshableLayerView.e0df9b3f.js";import"./rasterProjectionHelper.599a6959.js";import"./popupUtils.5d07a4ea.js";let s=class extends z(S(v(T(x)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new g("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const e=u(()=>{var t,i;return(i=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:i.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,i=this.layer.tileInfo,r=["png","png24","png32","jpg","mixed"].includes(i.format)&&t.compatibleWith(i);this.isAlignedMapTile=r;const l=r?i:t.toTileInfo();this.tileInfo=l,this.updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(e)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const e=document.createElement("canvas"),t=e.getContext("2d"),[i,r]=this.tileInfo.size;return e.width=i,e.height=r,t.clearRect(0,0,i,r),t.getImageData(0,0,i,r)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const e=this.tileInfo.lods,t=this.layer.tileInfo.lods,i=e[0].scale,r=t[t.length-1].scale;return this.levelRangeFromScaleRange(i,r)}_getfullExtent(){return this.projectFullExtent(this.view.basemapTerrain&&p(this.view.basemapTerrain.spatialReference)?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(e,t,i,r){const l=this.tileInfo,d=this._canSymbolizeInWebGL(),c={tileInfo:l,requestRawData:d,signal:f(r.signal),timeExtent:this.timeExtent,requestAsImageElement:this.isAlignedMapTile},n=await this.layer.fetchTile(e,t,i,c);if(n instanceof HTMLImageElement)return n;let m=n&&n.pixelBlock;if(y(m))return this._blankTile;if(!d&&(m=await this.layer.applyRenderer(n),y(m)))return this._blankTile;const a=new b([e,t,i],m,l.size[0],l.size[1]);return d?(a.symbolizerRenderer=this.layer.symbolizer.rendererJSON,a.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e)),a.transformGrid=n.transformGrid):a.isRendereredSource=!0,a.interpolation=this.layer.interpolation,a.bandIds=this.layer.bandIds,a}_getSymbolizerOptions(e){const t=this.tileInfo.lodAt(e).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain&&p(this.view.basemapTerrain.spatialReference)?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(e){this._canSymbolizeInWebGL()&&JSON.stringify(e.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(e.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])))}createFetchPopupFeaturesQueryGeometry(e,t){return I(e,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){return w("3d").supportsTextureFloat&&this.layer.symbolizer.canRenderInWebGL}};o([h({readOnly:!0})],s.prototype,"_blankTile",null),o([h({readOnly:!0})],s.prototype,"imageFormatIsOpaque",null),o([h({readOnly:!0})],s.prototype,"hasMixedImageFormats",null),o([h({readOnly:!0})],s.prototype,"dataLevelRange",null),s=o([R("esri.views.3d.layers.ImageryTileLayerView3D")],s);const W=s;export{W as default};
