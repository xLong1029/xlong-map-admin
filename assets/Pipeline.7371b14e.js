import{bp as Qe,rt as wt,aD as _e,ru as Ft,a0 as Ee,i as C,f9 as Re,$ as Q,r as I,fg as Tt,dl as De,ct as Ct,ae as he,a7 as E,rv as Mt,rw as it,n as le,k3 as Be,fc as qt,rx as at,ry as kt,d as nt,Y as Ae,bV as Et,nO as de,s as ge,g4 as Rt,pR as pe,rz as At,E as $t,gL as Ut,aF as Lt,cz as Ce,a4 as B,ad as ot,u as me,by as Ot,cs as Me,dI as Pt,dx as je,li as ht,e as A,y as P,b as $e,rj as Gt,d9 as qe,rA as ut,rB as dt,db as Qt,iZ as Dt,fA as ct,dq as oe,dj as te,fu as Ue,jA as Bt,X as lt,dp as gt,kl as pt,eN as re,i2 as ee,v as ft,ap as yt,c$ as _t,rC as jt,ay as zt,w as ke,fj as Nt,aM as ue,rD as Vt,p as Xt,aV as Yt,lG as Ht,lH as Zt,rE as Jt}from"./index.a33ecea7.js";import{e as ze}from"./QueryEngine.c2c9f6b5.js";import{r as Wt,c as mt,p as It,g as Kt}from"./FeatureStore2D.a4df6b29.js";import{q as Ne}from"./ogcFeatureUtils.602c90c2.js";import{b as Ve,c as D,r as es,M as ts}from"./ComputedAttributeStorage.fd12c291.js";import{s as vt}from"./CircularArray.155c6653.js";import{n as ss}from"./StreamFeatureManager.62e4c5a4.js";import{createConnection as rs}from"./createConnection.3a525467.js";import{s as is,a as Xe}from"./visualVariablesUtils.300ac9ef.js";import{o as z}from"./definitions.618cbc79.js";import"./QueryEngineCapabilities.a5e1050d.js";import"./timeSupport.2b30b818.js";import"./geojson.9a4fcbb9.js";import"./clientSideDefaults.cc23896a.js";import"./arcadeTimeUtils.fe70ea3d.js";import"./centroid.5ec46060.js";import"./color.d55e9401.js";import"./enums.a12f2baf.js";import"./number.e821bc3e.js";import"./visualVariablesUtils.88d0eb69.js";function as(i){return i==="heatmap"?Qe(()=>import("./HeatmapProcessor.f9cf0977.js"),["assets/HeatmapProcessor.f9cf0977.js","assets/index.a33ecea7.js","assets/index.56d92a5e.css","assets/definitions.618cbc79.js","assets/BaseProcessor.2849765f.js","assets/tileUtils.b5739863.js"]):Qe(()=>import("./SymbolProcessor.d5a6e008.js"),["assets/SymbolProcessor.d5a6e008.js","assets/index.a33ecea7.js","assets/index.56d92a5e.css","assets/cimAnalyzer.32b2260b.js","assets/fontUtils.401be2b9.js","assets/BidiEngine.8d79ab2c.js","assets/GeometryUtils.b33f0569.js","assets/alignmentUtils.cba6cd73.js","assets/definitions.618cbc79.js","assets/number.e821bc3e.js","assets/Rect.85ff00e1.js","assets/visualVariablesUtils.300ac9ef.js","assets/color.d55e9401.js","assets/enums.a12f2baf.js","assets/visualVariablesUtils.88d0eb69.js","assets/Matcher.91da54bc.js","assets/tileUtils.b5739863.js","assets/TurboLine.9c04f89e.js","assets/MaterialKey.23a3bc73.js","assets/GeometryUtils.b69b6363.js","assets/ExpandedCIM.1794ca2e.js","assets/BaseProcessor.2849765f.js"])}const ve=268435455;class ns{constructor(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasField(e){return this.fieldMap.has(e)}isDateField(e){var t,s;return(s=e!=null&&((t=this.fieldMap.get(e))==null?void 0:t.isDate))!=null?s:!1}getFieldIndex(e){var t;return e!=null?(t=this.fieldMap.get(e))==null?void 0:t.index:void 0}}function os(i){const s=i.asUnsafe(),r=s.getLength(),a=s.pos()+r,n={name:"",isDate:!1};for(;s.pos()<a&&s.next();)switch(s.tag()){case 1:n.name=s.getString();break;case 2:Ft(s.getEnum())==="esriFieldTypeDate"&&(n.isDate=!0);break;default:s.skip()}return n}function hs(i){return i.toLowerCase().trim()}function us(i,e,t=!1){const h=i.asUnsafe(),c=h.pos(),d=new ns;let l=0,g=0;const p=1,f=2,y=4,_=3;let v=null,b=null,m=null,x=!1;for(;h.next();)switch(h.tag()){case 1:v=h.getString();break;case 3:b=h.getString();break;case 12:m=h.processMessage(wt);break;case 9:if(d.exceededTransferLimit=h.getBool(),d.exceededTransferLimit){d.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),d.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let S=0;S<d.centroid.length;S++)d.centroid[S]=ve}break;case 13:{const S=os(i),q=S.name,k=hs(S.name),w={fieldName:q,index:l++,isDate:S.isDate};d.fields.push(w),d.fieldMap.set(S.name,w),d.fieldMap.set(k,w);break}case 15:{const S=h.getLength(),q=h.pos()+S;if(!d.exceededTransferLimit){const w=d.offsets.geometry,T=d.centroid;w.push(0),T.push(ve),T.push(ve)}!x&&d.exceededTransferLimit&&(x=!0,d.offsets.attributes=t?new Float64Array(8e3*l):new Uint32Array(8e3*l));let k=g*l;for(;h.pos()<q&&h.next();)switch(h.tag()){case p:{x?d.offsets.attributes[k++]=h.pos():d.offsets.attributes.push(h.pos());const w=h.getLength();h.skipLen(w);break}case f:if(e){const w=h.getLength(),T=h.pos()+w;for(;h.pos()<T&&h.next();)switch(h.tag()){case _:{h.getUInt32();const M=h.getSInt64(),R=h.getSInt64();d.centroid[2*g]=M,d.centroid[2*g+1]=R;break}default:h.skip()}}else{d.offsets.geometry[g]=h.pos();const w=h.getLength();d.vertexCount+=w,h.skipLen(w)}break;case y:{const w=h.getLength(),T=h.pos()+w;for(;h.pos()<T&&h.next();)switch(h.tag()){case _:{h.getUInt32();const M=h.getSInt64(),R=h.getSInt64();d.centroid[2*g]=M,d.centroid[2*g+1]=R;break}default:h.skip()}break}default:h.skip()}g++,d.hasFeatures=!0;break}default:h.skip()}const F=v||b;if(!F)throw new _e("FeatureSet has no objectId or globalId field name");return d.featureCount=g,d.fieldCount=l,d.objectIdFieldIndex=d.getFieldIndex(F),d.transform=m,d.displayIds=new Uint32Array(d.featureCount),d.groupIds=new Uint16Array(d.featureCount),h.move(c),d}const ds=!0,be=268435455,Ye=128,He=128e3,ie={small:{delta:new Int32Array(Ye),decoded:new Int32Array(Ye)},large:{delta:new Int32Array(He),decoded:new Int32Array(He)}};function Ze(i){return i<=ie.small.delta.length?ie.small:(i<=ie.large.delta.length||(ie.large.delta=new Int32Array(Math.round(1.25*i)),ie.large.decoded=new Int32Array(Math.round(1.25*i))),ie.large)}function Je(i){return i.toLowerCase().trim()}function cs(i){try{const t=new Ct(new Uint8Array(i),new DataView(i));for(;t.next();){if(t.tag()===2)return ls(t.getMessage());t.skip()}}catch(e){const t=new _e("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});he.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function ls(i){for(;i.next();){if(i.tag()===1)return i.getMessage();i.skip()}return null}function gs(i){const c=i.getLength(),d=i.pos()+c;for(;i.pos()<d&&i.next();)switch(i.tag()){case 1:return i.getString();case 2:return i.getFloat();case 3:return i.getDouble();case 4:return i.getSInt32();case 5:return i.getUInt32();case 6:return i.getInt64();case 7:return i.getUInt64();case 8:return i.getSInt64();case 9:return i.getBool();default:return i.skip(),null}return null}function ps(i,e,t,s,r,a){return .5*Math.abs(i*s+t*a+r*e-i*a-t*e-r*s)}function xe(i,e,t,s){return i*s-t*e===0&&i*t+e*s>0}class fe extends Ve{static fromBuffer(e,t,s=!1){const r=t.geometryType,a=cs(e),n=us(a,r==="esriGeometryPoint",s),o=Ve.createInstance();return new fe(o,a,n,t)}constructor(e,t,s,r){super(e,r),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=r.geometryType,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints=r.geometryType==="esriGeometryPoint"}get geometryType(){return this._geometryType}get _size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}hasField(e){return this._header.hasField(e)||this._header.hasField(Je(e))}getFieldNames(){return this._header.fields.map(e=>e.fieldName)}getSize(){return this._size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach(({index:t})=>{e+=this._readAttributeAtIndex(t)+"."}),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){var e;if(this._cache.legacyFeature===void 0){const t=this.readCentroid(),s={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:(e=t&&{x:t.coords[0],y:t.coords[1]})!=null?e:null};return this._cache.legacyFeature=s,s}return this._cache.legacyFeature}readOptimizedFeature(){if(this._cache.optFeature===void 0){const e=new Ee(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return C(t)?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return C(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readGeometry(e);return Re(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(this._cache.unquantGeometry===void 0){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;const s=Ze(t.coords.length).decoded,r=t.clone(s),a=r.coords;let n=0;for(const o of r.lengths){for(let u=1;u<o;u++){const h=2*(n+u),c=2*(n+u-1);a[h]+=a[c],a[h+1]+=a[c+1]}n+=o}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===be)return null;const r=this.getXHydrated(),a=this.getYHydrated();return new Q([],[r,a])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),s=this.getQuantizationTransform();return I(s)&&Tt(t,t,this.hasZ,this.hasM,s),t}readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===be)return null;const s=this.getX(),r=this.getY();t=new Q([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0){const a=this._readServerCentroid();if(!a)return null;const[n,o]=a.coords;return this.createQuantizedExtrudedQuad(n,o)}r.move(s);try{if(t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r),t===null){const a=this._readServerCentroid();if(!a)return null;const[n,o]=a.coords;return this.createQuantizedExtrudedQuad(n,o)}}catch(a){return console.error("Failed to parse geometry!",a),null}}return this._cache.geometry=t,t}return this._cache.geometry}readCentroid(){if(this._cache.centroid===void 0){let e;return e=this._computeCentroid(),e||(e=this._readServerCentroid()),this._cache.centroid=e!=null?e:void 0,e!=null?e:null}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new fe(this.instance,e,this._header,this.fullSchema());return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readAttribute(e,t){const s=this._header.hasField(e)?e:Je(e),r=this._header.getFieldIndex(s);if(r==null)return;const a=this._readAttributeAtIndex(r);return!t||a==null?a:this._header.isDateField(s)?new Date(a):a}_readAttributes(){const e={};return this._header.fields.forEach(({fieldName:t,index:s})=>{e[t]=this._readAttributeAtIndex(s)}),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),gs(s)}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex]+this._tx,t=this._header.centroid[2*this._featureIndex+1]+this._ty;return e===be?null:new Q([],[e,t])}_parseGeometry(e){const r=e.asUnsafe(),a=r.getLength(),n=r.pos()+a,o=[],u=[];for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const h=r.getUInt32(),c=r.pos()+h;for(;r.pos()<c;)u.push(r.getUInt32());break}case 3:{const h=r.getUInt32(),c=r.pos()+h;for(o.push(r.getSInt32()+this._tx),o.push(r.getSInt32()+this._ty),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();r.pos()<c;)o.push(r.getSInt32()),o.push(r.getSInt32()),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();break}default:r.skip()}return new Q(u,o)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),a=r.getLength(),n=r.pos()+a,o=[],u=[];let h=0,c=0,d=null,l=0;const g=this.geometryType==="esriGeometryPolygon";for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const p=r.getUInt32(),f=r.pos()+p;for(;r.pos()<f;){const y=r.getUInt32();o.push(y),h+=y}d=Ze(2*h).delta;break}case 3:{r.getUInt32();const p=2+(this.hasZ?1:0)+(this.hasM?1:0);De(d);for(const f of o)if(c+p*f>d.length)for(let y=0;y<f;y++)r.getSInt32(),r.getSInt32(),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();else if(g&&ds){const y=this.getAreaSimplificationThreshold(f,this._header.vertexCount);let _=2,v=1;const b=!1;let m=r.getSInt32(),x=r.getSInt32();d[c++]=m,d[c++]=x,this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();let F=r.getSInt32(),S=r.getSInt32();for(this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();_<f;){let q=r.getSInt32(),k=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();const w=m+F,T=x+S;ps(m,x,w,T,w+q,T+k)>=y?(l+=-.5*(w-m)*(T+x),v>1&&xe(d[c-2],d[c-1],F,S)?(d[c-2]+=F,d[c-1]+=S):(d[c++]=F,d[c++]=S,v++),m=w,x=T):(q+=F,k+=S),F=q,S=k,_++}v<3||b?c-=2*v:(l+=-.5*(m+F-m)*(x+S+x),xe(d[c-2],d[c-1],F,S)?(d[c-2]+=F,d[c-1]+=S,u.push(v)):(d[c++]=F,d[c++]=S,u.push(++v)))}else{let y=0,_=r.getSInt32(),v=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),d[c++]=_,d[c++]=v,y+=1;for(let b=1;b<f;b++){const m=r.getSInt32(),x=r.getSInt32(),F=_+m,S=v+x;l+=-.5*(F-_)*(S+v),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),b>2&&xe(d[c-2],d[c-1],m,x)?(d[c-2]+=m,d[c-1]+=x):(d[c++]=m,d[c++]=x,y+=1),_=F,v=S}u.push(y)}break}default:r.skip()}if(this._cache.area=l,!u.length)return null;if(this._tx||this._ty){let p=0;De(d);for(const f of u)d[2*p]+=this._tx,d[2*p+1]+=this._ty,p+=f}return new Q(u,d)}}class Ie{constructor(e){this.service=e}destroy(){}}function fs(i){return Array.isArray(i.source)}function ys(i){return(i==null?void 0:i.type)==="ogc-source"}function _s(i){const{capabilities:e}=i;return ys(i.source)?new xs(i):fs(i)?new Is(i):e.query.supportsFormatPBF&&E("featurelayer-pbf")?new vs(i):new bs(i)}async function ms(i){const e=new kt;return await e.open(i,{}),e}class Is extends Ie{constructor(e){super(e),this._portsOpen=ms(e.source).then(t=>this.client=t)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return D.fromFeatureSet(s,this.service)}}class vs extends Ie{async executeQuery(e,t){const{data:s}=await Mt(this.service.source,e,t),r=!e.quantizationParameters;return fe.fromBuffer(s,this.service,r)}}class bs extends Ie{async executeQuery(e,t){var h;const{source:s,capabilities:r,spatialReference:a,objectIdField:n,geometryType:o}=this.service;if(I(e.quantizationParameters)&&!r.query.supportsQuantization){const c=e.clone(),d=it(le(c.quantizationParameters));c.quantizationParameters=null;const{data:l}=await Be(s,c,a,t),g=qt(l,n);return at(d,g),D.fromOptimizedFeatureSet(g,this.service)}const{data:u}=await Be(s,e,this.service.spatialReference,t);return o==="esriGeometryPoint"&&(u.features=(h=u.features)==null?void 0:h.filter(c=>{if(I(c.geometry)){const d=c.geometry;return Number.isFinite(d.x)&&Number.isFinite(d.y)}return!0})),D.fromFeatureSet(u,this.service)}}class xs extends Ie{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){const a=e.clone(),n=it(le(a.quantizationParameters));a.quantizationParameters=null;const o=await Ne(this.service.source,e,t);return at(n,o),D.fromOptimizedFeatureSet(o,this.service)}const r=await Ne(this.service.source,e,t);return D.fromOptimizedFeatureSet(r,this.service)}}class ${constructor(){this.version=0,this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new $;for(const s in e){const r=e[s];if(typeof r=="object")for(const a in r){const n=r[a];t[s][a]=n}t[s]=r}return t}static empty(){return $.create({})}static all(){return $.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}unset(e){this.version=e.version,e.source&&(this.source=!1),e.targets.feature&&(this.targets.feature=!1),e.targets.aggregate&&(this.targets.aggregate=!1),e.storage.filters&&(this.storage.filters=!1),e.storage.data&&(this.storage.data=!1),e.mesh&&(this.mesh=!1),e.queryFilter&&(this.queryFilter=!1)}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+=`-> (20) Mesh needs update
`;for(const r of this.why.mesh)t+=`    + ${r}
`}if(this.source){e+=10,t+=`-> (10) The source needs update
`;for(const r of this.why.source)t+=`    + ${r}
`}this.targets.feature&&(e+=5,t+=`-> (5) Feature target parameters changed
`),this.storage.filters&&(e+=5,t+=`-> (5) Feature filter parameters changed
`),this.targets.aggregate&&(e+=4,t+=`-> (4) Aggregate target parameters changed
`),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{queryFilter:this.queryFilter,source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh}}}class Ss{constructor(e,t){this.requests={done:new Array,stream:new vt(10)},this._edits=null,this._abortController=new AbortController,this._version=0,this._done=!1,this.didSend=!1,this.tile=e,this._version=t}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get empty(){return!this.requests.done.length&&C(this.edits)}get edits(){return this._edits}get done(){return this._done}end(){this._done=!0}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach(t=>t.message.status.unset(e)),this._version=e.version,I(this._edits)&&this._edits.status.unset(e)}add(e){var t;e.message.status=(t=e.message.status)!=null?t:$.empty(),e.message.status.version=this._version,E("esri-2d-update-debug")&&console.debug(this.tile.id,"DataTileSubscription:add",this._version),e.message.end&&this.requests.done.forEach(s=>{I(s.message)&&s.message.end&&(s.message.end=!1)}),this.requests.done.push(e)}edit(e,t){const s=e.getQuantizationTransform(),r=e.fullSchema(),a=Array.from(e.features()).filter(I),n=[...t,...a.map(o=>o.objectId)];if(this.removeIds(n),this._invalidate(),C(this._edits))return void(this._edits={type:"append",addOrUpdate:D.fromOptimizedFeatures(a,r,le(s)),id:this.tile.id,status:$.empty(),end:!0});this.requests.done.forEach(o=>o.message.end=!1),le(this._edits.addOrUpdate).append(e.features())}*readers(){for(const{message:e}of this.requests.done)I(e.addOrUpdate)&&(yield e.addOrUpdate);I(this._edits)&&I(this._edits.addOrUpdate)&&(yield this._edits.addOrUpdate)}_invalidate(){for(const e of this.requests.done)e.message.status=$.empty();I(this._edits)&&(this._edits.status=$.empty())}removeIds(e){this._invalidate();for(const{message:t}of this.requests.done){const s=t.addOrUpdate;I(s)&&(s.removeIds(e),s.isEmpty&&(E("esri-2d-update-debug")&&console.debug("Removing FeatureSetReader"),t.addOrUpdate=null))}I(this._edits)&&I(this._edits.addOrUpdate)&&this._edits.addOrUpdate.removeIds(e),this.requests.done=this.requests.done.filter(t=>t.message.addOrUpdate||t.message.end)}abort(){this._abortController.abort()}}function ws(i,e){const t=new Set;return i&&i.forEach(s=>t.add(s)),e&&e.forEach(s=>t.add(s)),t.has("*")?["*"]:Array.from(t)}class bt extends nt{constructor(e){super(),this.events=new Ae,this._resolver=Et(),this._didEdit=!1,this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}async _onMessage(e){var r,a;const t=this._subscriptions.get(e.id);if(!t)return;const s={...e,remove:(r=e.remove)!=null?r:[],status:(a=e.status)!=null?a:$.empty()};return de(this._onTileUpdateMessage(s,t.options))}update(e,t){var u;const s=t.fields.length;t.outFields=ws((u=this._schema)==null?void 0:u.outFields,t.outFields),t.outFields=t.outFields.length>=.75*s?["*"]:t.outFields,t.outFields.sort();const r=ge(this._schema,t);if(!r)return;E("esri-2d-update-debug")&&console.debug("Applying Update - Source:",r);const a="orderByFields"in this._serviceInfo&&this._serviceInfo.orderByFields?this._serviceInfo.orderByFields:this._serviceInfo.objectIdField+" ASC",n={returnCentroid:this._serviceInfo.geometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:this._serviceInfo.type!=="stream"&&this._serviceInfo.timeReferenceUnknownClient,outFields:t.outFields,outSpatialReference:this._outSR,orderByFields:[a],where:t.definitionExpression||"1=1",gdbVersion:t.gdbVersion,historicMoment:t.historicMoment,timeExtent:t.timeExtent?Rt.fromJSON(t.timeExtent):null},o=this._schema&&pe(r,"outFields");this._schema&&At(r,["timeExtent","definitionExpression","gdbVersion","historicMoment","customParameters"])&&(e.why.mesh.push("Layer filter and/or custom parameters changed"),e.why.source.push("Layer filter and/or custom parameters changed"),e.mesh=!0,e.source=!0,e.queryFilter=!0),o&&(e.why.source.push("Layer required fields changed"),e.source=!0),ge(n,this._queryInfo)&&(this._queryInfo=n),this._schema=t,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){if(e.queryFilter||e.source&&this._didEdit)return this.refresh(e.version),void(this._didEdit=!1);this._subscriptions.forEach(t=>t.applyUpdate(e)),await this.resend()}refresh(e,t){for(const s of this._tiles())this.unsubscribe(s),this.subscribe(s,e)}subscribe(e,t){const s=new Ss(e,t);this._subscriptions.set(e.id,s)}unsubscribe(e){const t=this.getSubscription(e.id);I(t)&&t.abort(),this._subscriptions.delete(e.id)}createQuery(e={}){const t=this._queryInfo.historicMoment?new Date(this._queryInfo.historicMoment):null;return new $t({...this._queryInfo,historicMoment:t,...e})}getSubscription(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e,t){throw new Error("Service does not support query")}*_tiles(){const e=Array.from(this._subscriptions.values());for(const t of e)yield t.tile}async edit(e,t){const s=Array.from(this._subscriptions.values()),r=s.map(({tile:a})=>a);for(const a of s)a.removeIds(t);if(e.length){const a=r.map(o=>{const u=this.createTileQuery(o);return u.objectIds=e,{tile:o,query:u}}).map(async({tile:o,query:u})=>({tile:o,result:await this.query(u,{query:{tile:E("esri-tiles-debug")?o.id.replace(/\//g,"."):void 0}}),query:u})),n=(await Ut(a)).map(async({tile:o,result:u})=>{if(!u.hasFeatures&&!t.length&&!e.length)return;const h=this._subscriptions.get(o.key.id);h&&h.edit(u,e)});await Lt(n)}this._didEdit=!0}}const Fs=4;class Le extends bt{constructor(e){super(e),this.type="feature",this.mode="on-demand",this._adapter=_s(e.serviceInfo),this._queue=new Ce({concurrency:8,process:async t=>{var s,r;if(B(t),I(t.tile)){const a=t.tile.key.id,{signal:n}=t,o=E("esri-tiles-debug")?{tile:a.replace(/\//g,"."),depth:t.depth}:void 0,u=await this._adapter.executeQuery(t.query,{signal:n,query:{...o,...(s=this._schema)==null?void 0:s.customParameters}});return u.level=t.tile.key.level,u}return this._adapter.executeQuery(t.query,{...t,query:(r=this._schema)==null?void 0:r.customParameters})}}),this._patchQueue=new Ce({concurrency:8,process:async t=>{var s,r;if(B(t),I(t.tile)){const a=t.tile.key.id,{signal:n}=t,o=E("esri-tiles-debug")?{tile:a.replace(/\//g,"."),depth:t.depth}:void 0,u=await this._adapter.executeQuery(t.query,{signal:n,query:{...o,...(s=this._schema)==null?void 0:s.customParameters}});return u.level=t.tile.key.level,u}return this._adapter.executeQuery(t.query,{...t,query:(r=this._schema)==null?void 0:r.customParameters})}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}get updating(){return!!this._queue.length||Array.from(this._subscriptions.values()).some(e=>!e.done)}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?Fs:null}get maxPageSize(){var t;const{query:e}=this._serviceInfo.capabilities;return((t=e.maxRecordCount)!=null?t:8e3)*ot(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e,t){super.subscribe(e,t);const s=this._subscriptions.get(e.id);this._fetchDataTile(e).catch(r=>{me(r)||he.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource").error(new _e("mapview-query-error","Encountered error when fetching tile",{tile:e,error:r}))}).then(()=>s.end())}unsubscribe(e){super.unsubscribe(e)}readers(e){return this._subscriptions.get(e).readers()}async query(e,t={}){var r,a;const s=(r=t.query)!=null?r:{};return this._adapter.executeQuery(e,{...t,query:{...s,...(a=this._schema)==null?void 0:a.customParameters}})}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await Ot(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}createTileQuery(e,t={}){var n;const s=this._serviceInfo.geometryType,r=this.createQuery(t);r.quantizationParameters=(n=t.quantizationParameters)!=null?n:e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._serviceInfo.capabilities.query.supportsQuantization?s==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*E("feature-polyline-generalization-factor")):s!=="esriGeometryPolyline"&&s!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,s==="esriGeometryPolyline"&&(r.maxAllowableOffset*=E("feature-polyline-generalization-factor")));const a=this._serviceInfo.capabilities.query;return r.defaultSpatialReferenceEnabled=a.supportsDefaultSpatialReference,r.compactGeometryEnabled=a.supportsCompactGeometry,r}async _executePatchQuery(e,t,s,r){const a=t.clone();a.outFields=[this._serviceInfo.objectIdField,...s],a.returnCentroid=!1,a.returnGeometry=!1;const n=I(a.start)?a.start/8e3:0,o=r.signal;return this._patchQueue.push({tile:e,query:a,signal:o,depth:n})}async _resend(e,t){const{query:s,message:r}=e,a=I(s.outFields)?s.outFields:[],n=this._queryInfo.outFields,o=n.filter(u=>!a.includes(u));if(C(r.addOrUpdate))this._onMessage({...r,type:"append"});else if(o.length)try{const u=this._subscriptions.get(r.id).tile,h=await this._executePatchQuery(u,s,o,t);B(t),s.outFields=n,r.addOrUpdate.joinAttributes(h),this._onMessage({...r,end:r.end,type:"append"})}catch{}else this._onMessage({...r,type:"append"})}async _resendSubscription(e){if(E("esri-2d-update-debug")&&console.debug(e.tile.id,"Resend Subscription"),e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"});const t=e.signal;for(const s of e.requests.done)await this._resend(s,{signal:t});return I(e.edits)?this._onMessage(e.edits):void 0}async resend(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map(t=>this._resendSubscription(t)))}}const We=E("esri-mobile"),Ke={maxDrillLevel:We?1:4,maxRecordCountFactor:We?1:3};class Ts extends Le{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),r=s.signal,a=e.getQuantizationParameters();let n=0;const o=async(u,h)=>{const c=this._queryInfo,d=this.createTileQuery(u,{maxRecordCountFactor:t?Ke.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:a});n++;try{const l=await this._queue.push({tile:e,query:d,signal:r,depth:h});if(n--,B(r),!l)return;if(c!==this._queryInfo)return void o(u,h);if(l.exceededTransferLimit&&h<Ke.maxDrillLevel){for(const p of u.createChildTiles())o(p,h+1);return}const g={id:e.id,addOrUpdate:l,end:n===0,type:"append"};s.add({query:d,message:g}),this._onMessage(g)}catch(l){me(l)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};o(e,0)}}class Cs extends Le{constructor(e){super(e)}async _fetchDataTile(e){const r=this._subscriptions.get(e.key.id);let a=!1,n=0,o=0;const u=(d,l)=>{o--,B(r);const g=e.id,p=d.reader,f=d.query;if(!p.exceededTransferLimit){if(a=!0,l!==0&&!p.hasFeatures){const v={id:g,addOrUpdate:p,end:o===0,type:"append"};return r.add({message:v,query:f}),void this._onMessage(v)}const _={id:g,addOrUpdate:p,end:o===0,type:"append"};return r.add({message:_,query:f}),void this._onMessage(_)}const y={id:g,addOrUpdate:p,end:a&&o===0,type:"append"};r.add({message:y,query:f}),this._onMessage(y)};let h=0,c=0;for(;!a&&c++<20;){let d;for(let l=0;l<h+1;l++){const g=n++;o++,d=this._fetchDataTilePage(e,g,r).then(p=>p&&u(p,g)).catch(p=>{a=!0,me(p)||(he.getLogger("esri.views.2d.layers.features.sources.PagedFeatureSource").error(new _e("mapview-query-error","Encountered error when fetching tile",{tile:e,error:p})),this._onMessage({id:e.id,addOrUpdate:null,end:a,type:"append"}))})}await d,B(r),h=Math.min(h+2,6)}}async _fetchDataTilePage(e,t,s){B(s);const r=this._queryInfo,a={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};I(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createTileQuery(e,a);try{const o=s.signal,u=await this._queue.push({tile:e,query:n,signal:o,depth:t});return B(s),u?r!==this._queryInfo?this._fetchDataTilePage(e,t,s):{reader:u,query:n}:null}catch(o){return Me(o),null}}}function Ms(i,e,t){const s=i.getXHydrated(),r=i.getYHydrated(),a=e.getColumnForX(s),n=Math.floor(e.normalizeCol(a));return`${t}/${Math.floor(e.getRowForY(r))}/${n}`}function Se(i,e){if(C(i))return null;const t=e.transform,s=i.getQuantizationTransform();if(C(s)){const[y,_]=t.scale,[v,b]=t.translate,m=-v/y,x=1/y,F=b/_,S=1/-_;return i.transform(m,F,x,S)}const[r,a]=s.scale,[n,o]=s.translate,[u,h]=t.scale,[c,d]=t.translate,l=r/u,g=(n-c)/u,p=a/h,f=(-o+d)/h;return i.transform(g,f,l,p)}class qs extends Le{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new Pt(1e3),this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){var s;super.update(e,t),this._featureCount==null&&(this._featureCount=t.initialFeatureCount),I(t.changedFeatureCount)&&(this._featureCount=t.changedFeatureCount),this._hasAggregates=!!((s=e.targets)!=null&&s.aggregate)}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e){const s=je(this._featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach(r=>r.clear()),this._downloadPromise=this._download(s),void await this._downloadPromise}const t=this._queries.map(({query:s,reader:r})=>this._sendPatchQuery(s,r));await Promise.all(t),this._subscriptions.forEach(s=>{s.requests.done.forEach(r=>this._onMessage(r.message))})}async refresh(e,t){t&&(this._featureCount=t.featureCount),await this.resend(!0)}async _sendPatchQuery(e,t){const s=I(e.outFields)?e.outFields:[],r=this._queryInfo.outFields,a=r.filter(h=>!s.includes(h));if(!a.length)return;const n=e.clone(),o=this._signal;n.returnGeometry=!1,n.returnCentroid=!1,n.outFields=a,e.outFields=r;const u=await this._queue.push({query:n,depth:0,signal:o});B({signal:o}),t.joinAttributes(u)}async _fetchDataTile(e){if(!this._downloadPromise){const u=je(this._featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(u)}const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let u=0;u<r;u++){const h=Se(t[u],e),c={type:"append",id:e.id,addOrUpdate:h,end:!1,status:$.empty()};s.add({query:null,message:c}),this._hasAggregates||await ht(1),this._onMessage(c)}const a=Se(r>=0?t[r]:null,e),n=this._didSendEnd,o={type:"append",id:e.id,addOrUpdate:a,end:n,status:$.empty()};s.add({query:null,message:o}),this._onMessage(o)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),a=Array.from({length:r},(n,o)=>o).sort((n,o)=>this._random.getInt()-this._random.getInt()).map(n=>this._downloadPage(n,t,s));await Promise.all(a),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(t){he.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource").error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",t)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const r=this.pageSize,a={start:e*r,num:r,cacheHint:!0};I(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createQuery(a),o=this._signal,u=await this._queue.push({query:n,depth:e,signal:o});B({signal:o}),this._queries.push({query:n,reader:u}),this._store.insert(u),s.add(u.instance);const h=u.getCursor();for(;h.next();)t.set(h.getDisplayId());this._send(u)}_send(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,r=new Set,a=new Map;this._subscriptions.forEach(n=>{var l;const o=n.tile;s.set(o.key.id,null),t=o.tileInfoView,r.add(o.level);const{row:u,col:h}=o.key,c=`${o.level}/${u}/${h}`,d=(l=a.get(c))!=null?l:[];d.push(n),a.set(c,d)});for(const n of r){const o=t.getLODInfoAt(n),u=e.getCursor();for(;u.next();){const h=Ms(u,o,n),c=u.getIndex();if(a.has(h))for(const d of a.get(h)){const l=d.tile.id;let g=s.get(l);C(g)&&(g=[],s.set(l,g)),g.push(c)}}}s.forEach((n,o)=>{if(I(n)){const u=this._subscriptions.get(o),h={type:"append",id:o,addOrUpdate:Se(Wt.from(e,n),u.tile),end:!1,status:$.empty()};u.add({query:null,message:h}),this._onMessage(h)}})}_sendEnd(){this._subscriptions.forEach(e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:$.empty()};e.add({query:null,message:t}),this._onMessage(t)}),this._didSendEnd=!0}}const ks=2500;function Es(i,e){const t=i.weakClone();if(I(i.geometry)){const s=ut(e,i.geometry.coords[0]),r=dt(e,i.geometry.coords[1]);t.geometry=new Q([],[s,r])}return t}function Rs(i){return i==="esriGeometryPoint"?Es:(e,t)=>{const s=e.weakClone(),r=new Q,a=!1,n=!1,o=qe(r,e.geometry,a,n,i,t,!1,!1);return s.geometry=o,s}}function As(i){return i==="esriGeometryPoint"?e=>I(e.geometry)?{minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]}:{minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}:e=>{let t=1/0,s=1/0,r=-1/0,a=-1/0;return I(e.geometry)&&e.geometry.forEachVertex((n,o)=>{t=Math.min(t,n),s=Math.min(s,o),r=Math.max(r,n),a=Math.max(a,o)}),{minX:t,minY:s,maxX:r,maxY:a}}}function $s(i,e){const t=Qt(9,As(e));return t.load(i),t}function Us(i,e){return i.search({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]})}class Ls{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map,this._index=null}get _features(){const e=[];return this._objectIdToFeature.forEach(t=>e.push(t)),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=$s(this._features,this._geometryType)),Us(this._index,e)}clear(){this._index=null,this._objectIdToFeature.clear()}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}let ne=class extends bt{constructor(i){super(i),this.type="stream",this._updateIntervalId=0,this._level=0,this._updateInfo={websocket:0,client:0},this._isPaused=!1,this._inUpdate=!1;const{outSR:e}=i,{geometryType:t,objectIdField:s,timeInfo:r,purgeOptions:a,source:n,spatialReference:o,serviceFilter:u,maxReconnectionAttempts:h,maxReconnectionInterval:c,updateInterval:d,customParameters:l,enabledEventTypes:g}=i.serviceInfo,p=new Ls(this._onUpdate.bind(this),t),f=new ss(p,s,r,a),y=rs(n,o,e,t,u,h,c,l!=null?l:{});this._store=p,this._manager=f,this._connection=y,this._quantize=Rs(t),this._enabledEventTypes=new Set(g),this._handles=[this._connection.on("data-received",_=>this._onFeature(_)),this._connection.on("message-received",_=>this._onWebSocketMessage(_))],this._initUpdateInterval=()=>{let _=performance.now();this._updateIntervalId=setInterval(()=>{const v=performance.now(),b=v-_;if(b>ks){_=v;const m=Math.round(this._updateInfo.client/(b/1e3)),x=Math.round(this._updateInfo.websocket/(b/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:m,websocket:x})}i.canAcceptRequest()&&!this._inUpdate&&this._manager.checkForUpdates()},d)},this._initUpdateInterval()}destroy(){super.destroy(),this._clearUpdateInterval(),this._handles.forEach(i=>i.remove()),this._connection.destroy()}_fetchDataTile(){}get connectionStatus(){var i;return this._isPaused?"paused":(i=this._connection)==null?void 0:i.connectionStatus}get errorString(){var i;return(i=this._connection)==null?void 0:i.errorString}updateCustomParameters(i){this._connection.updateCustomParameters(i)}pauseStream(){this._isPaused||(this._isPaused=!0,this._clearUpdateInterval())}resumeStream(){this._isPaused&&(this._isPaused=!1,this._initUpdateInterval())}sendMessageToSocket(i){this._connection.sendMessageToSocket(i)}sendMessageToClient(i){this._connection.sendMessageToClient(i)}enableEvent(i,e){e?this._enabledEventTypes.add(i):this._enabledEventTypes.delete(i)}get updating(){return!1}subscribe(i,e){super.subscribe(i,e);const t=this._subscriptions.get(i.id);this._level=i.level;const s=this._getTileFeatures(i);this._onMessage({type:"append",id:i.key.id,addOrUpdate:s,end:!0}),t.didSend=!0}unsubscribe(i){super.unsubscribe(i)}*readers(i){const e=this._subscriptions.get(i),{tile:t}=e;yield this._getTileFeatures(t)}createTileQuery(i){throw new Error("Service does not support tile  queries")}async resend(){this._subscriptions.forEach(i=>{const{tile:e}=i,t={type:"append",id:e.id,addOrUpdate:this._getTileFeatures(e),end:!0};this._onMessage(t)})}_getTileFeatures(i){const e=this._store.search(i).map(t=>this._quantize(t,i.transform));return D.fromOptimizedFeatures(e,this._serviceInfo,i.transform)}_onWebSocketMessage(i){if(this._enabledEventTypes.has("message-received")&&this.events.emit("message-received",i),"type"in i)switch(i.type){case"delete":if(i.objectIds)for(const e of i.objectIds)this._manager.removeById(e);if(i.trackIds)for(const e of i.trackIds)this._manager.removeByTrackId(e);break;case"clear":this._store.forEach(e=>this._manager.removeById(e.objectId))}}_onFeature(i){this._updateInfo.websocket++;try{this._enabledEventTypes.has("data-received")&&this.events.emit("data-received",i);const e=Gt(i,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(e)}catch{}}_clearUpdateInterval(){clearInterval(this._updateIntervalId),this._updateIntervalId=0}async _onUpdate(i,e){this._inUpdate=!0;try{I(i)&&(this._updateInfo.client+=i.length),this._subscriptions.forEach((s,r)=>{s.didSend&&s.tile.level===this._level&&this._onMessage({type:"append",id:r,addOrUpdate:null,clear:!0,end:!1})});const t=[];this._subscriptions.forEach((s,r)=>{if(!s.didSend||s.tile.level!==this._level)return;const a=s.tile,n={type:"append",id:r,addOrUpdate:this._getTileFeatures(a),remove:[],end:!1,status:$.empty()};s.requests.stream.enqueue(n),t.push(this._onMessage(n))}),await Promise.all(t),this._subscriptions.forEach((s,r)=>{s.didSend&&s.tile.level===this._level&&this._onMessage({type:"append",id:r,addOrUpdate:null,end:!0})})}catch{}this._inUpdate=!1}};A([P()],ne.prototype,"_isPaused",void 0),A([P()],ne.prototype,"connectionStatus",null),A([P()],ne.prototype,"errorString",null),ne=A([$e("esri.views.2d.layers.features.sources")],ne);function Os(i,e,t,s,r,a){const n=Ps(i,e,t,s,r,a);switch(n.type){case"feature":switch(n.origin){case"hosted":case"local":return new Cs(n);case"snapshot":return new qs(n);default:return new Ts(n)}case"stream":return new ne(n)}}function Ps(i,e,t,s,r,a){switch(i.type){case"snapshot":return{type:"feature",origin:"snapshot",featureCount:ot(i.featureCount,0),serviceInfo:i,onMessage:s,outSR:e,tileInfoView:t,canAcceptRequest:r,store:a};case"stream":return{type:"stream",serviceInfo:i,onMessage:s,outSR:e,canAcceptRequest:r};case"memory":case"on-demand":return{type:"feature",serviceInfo:i,onMessage:s,outSR:e,origin:n(i.source),tileInfoView:t,canAcceptRequest:r}}function n(o){return Array.isArray(o)?"local":"path"in o&&Dt(o.path)?"hosted":"unknown"}}function Gs(i,e){let t=-90,s=90,r=-180,a=180;for(let n=0;n<e;n++){const o=Math.ceil((n+1)/2),u=Math.floor((n+1)/2),h=1-n%2,c=30-(3*o+2*u),d=30-(2*o+3*u),l=3*h+2*(1-h),g=2*h+3*(1-h),p=3*h+7*(1-h)<<d,f=(7*h+3*(1-h)<<c&i.geohashX)>>c,y=(p&i.geohashY)>>d;for(let _=l-1;_>=0;_--){const v=(r+a)/2,b=f&1<<_?1:0;r=(1-b)*r+b*v,a=(1-b)*v+b*a}for(let _=g-1;_>=0;_--){const v=(t+s)/2,b=y&1<<_?1:0;t=(1-b)*t+b*v,s=(1-b)*v+b*s}}return[r,t,a,s]}function ce(i,e,t,s){s%2&&(s+=1);let r=0,a=0,n=-90,o=90,u=-180,h=180;for(let c=0;c<s/2;c++){for(let d=0;d<5;d++){const l=(u+h)/2,g=t>l?1:0;r|=g<<29-(d+5*c),u=(1-g)*u+g*l,h=(1-g)*l+g*h}for(let d=0;d<5;d++){const l=(n+o)/2,g=e>l?1:0;a|=g<<29-(d+5*c),n=(1-g)*n+g*l,o=(1-g)*l+g*o}}i.geohashX=r,i.geohashY=a}function ye(i,e,t,s,r){r%2&&(r+=1);let a=0,n=0,o=-90,u=90,h=-180,c=180;for(let d=0;d<r/2;d++){for(let l=0;l<5;l++){const g=(h+c)/2,p=s>g?1:0;a|=p<<29-(l+5*d),h=(1-p)*h+p*g,c=(1-p)*g+p*c}for(let l=0;l<5;l++){const g=(o+u)/2,p=t>g?1:0;n|=p<<29-(l+5*d),o=(1-p)*o+p*g,u=(1-p)*g+p*u}}i[2*e]=a,i[2*e+1]=n}class xt{constructor(e=[],t,s=8096){this.onRelease=r=>{},this._nodes=0,this._root=new we(this,0,0,0),this._statisticFields=e,this._pool=s?new vt(8096):null,this._serviceInfo=t}destroy(){this.clear()}_acquire(e,t,s){this._nodes++;let r=null;return I(this._pool)&&(r=this._pool.dequeue()),I(r)?r.realloc(e,t,s):r=new we(this,e,t,s),r}_release(e){this.onRelease(e),this._nodes--,I(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return ct(this._pool,0,e=>e.size)}get depth(){let e=0;return this.forEach(t=>e=Math.max(e,t.depth)),e}dropLevels(e){this.forEach(t=>{if(t.depth>=e)for(let s=0;s<t.children.length;s++){const r=t.children[s];r&&this._release(r)}}),this.forEach(t=>{if(t.depth>=e)for(let s=0;s<t.children.length;s++)t.children[s]=null})}clear(){this.forEach(e=>this._release(e)),this._root=new we(this,0,0,0)}insert(e,t,s=0){const r=D.fromOptimizedFeatures([e],this._serviceInfo).getCursor();r.next();const a=r.readGeometry();if(!a)return;const[n,o]=a.coords,u=e.geohashX,h=e.geohashY;this.insertCursor(r,e.displayId,n,o,u,h,t,s)}insertCursor(e,t,s,r,a,n,o,u=0){let h=this._root,c=0,d=0,l=0;for(;h!==null;){if(h.depth>=u&&(h.count+=1,h.xTotal+=s,h.yTotal+=r,h.xGeohashTotal+=a,h.yGeohashTotal+=n,h.referenceId=t,this._updateStatisticsCursor(e,h,1)),c>=o)return void h.add(t);const g=Math.ceil((c+1)/2),p=Math.floor((c+1)/2),f=1-c%2,y=30-(3*g+2*p),_=30-(2*g+3*p),v=(a&7*f+3*(1-f)<<y)>>y,b=(n&3*f+7*(1-f)<<_)>>_,m=v+b*(8*f+4*(1-f));d=d<<3*f+2*(1-f)|v,l=l<<2*f+3*(1-f)|b,h.children[m]==null&&(h.children[m]=this._acquire(d,l,c+1)),c+=1,h=h.children[m]}}remove(e,t){const s=D.fromOptimizedFeatures([e],this._serviceInfo).getCursor();s.next();const r=s.readGeometry();if(!r)return;const[a,n]=r.coords,o=e.geohashX,u=e.geohashY;this.removeCursor(s,a,n,o,u,t)}removeCursor(e,t,s,r,a,n){let o=this._root,u=0;for(;o!==null;){if(o.count-=1,o.xTotal-=t,o.yTotal-=s,o.xGeohashTotal-=r,o.yGeohashTotal-=a,this._updateStatisticsCursor(e,o,-1),u>=n)return void o.remove(e.getDisplayId());const h=Math.ceil((u+1)/2),c=Math.floor((u+1)/2),d=1-u%2,l=30-(3*h+2*c),g=30-(2*h+3*c),p=((r&7*d+3*(1-d)<<l)>>l)+((a&3*d+7*(1-d)<<g)>>g)*(8*d+4*(1-d)),f=o.children[p];(f==null?void 0:f.count)===1&&(this._release(f),o.children[p]=null),u+=1,o=f}}forEach(e){let t=this._root;for(;t!==null;){const s=this._linkChildren(t)||t.next;e(t),t=s}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findIf(e){let t=null;return this.forEach(s=>{e(s)&&(t=s)}),t}findAllIf(e){const t=[];return this.forEach(s=>{e(s)&&t.push(s)}),t}findSingleOccupancyNode(e,t,s,r,a){let n=this._root;for(;n!==null;){const o=n.depth,u=n.xNode,h=n.yNode,c=1-o%2,d=n.xGeohashTotal/n.count,l=n.yGeohashTotal/n.count;if(n.count===1&&e<d&&d<=s&&t<l&&l<=r)return n;if(o>=a){n=n.next;continue}const g=Math.ceil((o+1)/2),p=Math.floor((o+1)/2),f=30-(3*g+2*p),y=30-(2*g+3*p),_=~((1<<f)-1),v=~((1<<y)-1),b=(e&_)>>f,m=(t&v)>>y,x=(s&_)>>f,F=(r&v)>>y,S=u<<3*c+2*(1-c),q=h<<2*c+3*(1-c),k=S+8*c+4*(1-c),w=q+4*c+8*(1-c),T=Math.max(S,b),M=Math.max(q,m),R=Math.min(k,x),G=Math.min(w,F);let j=null,Y=null;for(let U=M;U<=G;U++)for(let X=T;X<=R;X++){const N=X-S+(U-q)*(8*c+4*(1-c)),L=n.children[N];L&&(j||(j=L,j.next=n.next),Y&&(Y.next=L),Y=L,L.next=n.next)}n=j||n.next}return null}getRegionDisplayIds(e){let t=this._root;const{bounds:s,geohashBounds:r,level:a}=e,[n,o,u,h]=s,c=[];for(;t!==null;){const d=t.depth,l=t.xNode,g=t.yNode;if(d>=a){const N=t.xTotal/t.count,L=t.yTotal/t.count;N>=n&&N<=u&&L>=o&&L<=h&&t.displayIds.forEach(J=>c.push(J)),t=t.next;continue}const p=Math.ceil((d+1)/2),f=Math.floor((d+1)/2),y=1-d%2,_=30-(3*p+2*f),v=30-(2*p+3*f),b=~((1<<_)-1),m=~((1<<v)-1),x=(r.xLL&b)>>_,F=(r.yLL&m)>>v,S=(r.xTR&b)>>_,q=(r.yTR&m)>>v,k=l<<3*y+2*(1-y),w=g<<2*y+3*(1-y),T=k+8*y+4*(1-y),M=w+4*y+8*(1-y),R=Math.max(k,x),G=Math.max(w,F),j=Math.min(T,S),Y=Math.min(M,q);let U=null,X=null;for(let N=G;N<=Y;N++)for(let L=R;L<=j;L++){const J=L-k+(N-w)*(8*y+4*(1-y)),H=t.children[J];H&&(U||(U=H,U.next=t.next),X&&(X.next=H),X=H,H.next=t.next)}t=U||t.next}return c}getRegionStatistics(e){let t=this._root,s=0,r=0,a=0;const n={},{bounds:o,geohashBounds:u,level:h}=e,[c,d,l,g]=o;let p=0;for(;t!==null;){const f=t.depth,y=t.xNode,_=t.yNode;if(f>=h){const W=t.xTotal/t.count,K=t.yTotal/t.count;W>c&&W<=l&&K>d&&K<=g&&(s+=t.count,r+=t.xTotal,a+=t.yTotal,t.count===1&&(p=t.referenceId),this._aggregateStatistics(n,t.statistics)),t=t.next;continue}const v=Math.ceil((f+1)/2),b=Math.floor((f+1)/2),m=1-f%2,x=30-(3*v+2*b),F=30-(2*v+3*b),S=~((1<<x)-1),q=~((1<<F)-1),k=(u.xLL&S)>>x,w=(u.yLL&q)>>F,T=(u.xTR&S)>>x,M=(u.yTR&q)>>F,R=y<<3*m+2*(1-m),G=_<<2*m+3*(1-m),j=R+8*m+4*(1-m),Y=G+4*m+8*(1-m),U=Math.max(R,k),X=Math.max(G,w),N=Math.min(j,T),L=Math.min(Y,M);let J=null,H=null;for(let W=X;W<=L;W++)for(let K=U;K<=N;K++){const St=K-R+(W-G)*(8*m+4*(1-m)),O=t.children[St];if(O){if(W!==X&&W!==L&&K!==U&&K!==N){const Pe=O.xTotal/O.count,Ge=O.yTotal/O.count;Pe>c&&Pe<=l&&Ge>d&&Ge<=g&&(s+=O.count,r+=O.xTotal,a+=O.yTotal,O.count===1&&(p=O.referenceId),this._aggregateStatistics(n,O.statistics));continue}J||(J=O,J.next=t.next),H&&(H.next=O),H=O,O.next=t.next}}t=J||t.next}return{count:s,attributes:this.normalizeStatistics(n,s),xTotal:r,yTotal:a,referenceId:p}}getBins(e){const t=[],{geohashBounds:s,level:r}=e;let a=this._root;for(;a!==null;){const n=a.depth,o=a.xNode,u=a.yNode;if(n>=r){t.push(a),a=a.next;continue}const h=Math.ceil((n+1)/2),c=Math.floor((n+1)/2),d=1-n%2,l=30-(3*h+2*c),g=30-(2*h+3*c),p=~((1<<l)-1),f=~((1<<g)-1),y=(s.xLL&p)>>l,_=(s.yLL&f)>>g,v=(s.xTR&p)>>l,b=(s.yTR&f)>>g,m=o<<3*d+2*(1-d),x=u<<2*d+3*(1-d),F=m+8*d+4*(1-d),S=x+4*d+8*(1-d),q=Math.max(m,y),k=Math.max(x,_),w=Math.min(F,v),T=Math.min(S,b);let M=null,R=null;for(let G=k;G<=T;G++)for(let j=q;j<=w;j++){const Y=j-m+(G-x)*(8*d+4*(1-d)),U=a.children[Y];U&&(M||(M=U,M.next=a.next),R&&(R.next=U),R=U,U.next=a.next)}a=M||a.next}return t}_linkChildren(e){let t=null,s=null;for(let r=0;r<=e.children.length;r++){const a=e.children[r];a&&(t||(t=a,t.next=e.next),s&&(s.next=a),s=a,a.next=e.next)}return t}_updateStatisticsCursor(e,t,s){var r,a;for(const n of this._statisticFields){const o=n.name,u=n.inField?e.readAttribute(n.inField):e.getComputedNumericAtIndex(n.inFieldIndex);switch(n.statisticType){case"min":{if(isNaN(u))break;if(!t.statistics[o]){t.statistics[o]={value:u};break}const h=t.statistics[o].value;t.statistics[o].value=Math.min(h,u);break}case"max":{if(isNaN(u))break;if(!t.statistics[o]){t.statistics[o]={value:u};break}const h=t.statistics[o].value;t.statistics[o].value=Math.max(h,u);break}case"count":break;case"sum":case"avg":{t.statistics[o]||(t.statistics[o]={value:0,nanCount:0});const h=t.statistics[o].value,c=(r=t.statistics[o].nanCount)!=null?r:0;u==null||isNaN(u)?t.statistics[o].nanCount=c+s:t.statistics[o].value=h+s*u;break}case"avg_angle":{t.statistics[o]||(t.statistics[o]={x:0,y:0,nanCount:0});const h=t.statistics[o].x,c=t.statistics[o].y,d=(a=t.statistics[o].nanCount)!=null?a:0,l=Math.PI/180;u==null||isNaN(u)?t.statistics[o].nanCount=d+s:(t.statistics[o].x=h+s*Math.cos(u*l),t.statistics[o].y=c+s*Math.sin(u*l));break}case"mode":{t.statistics[o]||(t.statistics[o]={});const h=t.statistics[o][u]||0;t.statistics[o][u]=h+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const r=s.name;switch(s.statisticType){case"min":{if(!e[r]){e[r]={value:t[r].value};break}const a=e[r].value;e[r].value=Math.min(a,t[r].value);break}case"max":{if(!e[r]){e[r]={value:t[r].value};break}const a=e[r].value;e[r].value=Math.max(a,t[r].value);break}case"count":break;case"sum":case"avg":case"avg_angle":case"mode":e[r]||(e[r]={});for(const a in t[r]){const n=e[r][a]||0;e[r][a]=n+t[r][a]}}}}normalizeStatistics(e,t){const s={};for(const r of this._statisticFields){const a=r.name;switch(r.statisticType){case"min":case"max":{const n=e[a];if(!t||!n)break;s[a]=n.value;break}case"count":if(!t)break;s[a]=t;break;case"sum":{if(!t)break;const{value:n,nanCount:o}=e[a];if(!(t-o))break;s[a]=n;break}case"avg":{if(!t)break;const{value:n,nanCount:o}=e[a];if(!(t-o))break;s[a]=n/(t-o);break}case"avg_angle":{if(!t)break;const{x:n,y:o,nanCount:u}=e[a];if(!(t-u))break;const h=n/(t-u),c=o/(t-u),d=180/Math.PI,l=Math.atan2(c,h)*d;s[a]=l;break}case"mode":{const n=e[a];let o=0,u=0,h=null;for(const c in n){const d=n[c];d===o?u+=1:d>o&&(o=d,u=1,h=c)}s[a]=h==="null"||u>1?null:h;break}}}return s}}class we{constructor(e,t,s,r){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=e,this.children=new Array(32);for(let a=0;a<this.children.length;a++)this.children[a]=null;this.xNode=t,this.yNode=s,this.depth=r}realloc(e,t,s){for(let r=0;r<this.children.length;r++)this.children[r]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getAttributes(){const e=this._tree.normalizeStatistics(this.statistics,this.count);return e.referenceId=null,e.aggregateId=this.id,e.aggregateCount=this.count,e}getGeometry(e,t){const s=this.getLngLatBounds(),[r,a,n,o]=s,u=oe({rings:[[[r,a],[r,o],[n,o],[n,a],[r,a]]]},te.WGS84,e),h=Ue(new Q,u,!1,!1);return I(t)?qe(new Q,h,!1,!1,"esriGeometryPolygon",t,!1,!1):h}getGeometryCentroid(e,t){const s=this.getLngLatBounds(),[r,a,n,o]=s,u=oe({x:(r+n)/2,y:(a+o)/2},te.WGS84,e),h=Bt(new Q,u);return I(t)?qe(new Q,h,!1,!1,"esriGeometryPoint",t,!1,!1):h}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),a=30-(2*t+3*s),n=this.xNode<<r,o=this.yNode<<a;return Gs({geohashX:n,geohashY:o},this.depth)}find(e,t,s,r,a,n){if(r>=s)return this;const o=1-r%2,u=3*o+2*(1-o),h=2*o+3*(1-o),c=30-a-u,d=30-n-h,l=((e&7*o+3*(1-o)<<c)>>c)+((t&3*o+7*(1-o)<<d)>>d)*(8*o+4*(1-o)),g=this.children[l];return g==null?null:g.find(e,t,s,r+1,a+u,n+h)}}const Fe=he.getLogger("esri.view.2d.layers.features.support.BinStore"),et=12,Qs=64,Ds=lt(),Bs=5;function tt(i){return 57.29577951308232*i}class js extends mt{constructor(e,t,s,r){super(e,s),this.type="bin",this.events=new Ae,this.objectIdField="aggregateId",this.featureAdapter=It,this._geohashLevel=Bs,this._geohashBuf=[],this._serviceInfo=r,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=gt(t,te.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree&&this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,t){const s=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch{}this._fields=this._schema.params.fields;const r=ge(s,t);t&&(!C(r)||e.source||e.storage.filters)?((pe(r,"params.fields")||pe(r,"params")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new xt(this._statisticFields,this._serviceInfo),this._tree.onRelease=a=>a.displayId&&this._storage.releaseDisplayId(a.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),E("esri-2d-update-debug")&&Fe.info("Aggregate mesh needs update due to tree changing")),E("esri-2d-update-debug")&&Fe.info("Aggregate mesh needs update due to tree changing"),e.targets[t.name]=!0,e.mesh=!1):s&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet(s=>{if(!e.has(s)){const r=t.lookupByDisplayIdUnsafe(s);this._remove(r)}})}sweepAggregates(e,t,s){}onTileData(e,t,s,r,a=!0){if(!this._schema||C(t.addOrUpdate))return t;this.events.emit("changed");const n=this._getTransforms(e,this._spatialReference);{const u=t.addOrUpdate.getCursor();for(;u.next();)this._update(u,r)}if(t.status.mesh||!a)return t;const o=new Array;this._getBinsForTile(o,e,n,s),t.addOrUpdate=D.fromOptimizedFeatures(o,{...this._serviceInfo,geometryType:"esriGeometryPolygon"}),t.addOrUpdate.attachStorage(s),t.end=!0,t.isRepush||(t.clear=!0);{const u=t.addOrUpdate.getCursor();for(;u.next();){const h=u.getDisplayId();this._bitsets.computed.unset(h),this.setComputedAttributes(s,u,h,e.scale)}}return t}forEachBin(e){this._tree.forEach(e)}forEach(e){this._tree.forEach(t=>{if(t.depth!==this._geohashLevel)return;const s=this._toFeatureJSON(t),r=D.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)})}forEachInBounds(e,t){}forEachBounds(e,t){const{hasM:s,hasZ:r}=this.geometryInfo;for(const a of e){const n=pt(Ds,a.readGeometry(),r,s);C(n)||t(n)}}onTileUpdate(e){}getAggregate(e){const t=is(e,!0),s=this._tree.findIf(r=>r.displayId===t);return re(s,r=>this._toFeatureJSON(r))}getAggregates(){return this._tree.findAllIf(e=>e.depth===this._geohashLevel).map(this._toFeatureJSON.bind(this))}getDisplayId(e){const t=this._tree.findIf(s=>s.id===e);return re(t,s=>s.displayId)}getFeatureDisplayIdsForAggregate(e){const t=this._tree.findIf(s=>s.id===e);return ct(t,[],s=>Array.from(s.displayIds))}getDisplayIdForReferenceId(e){const t=this._tree.findIf(s=>s.displayIds.size===1&&s.displayIds.has(e));return re(t,s=>s.displayId)}_toFeatureJSON(e){const t=this._spatialReference;return{displayId:e.displayId,attributes:e.getAttributes(),geometry:Re(e.getGeometry(t),"esriGeometryPolygon",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),a=this._geohashBuf[2*t],n=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,a,n,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,a=t.isVisible(s);if(a===r.has(s))return;if(!a)return void this._remove(e);const n=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,n,o))return;const u=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,n,o,u,h,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=tt(t/ee.radius),n=a-360*Math.floor((a+180)/360),o=tt(Math.PI/2-2*Math.atan(Math.exp(-s/ee.radius)));ye(r,e,o,n,et)}else{const a=oe({x:t,y:s},this._spatialReference,te.WGS84);if(!a)return!1;ye(r,e,a.y,a.x,et)}return this._bitsets.geohash.set(e),!0}_getBinsForTile(e,t,s,r){try{const a=this._getGeohashBounds(t),n=this._tree.getBins(a);for(const o of n){o.displayId||(o.displayId=r.createDisplayId(!0));let u=null;const h=o.getGeometry(this._spatialReference,s.tile);h||(u=o.getGeometryCentroid(this._spatialReference,s.tile));const c=new Ee(h,o.getAttributes(),u);c.objectId=o.id,c.displayId=o.displayId,e.push(c)}}catch{return void Fe.error("Unable to get bins for tile",t.key.id)}}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return ce(r,t,e,s),r}_getGeohashBounds(e){const t=this._getGeohashLevel(e.key.level),s=[e.extent.xmin,e.extent.ymin,e.extent.xmax,e.extent.ymax],r=ft.fromExtent(yt.fromBounds(s,this._spatialReference)),a=oe(r,this._spatialReference,te.WGS84,{densificationStep:e.resolution*Qs}),n=Ue(new Q,a,!1,!1),o=n.coords.filter((f,y)=>!(y%2)),u=n.coords.filter((f,y)=>y%2),h=Math.min(...o),c=Math.min(...u),d=Math.max(...o),l=Math.max(...u),g=this._getGeohash(h,c,t),p=this._getGeohash(d,l,t);return{bounds:s,geohashBounds:{xLL:g.geohashX,yLL:g.geohashY,xTR:p.geohashX,yTR:p.geohashY},level:t}}_getGeohashLevel(e){return this._schema.params.fixedBinLevel}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=_t(t);if(!r)return{tile:s,left:null,right:null};const[a,n]=r.valid;return{tile:s,left:{...s,translate:[n,e.bounds[3]]},right:{...s,translate:[a-n+e.bounds[0],e.bounds[3]]}}}}const Te=12,zs=64,st=1,Ns=lt();class Oe extends jt{constructor(e,t,s,r,a){super(new Q([],[t,s]),r,null,e),this.geohashBoundsInfo=a}get count(){return this.attributes.cluster_count}static create(e,t,s,r,a,n,o,u){const h=new Oe(t,s,r,n,o);return h.displayId=e.createDisplayId(!0),h.referenceId=u,h.tileLevel=a,h}update(e,t,s,r,a,n){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=a,this.referenceId=null,this.referenceId=n,this}toJSON(){return{attributes:{...this.attributes,aggregateId:this.objectId,referenceId:this.attributes.cluster_count===1?this.referenceId:null},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function ae(i){return 57.29577951308232*i}class Vs extends mt{constructor(e,t,s,r){super(e,s),this.type="cluster",this.events=new Ae,this.objectIdField="aggregateId",this.featureAdapter=It,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=r,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=gt(t,te.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,t){const s=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch{}this._fields=this._schema.params.fields;const r=ge(s,t);t&&(!C(r)||e.source||e.storage.filters)?((pe(r,"params.fields")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new xt(this._statisticFields,this._serviceInfo),this._rebuildTree(),E("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),E("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",r),e.targets[t.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):s&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet(s=>{if(!e.has(s)){const r=t.lookupByDisplayIdUnsafe(s);this._remove(r)}})}sweepAggregates(e,t,s){this._clusters.forEach((r,a)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(a))})}onTileData(e,t,s,r,a=!0){if(!this._schema||C(t.addOrUpdate))return t;this.events.emit("changed");const n=this._getTransforms(e,this._spatialReference);{const h=t.addOrUpdate.getCursor();for(;h.next();)this._update(h,r)}if(t.status.mesh||!a)return t;const o=new Array,u=this._schema.params.clusterRadius;this._getClustersForTile(o,e,u,s,n),t.addOrUpdate=D.fromOptimizedFeatures(o,this._serviceInfo),t.addOrUpdate.attachStorage(s),t.clear=!0,t.end=!0;{const h=t.addOrUpdate.getCursor();for(;h.next();){const c=h.getDisplayId();this._bitsets.computed.unset(c),this.setComputedAttributes(s,h,c,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const r=e[0].level;this._tileLevel=r,this._setGeohashLevel(r)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach(r=>{this._tiles.delete(r.key.id),this._markTileClustersForDeletion(r,s)})}getAggregate(e){for(const t of this._clusters.values())if(((t==null?void 0:t.displayId)&Xe)==(e&Xe))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())(t==null?void 0:t.tileLevel)===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);return t?this._tree.getRegionDisplayIds(t.geohashBoundsInfo):[]}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if((t==null?void 0:t.referenceId)===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach(t=>{if(!t)return;const s=t.toJSON(),r=D.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)})}forEachInBounds(e,t){}forEachBounds(e,t){const{hasM:s,hasZ:r}=this.geometryInfo;for(const a of e){const n=pt(Ns,a.readGeometry(),r,s);C(n)||t(n)}}size(){let e=0;return this.forEach(t=>e++),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),a=this._geohashBuf[2*t],n=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,a,n,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,a=t.isVisible(s);if(a===r.has(s))return;if(!a)return void this._remove(e);const n=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,n,o))return;const u=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,n,o,u,h,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=ae(t/ee.radius),n=a-360*Math.floor((a+180)/360),o=ae(Math.PI/2-2*Math.atan(Math.exp(-s/ee.radius)));ye(r,e,o,n,Te)}else{const a=oe({x:t,y:s},this._spatialReference,te.WGS84);if(!a)return!1;ye(r,e,a.y,a.x,Te)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,s,r,a,n=!0){const o=this._schema.params.clusterPixelBuffer,u=2*s,h=Math.ceil(2**t.key.level*z/u)+1,c=Math.ceil(o/u)+0,d=Math.ceil(z/u),{row:l,col:g}=t.key,p=g*z,f=l*z,y=Math.floor(p/u)-c,_=Math.floor(f/u)-c,v=y+d+2*c,b=_+d+2*c,m=t.tileInfoView.getLODInfoAt(t.key.level);for(let x=y;x<=v;x++)for(let F=_;F<=b;F++){let S=x;m.wrap&&(S=x<0?x+h:x%h);const q=m.wrap&&x<0,k=m.wrap&&x%h!==x,w=this._lookupCluster(r,m,t.key.level,S,F,t);if(I(w)){const T=re(a,M=>q?M.left:k?M.right:M.tile);if(n&&C(T)||!w.count)continue;if(I(T)&&n){const M=w.geometry.clone();let R=w.attributes;M.coords[0]=ut(T,M.coords[0]),M.coords[1]=dt(T,M.coords[1]),w.count===1&&I(w.referenceId)&&(R={...w.attributes,referenceId:w.referenceId});const G=new Ee(M,R);G.displayId=w.displayId,e.push(G)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),Te)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/st)+1)*st-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=_t(t);if(!r)return{tile:s,left:null,right:null};const[a,n]=r.valid;return{tile:s,left:{...s,translate:[n,e.bounds[3]]},right:{...s,translate:[a-n+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,a=2*r;let n=s%2?t*a:t*a-r;const o=s*a;let u=n+a;const h=o-a,c=2**e.level*z;e.wrap&&n<0&&(n=0),e.wrap&&u>c&&(u=c);const d=n/z,l=o/z,g=u/z,p=h/z;return[e.getXForColumn(d),e.getYForRow(l),e.getXForColumn(g),e.getYForRow(p)]}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return ce(r,t,e,s),r}_getGeohashBounds(e,t){const s=this._getGeohashLevel(e.key.level);if(this._spatialReference.isWebMercator){const[f,y,_,v]=t,b={x:f,y},m={x:_,y:v};let x=0,F=0,S=0,q=0;{const T=ae(b.x/ee.radius);x=T-360*Math.floor((T+180)/360),F=ae(Math.PI/2-2*Math.atan(Math.exp(-b.y/ee.radius)))}{const T=ae(m.x/ee.radius);S=T-360*Math.floor((T+180)/360),q=ae(Math.PI/2-2*Math.atan(Math.exp(-m.y/ee.radius)))}const k={geohashX:0,geohashY:0},w={geohashX:0,geohashY:0};return ce(k,F,x,s),ce(w,q,S,s),{bounds:[f,y,_,v],geohashBounds:{xLL:k.geohashX,yLL:k.geohashY,xTR:w.geohashX,yTR:w.geohashY},level:s}}const r=ft.fromExtent(yt.fromBounds(t,this._spatialReference)),a=oe(r,this._spatialReference,te.WGS84,{densificationStep:e.resolution*zs});if(!a)return null;const n=Ue(new Q,a,!1,!1),o=n.coords.filter((f,y)=>!(y%2)),u=n.coords.filter((f,y)=>y%2),h=Math.min(...o),c=Math.min(...u),d=Math.max(...o),l=Math.max(...u),g=this._getGeohash(h,c,s),p=this._getGeohash(d,l,s);return{bounds:t,geohashBounds:{xLL:g.geohashX,yLL:g.geohashY,xTR:p.geohashX,yTR:p.geohashY},level:s}}_lookupCluster(e,t,s,r,a,n){const o=this._getClusterId(s,r,a),u=this._clusters.get(o),h=this._getClusterBounds(t,r,a),c=this._getGeohashBounds(n,h);if(C(c))return null;const d=this._tree.getRegionStatistics(c),{count:l,xTotal:g,yTotal:p,referenceId:f}=d,y=l?g/l:0,_=l?p/l:0;if(l===0)return this._clusters.set(o,null),null;const v={cluster_count:l,...d.attributes},b=I(u)?u.update(y,_,s,v,c,f):Oe.create(e,o,y,_,s,v,c,f);if(l===0){const[m,x,F,S]=h;b.geometry.coords[0]=(m+F)/2,b.geometry.coords[1]=(x+S)/2}return this._clusters.set(o,b),this._updateAggregateValueRangeForCluster(b,b.tileLevel),b}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,a=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(a,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&a===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(z/s),{row:a,col:n}=e.key,o=n*z,u=a*z,h=Math.floor(o/s),c=Math.floor(u/s);for(let d=h;d<h+r;d++)for(let l=c;l<c+r;l++)this._markForDeletion(e.key.level,d,l)}}const Xs=5e3,Ys="tileRenderer.featuresView.attributeView.initialize",Hs="tileRenderer.featuresView.attributeView.requestUpdate",Zs="tileRenderer.featuresView.requestRender";function Js(i){return i.name==="worker:port-closed"}function Z(i){if(!me(i)&&!Js(i))throw i}function rt(i){return i.type==="feature"&&i.mode==="snapshot"}let V=class extends nt{constructor(){super(...arguments),this._storage=new es,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this._didEdit=!1,this._updateVersion=1,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initStores(),this._initSource(),this._updateQueue=new Ce({concurrency:this._source.type==="stream"?1:4,process:(i,e)=>this._onTileMessage(i,{signal:e})}),this.addHandles([this.tileStore.on("update",this.onTileUpdate.bind(this)),zt(()=>!this.updating,()=>this.onIdle())]),this._checkUpdating=setInterval(()=>this.notifyChange("updating"),300)}_initSource(){const i=this.tileStore.tileScheme,e=()=>this._updateQueue&&this._updateQueue.length<50,t=(s,r)=>(this._invalidated=!0,this._patchTile(s,r));this._source=Os(this.service,this.spatialReference,i,t,e,this.featureStore),this._proxyEvents()}_proxyEvents(){if(this._source.type==="stream"){const i=this._source.events,e=this._source;this.addHandles([ke(()=>e.connectionStatus,t=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:t}).catch(Z),{initial:!0}),ke(()=>e.errorString,t=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:t}).catch(Z),{initial:!0}),i.on("data-received",t=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry}}).catch(Z)),i.on("message-received",t=>this.remoteClient.invoke("emitEvent",{name:"message-received",event:t}).catch(Z)),i.on("updateRate",t=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...t}}).catch(Z))])}}_initAttributeStore(i){this.attributeStore||(this.attributeStore=new ts({type:"remote",initialize:(e,t)=>de(this.remoteClient.invoke(Ys,e,{signal:t}).catch(Z)),update:(e,t)=>de(this.remoteClient.invoke(Hs,e,{signal:t}).catch(Z)),render:e=>de(this.remoteClient.invoke(Zs,void 0,{signal:e}).catch(Z))},i,()=>this.notifyChange("updating")))}_initStores(){const i=this.service.type==="snapshot"?"snapshot":"on-demand",e={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new Kt(e,this._storage,i)}_initQueryEngine(i){var t,s;const e=this;(t=this.featureQueryEngine)==null||t.destroy(),this.featureQueryEngine=new ze({definitionExpression:(s=i.schema.source.definitionExpression)!=null?s:void 0,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds(r){return C(e.aggregateStore)?[]:e.aggregateStore.getFeatureDisplayIdsForAggregate(r).map(a=>e.getObjectId(a))}},timeInfo:this.service.timeInfo})}_initAggregateQueryEngine(i,e){var s;if((s=this.aggregateQueryEngine)==null||s.destroy(),C(i))return;const t=e.targets.aggregate.params.fields.slice();this.aggregateQueryEngine=new ze({definitionExpression:void 0,fields:t,geometryType:i.geometryInfo.geometryType,objectIdField:i.objectIdField,hasM:i.geometryInfo.hasM,hasZ:i.geometryInfo.hasZ,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!1,featureStore:i,aggregateAdapter:{getFeatureObjectIds:r=>[]}})}destroy(){var i,e,t;this._updateQueue.destroy(),this._source.destroy(),(i=this.featureQueryEngine)==null||i.destroy(),(e=this.aggregateQueryEngine)==null||e.destroy(),(t=this.attributeStore)==null||t.destroy();for(const s of this.tileStore.tiles)this._source.unsubscribe(s);clearInterval(this._checkUpdating)}get fieldsIndex(){return new Nt(this.service.fields)}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){const i=this._source.updating,e=!!this._updateQueue.length,t=!this.attributeStore||this.attributeStore.isUpdating(),s=i||e||t;return E("esri-2d-log-updating")&&console.log(`Updating FeatureController2D: ${s}
  -> updatingSource ${i}
  -> updateQueue ${e}
  -> updatingAttributeStore ${t}
`),s}updateCustomParameters(i){this._source.type==="stream"&&this._source.updateCustomParameters(i)}enableEvent(i){this._source.enableEvent(i.name,i.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}resume(){this._updateQueue.resume()}pauseStream(){this._source.type==="stream"&&this._source.pauseStream()}resumeStream(){this._source.type==="stream"&&this._source.resumeStream()}sendMessageToSocket(i){this._source.type==="stream"&&this._source.sendMessageToSocket(i)}sendMessageToClient(i){this._source.type==="stream"&&this._source.sendMessageToClient(i)}_initAggregateStore(i){var s,r;const e=(r=(s=i.schema.targets)==null?void 0:s.aggregate)==null?void 0:r.type;if(re(this.config,a=>{var n,o;return(o=(n=a.schema.targets)==null?void 0:n.aggregate)==null?void 0:o.type})!==e&&(I(this.aggregateStore)&&(this.removeHandles("valueRangesChanged"),this.aggregateStore.destroy(),this.aggregateStore=null),e)){switch(e){case"cluster":{const a={geometryInfo:{geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.aggregateStore=new Vs(a,this.spatialReference,this._storage,this.service),this.addHandles(this.aggregateStore.events.on("valueRangesChanged",n=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:n.valueRanges}}).catch(Z)}),"valueRangesChanged");break}case"bin":{const a={geometryInfo:{geometryType:"esriGeometryPolygon",hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.aggregateStore=new js(a,this.spatialReference,this._storage,this.service);break}}this.aggregateStore.onTileUpdate({added:this.tileStore.tiles,removed:[]})}}async update(i,e){this._updateVersion++,this._initQueryEngine(e),this._initAttributeStore(e),this.pause(),await Promise.all([this._source.update(i,e.schema.source),this.featureStore.updateSchema(i,e.schema.targets.feature),this.attributeStore.update(i,e),this.attributeStore.updateFilters(i,e,this)]),this._initAggregateStore(e),I(this.aggregateStore)&&await this.aggregateStore.updateSchema(i,e.schema.targets.aggregate),this._initAggregateQueryEngine(this.aggregateStore,e.schema),E("esri-2d-update-debug")&&i.describe(),this._set("config",e)}async applyUpdate(i){i.version=this._updateVersion,E("esri-2d-update-debug")&&console.debug(`Applying update ${i.version}`),i.mesh&&this.clearTiles(),this._updateQueue.resume(),await this._source.applyUpdate(i),this.notifyChange("updating"),await ue(()=>!this.updating),I(this.aggregateStore)&&(await ht(10),await ue(()=>!this.updating))}async onEdits({edits:i}){E("esri-2d-update-debug")&&console.debug("Applying Edit:",i),this._didEdit=!0;try{const e=i.removed.map(s=>s.objectId&&s.objectId!==-1?s.objectId:this._lookupObjectIdByGlobalId(s.globalId)),t=i.addOrModified.map(({objectId:s})=>s);this.featureStore.invalidate(),await this._source.edit(t,e),this.clearTiles(),this.notifyChange("updating"),I(this.aggregateStore)&&this.aggregateStore.clear(),await this._source.resend(),await ue(()=>!this.updating)}catch{}}async refresh(i){if(!i.dataChanged){const e=$.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(this._updateVersion,i),this._cleanupNeeded=!0,this.notifyChange("updating"),await ue(()=>!this.updating)}clearTiles(){for(const i of this.tileStore.tiles)this.processor.onTileClear(i)}onTileUpdate(i){I(this.aggregateStore)&&this.aggregateStore.onTileUpdate(i);for(const e of i.added)this._source.subscribe(e,this._updateVersion),this._level=e.level;for(const e of i.removed)this._source.unsubscribe(e),this._cleanupNeeded=!0,this._tileToResolver.has(e.id)&&(this._tileToResolver.get(e.id).resolve(),this._tileToResolver.delete(e.id));this.notifyChange("updating")}async onIdle(){this._invalidated&&(this._invalidated=!1,(I(this.aggregateStore)||this.processor.type==="heatmap")&&await this._repushCurrentLevelTiles()),this._markAndSweep()}async querySummaryStatistics({query:i,params:e}){return this.featureQueryEngine.executeQueryForSummaryStatistics(i,e)}async queryAggregateSummaryStatistics({query:i,params:e}){return this.aggregateQueryEngine.executeQueryForSummaryStatistics(i,e)}async queryUniqueValues({query:i,params:e}){return this.featureQueryEngine.executeQueryForUniqueValues(i,e)}async queryAggregateUniqueValues({query:i,params:e}){return this.aggregateQueryEngine.executeQueryForUniqueValues(i,e)}async queryClassBreaks({query:i,params:e}){return this.featureQueryEngine.executeQueryForClassBreaks(i,e)}async queryAggregateClassBreaks({query:i,params:e}){return this.aggregateQueryEngine.executeQueryForClassBreaks(i,e)}async queryHistogram({query:i,params:e}){return this.featureQueryEngine.executeQueryForHistogram(i,e)}async queryAggregateHistogram({query:i,params:e}){return this.aggregateQueryEngine.executeQueryForHistogram(i,e)}queryExtent(i){return this.featureQueryEngine.executeQueryForExtent(i)}queryAggregates(i){return this.aggregateQueryEngine.executeQuery(i)}queryAggregateCount(i){return this.aggregateQueryEngine.executeQueryForCount(i)}queryAggregateIds(i){return this.aggregateQueryEngine.executeQueryForIds(i)}queryFeatures(i){return this.featureQueryEngine.executeQuery(i)}async queryVisibleFeatures(i){const e=await this.featureQueryEngine.executeQuery(i),t=e.objectIdFieldName;return e.features=e.features.filter(s=>{const r=s.attributes[t],a=this.getDisplayId(r);return re(a,n=>this.attributeStore.isVisible(n))}),e}queryFeatureCount(i){return this.featureQueryEngine.executeQueryForCount(i)}queryLatestObservations(i){return this.featureQueryEngine.executeQueryForLatestObservations(i)}queryObjectIds(i){return this.featureQueryEngine.executeQueryForIds(i)}async queryStatistics(){return this.featureStore.storeStatistics}getObjectId(i){return this.featureStore.lookupObjectId(i,this._storage)}getDisplayId(i){if(I(this.aggregateStore)){const e=this.aggregateStore.getDisplayId(i);if(C(e)){const t=this.featureStore.lookupDisplayId(i);return this.aggregateStore.getDisplayIdForReferenceId(t)}return e}return this.featureStore.lookupDisplayId(i)}getFeatures(i){const e=[],t=[];for(const s of i){const r=I(this.aggregateStore)?this.getAggregate(s):null;if(I(r))if(I(r.attributes.referenceId)){const a=this.getFeature(r.attributes.referenceId);I(a)&&e.push(a)}else t.push(r);else{const a=this.getFeature(s);I(a)&&e.push(a)}}return{features:e,aggregates:t}}getFeature(i){const e=this.featureStore.lookupFeatureByDisplayId(i,this._storage);if(C(e))return null;const t=e.readHydratedGeometry(),s=Re(t,e.geometryType,e.hasZ,e.hasM);return{attributes:e.readAttributes(),geometry:s}}getAggregate(i){return C(this.aggregateStore)?null:this.aggregateStore.getAggregate(i)}getAggregates(){return C(this.aggregateStore)?[]:this.aggregateStore.getAggregates()}async setHighlight(i){const e=Vt(i.map(t=>this.getDisplayId(t)));return this.attributeStore.setHighlight(i,e)}_lookupObjectIdByGlobalId(i){const e=this.service.globalIdField;if(C(e))throw new Error("Expected globalIdField to be defined");let t=null;if(this.featureStore.forEach(s=>{i===s.readAttribute(e)&&(t=s.getObjectId())}),C(t))throw new Error(`Expected to find a feature with globalId ${i}`);return t}async _repushCurrentLevelTiles(){const i=this.tileStore.tiles.filter(t=>t.level===this._level);i.map(async t=>this._patchTile({type:"append",id:t.key.id,clear:!0,addOrUpdate:null,end:!1}));const e=i.map(async t=>this._patchTile({type:"append",id:t.key.id,addOrUpdate:D.fromOptimizedFeatures([],this.service),remove:[],end:!0,isRepush:!0,status:$.empty()}));await Promise.all(e)}_maybeForceCleanup(){performance.now()-this._lastCleanup>Xs&&this._markAndSweep()}_patchTile(i,e){const t=this._updateQueue.push(i,e).then(()=>{this.notifyChange("updating")}).catch(s=>{this.notifyChange("updating")});return this.notifyChange("updating"),t}async _onTileMessage(i,e){var a;if(B(e),E("esri-2d-update-debug")){const n=re(i.addOrUpdate,o=>o.hasFeatures);console.debug(i.id,`FeatureController:onTileMessage: [clear:${i.clear}, end:${i.end}, features: ${n}]`)}const t=this.tileStore.get(i.id);if(!t)return;if(i.clear)return this.processor.onTileClear(t);const s=i.status;this._cleanupNeeded=!0;const r=[];for(const n of(a=i.remove)!=null?a:[]){const o=this.featureStore.lookupDisplayId(n);o&&r.push(o)}i.remove=r;try{if(C(i.addOrUpdate))return void this.processor.onTileMessage(t,{...i,addOrUpdate:null},I(this.aggregateStore),e).catch(Me);if(i.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(i.addOrUpdate.instance)&&s.targets.feature||(s.targets.feature=!0,this.featureStore.onTileData(t,i)),(!s.storage.data||!s.storage.filters)&&(s.storage.data=!0,s.storage.filters=!0,this.attributeStore.onTileData(t,i),this._source.type==="stream"||this._didEdit?(await this.attributeStore.sendUpdates(),B(e)):this.attributeStore.sendUpdates()),I(this.aggregateStore)&&!s.targets.aggregate){s.targets.aggregate=!0;const n=rt(this._source)&&this._source.loading,o=!rt(this._source)||n||i.end;if(this.aggregateStore.onTileData(t,i,this._storage,this.attributeStore,o),!o)return;s.mesh||(this.attributeStore.onTileData(t,i),await this.attributeStore.sendUpdates())}if(!s.mesh){s.mesh=!0;const n=I(this.aggregateStore)&&this.aggregateStore.type==="cluster";await this.processor.onTileMessage(t,i,n,e),B(e)}this._maybeForceCleanup()}catch(n){Me(n)}}_mark(i,e,t){const s=(4294901760&this._storage.getInstanceId(i))>>>16;i&&(e.add(s),t.set(i))}_markAndSweep(){if(this._lastCleanup=performance.now(),!(!(this._source.type==="feature"&&this._source.mode==="snapshot")&&(this._source.type==="stream"||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const i=this._storage.getBitset(this._markedIdsBufId),e=new Set;i.clear();for(const t of this.tileStore.tiles)for(const s of this._source.readers(t.id)){const r=s.getCursor();for(;r.next();){let a=r.getDisplayId();if(!a){const n=r.getObjectId();a=this.featureStore.lookupDisplayId(n)}this._mark(a,e,i)}}this.processor.type==="symbol"&&this.processor.forEachBufferId(t=>{this._mark(t,e,i)}),this._updateQueue.forEach(t=>{var s;for(const r of(s=t.remove)!=null?s:[]){const a=this.featureStore.lookupDisplayId(r);this._mark(a,e,i)}}),I(this.aggregateStore)&&(this.aggregateStore.sweepFeatures(i,this.featureStore),"sweepAggregates"in this.aggregateStore&&this.aggregateStore.sweepAggregates(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(i,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(e)}};A([P({constructOnly:!0})],V.prototype,"tileStore",void 0),A([P()],V.prototype,"config",void 0),A([P({readOnly:!0})],V.prototype,"fieldsIndex",null),A([P()],V.prototype,"processor",void 0),A([P({constructOnly:!0})],V.prototype,"remoteClient",void 0),A([P({constructOnly:!0})],V.prototype,"service",void 0),A([P()],V.prototype,"spatialReference",null),A([P()],V.prototype,"updating",null),V=A([$e("esri.views.2d.layers.features.controllers.FeatureController2D")],V);const Ws=V;let se=class extends Xt{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null,this._paused=!1,this._pendingTileUpdates=[]}initialize(){this.handles.add(ke(()=>this.updating,i=>{this.remoteClient.invoke("setUpdating",i).catch(e=>{})}))}destroy(){var i,e;this.stop(),(i=this.controller)==null||i.destroy(),(e=this.processor)==null||e.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}stop(){var i,e,t;this._paused=!0,Array.isArray((i=this.service)==null?void 0:i.source)&&(this.service.source.forEach(s=>s.close()),this.service.source.length=0),(e=this.tileStore)==null||e.updateTiles({added:[],removed:this.tileStore.tiles.map(s=>s.id)}),(t=this.tileStore)==null||t.destroy(),this.tileStore=null,this._pendingTileUpdates.length=0}async startup({service:i,config:e,tileInfo:t,tiles:s}){var r,a,n;if(this._paused=!0,Array.isArray((r=this.service)==null?void 0:r.source)&&(this.service.source.forEach(o=>o.close()),this.service.source.length=0),this.service=i,!this.tileStore||!Yt(this.tileStore.tileScheme.spatialReference,t.spatialReference)){const o=new Ht(Zt.fromJSON(t));s.added.length=s.removed.length=0,(a=this.tileStore)==null||a.updateTiles({added:[],removed:this.tileStore.tiles.map(u=>u.id)}),(n=this.tileStore)==null||n.destroy(),this.tileStore=new Jt(o),this._pendingTileUpdates.length=0}for(await this._createProcessorAndController(e),await this.update({config:e}),this.controller.resume(),this.tileStore.clear(),this.tileStore.updateTiles(s),this._paused=!1;this._pendingTileUpdates.length;)this.tileStore.updateTiles(this._pendingTileUpdates.pop())}async updateTiles(i){var e;this._paused?this._pendingTileUpdates.push(i):(e=this.tileStore)==null||e.updateTiles(i)}async update({config:i}){const e=$.empty();return await Promise.all([this.processor.update(e,i),this.controller.update(e,i)]),e.toJSON()}async applyUpdate(i){return this.controller.applyUpdate($.create(i))}async _createProcessorAndController(i){await Promise.all([this._handleControllerConfig(i),this._handleProcessorConfig(i)]),this.controller.processor=this.processor}async _handleControllerConfig(i){return this._createController(this.service,i)}async _handleProcessorConfig(i){return this._createProcessor(this.service,i)}async _createController(i,e){this.controller&&this.controller.destroy();const{tileStore:t,remoteClient:s}=this,r=new Ws({service:i,tileStore:t,remoteClient:s});return this.controller=r,r}async _createProcessor(i,e){const t=e.schema.processors[0].type,s=(await as(t)).default,{remoteClient:r,tileStore:a}=this,n=new s({service:i,config:e,tileStore:a,remoteClient:r});return this.processor&&this.processor.destroy(),this.processor=n,n}};A([P()],se.prototype,"controller",void 0),A([P()],se.prototype,"processor",void 0),A([P()],se.prototype,"updating",null),A([P()],se.prototype,"viewState",void 0),se=A([$e("esri.views.2d.layers.features.Pipeline")],se);const Ir=se;export{Ir as default};
