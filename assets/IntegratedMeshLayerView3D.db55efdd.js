import{ko as m,h as n,g as l,i as d,e as i,y as e,fZ as h,b as u}from"./index.a33ecea7.js";import{v as c}from"./I3SMeshView3D.315787e3.js";import{n as g}from"./LayerView3D.f81b9bae.js";import{u as y}from"./LayerView.88bcfa48.js";import"./I3SOverrides.f5d5e0da.js";import"./I3SNode.401ad0e2.js";import"./I3SUtil.5b1faf74.js";import"./I3SBinaryReader.a07cc377.js";import"./RenderTexture.a9b14f2c.js";import"./FeatureLayerView3D.22478f1f.js";import"./FeatureLayerViewBase3D.6e6d4d1e.js";import"./FeatureLikeLayerView3D.b0fb7ce1.js";import"./queryForSymbologySnapping.3cf06087.js";import"./hash.1de989e0.js";import"./Graphics3DObjectStates.e0ca5962.js";import"./rendererConversion.ba1aecaf.js";import"./optimizedFeatureQueryEngineAdapter.19cbae31.js";import"./centroid.5ec46060.js";import"./PooledRBush.efdefeda.js";import"./floorFilterUtils.095bd939.js";import"./QueryEngine.c2c9f6b5.js";import"./QueryEngineCapabilities.a5e1050d.js";import"./timeSupport.2b30b818.js";import"./FeatureStore.b2caf56c.js";import"./BoundsStore.499f4d64.js";import"./heatmapTextureUtils.e4986b56.js";import"./projectExtentUtils.0986a39c.js";import"./EventedSet.a2d21f5d.js";import"./FeatureLayerView.d4db084d.js";import"./popupUtils.5d07a4ea.js";import"./RefreshableLayerView.e0df9b3f.js";import"./SceneModification.ef07e883.js";import"./SceneLayerWorker.0939a62b.js";const f=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const U=r;export{U as default};
