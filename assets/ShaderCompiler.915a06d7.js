class c{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,r=new Map){if(r.has(e))return r.get(e);const t=this._read(e);if(!t)throw new Error(`cannot find shader file ${e}`);const h=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let s=h.exec(t);const i=[];for(;s!=null;)i.push({path:s[1],start:s.index,length:s[0].length}),s=h.exec(t);let a=0,n="";return i.forEach(l=>{n+=t.slice(a,l.start),n+=r.has(l.path)?"":this._resolve(l.path,r),a=l.start+l.length}),n+=t.slice(a),r.set(e,n),n}_read(e){return this._readFile(e)}}export{c as e};
