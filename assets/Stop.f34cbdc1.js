import{l3 as p,l9 as x,n as v,r,g as M,e as t,y as i,la as ie,hj as U,lb as k,b as D,g5 as C,g7 as m,aR as ae,i as A,g8 as E,v as pe,hk as L}from"./index.a33ecea7.js";const ue=p()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),ve=p()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"});p()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"});const fe=p()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),ge=p()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),Se=p()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});p()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const de=p()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});p()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});p()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const me=p()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),y=p()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),$=p()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),I=p()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),q=p()({1:"right",2:"left"},{useNumericKeys:!0}),g=p()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),_=p()({0:"permit",1:"restrict"},{useNumericKeys:!0}),K=p()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),G=p()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),Ne=p()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),be=p()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),ce=p()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),j=p()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),ne=p()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Oe=p()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),Ae=p()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),De=p()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Ce=p()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});var H;let T=H=class extends x(C){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){var a,s,l;return new H({directionLineType:G.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:(a=e.attributes.FromLevel)!=null?a:null,geometry:e.geometry,objectId:(s=e.attributes.ObjectID)!=null?s:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:(l=e.attributes.ToLevel)!=null?l:null})}toGraphic(){const e={ObjectID:v(this.objectId),DirectionLineType:r(this.directionLineType)?G.toJSON(this.directionLineType):null,DirectionPointID:v(this.directionPointId),Meters:v(this.distance),Minutes:v(this.duration)};return r(this.fromLevel)&&(e.FromLevel=this.fromLevel),r(this.toLevel)&&(e.ToLevel=this.toLevel),new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};T.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],T.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i({type:G.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:G.read}}})],T.prototype,"directionLineType",void 0),t([i({json:{read:{source:"attributes.DirectionPointID"}}})],T.prototype,"directionPointId",void 0),t([i({json:{read:{source:"attributes.Meters"}}})],T.prototype,"distance",void 0),t([i({json:{read:{source:"attributes.Minutes"}}})],T.prototype,"duration",void 0),t([i({json:{read:{source:"attributes.FromLevel"}}})],T.prototype,"fromLevel",void 0),t([i({type:ie})],T.prototype,"geometry",void 0),t([i({json:{read:{source:"attributes.ObjectID"}}})],T.prototype,"objectId",void 0),t([i({type:U})],T.prototype,"popupTemplate",void 0),t([i({types:k})],T.prototype,"symbol",void 0),t([i({json:{read:{source:"attributes.ToLevel"}}})],T.prototype,"toLevel",void 0),t([i({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=H=t([D("esri.rest.support.DirectionLine")],T);const we=T;var Y;let u=Y=class extends x(C){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,a){return r(a.attributes.ArrivalTime)?new Date(a.attributes.ArrivalTime):null}static fromGraphic(e){var a,s,l,c,S,w,F,B,J,R,P,se,oe,le;return new Y({alternateName:(a=e.attributes.AlternateName)!=null?a:null,arrivalTime:r(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:(s=e.attributes.ArrivalUTCOffset)!=null?s:null,azimuth:(l=e.attributes.Azimuth)!=null?l:null,branchName:(c=e.attributes.BranchName)!=null?c:null,directionPointType:K.fromJSON(e.attributes.DirectionPointType),displayText:(S=e.attributes.DisplayText)!=null?S:null,exitName:(w=e.attributes.ExitName)!=null?w:null,geometry:e.geometry,intersectingName:(F=e.attributes.IntersectingName)!=null?F:null,level:(B=e.attributes.Level)!=null?B:null,name:(J=e.attributes.Name)!=null?J:null,objectId:(R=e.attributes.ObjectID)!=null?R:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:(P=e.attributes.ShortVoiceInstruction)!=null?P:null,stopId:(se=e.attributes.StopID)!=null?se:null,symbol:e.symbol,towardName:(oe=e.attributes.TowardName)!=null?oe:null,voiceInstruction:(le=e.attributes.VoiceInstruction)!=null?le:null})}toGraphic(){const e={ObjectID:v(this.objectId),DirectionPointType:r(this.directionPointType)?K.toJSON(this.directionPointType):null,Sequence:v(this.sequence),StopID:this.stopId};return r(this.alternateName)&&(e.AlternateName=this.alternateName),r(this.arrivalTime)&&(e.ArrivalTime=this.arrivalTime.getTime()),r(this.arrivalTimeOffset)&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),r(this.azimuth)&&(e.Azimuth=this.azimuth),r(this.branchName)&&(e.BranchName=this.branchName),r(this.displayText)&&(e.DisplayText=this.displayText),r(this.exitName)&&(e.ExitName=this.exitName),r(this.intersectingName)&&(e.IntersectingName=this.intersectingName),r(this.level)&&(e.Level=this.level),r(this.name)&&(e.Name=this.name),r(this.shortVoiceInstruction)&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),r(this.towardName)&&(e.TowardName=this.towardName),r(this.voiceInstruction)&&(e.VoiceInstruction=this.voiceInstruction),new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};u.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],u.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i()],u.prototype,"alternateName",void 0),t([i()],u.prototype,"arrivalTime",void 0),t([m("arrivalTime",["attributes.ArrivalTime"])],u.prototype,"readArrivalTime",null),t([i({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],u.prototype,"arrivalTimeOffset",void 0),t([i({json:{read:{source:"attributes.Azimuth"}}})],u.prototype,"azimuth",void 0),t([i({json:{read:{source:"attributes.BranchName"}}})],u.prototype,"branchName",void 0),t([i({type:K.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:K.read}}})],u.prototype,"directionPointType",void 0),t([i({json:{read:{source:"attributes.DisplayText"}}})],u.prototype,"displayText",void 0),t([i({json:{read:{source:"attributes.ExitName"}}})],u.prototype,"exitName",void 0),t([i({type:ae})],u.prototype,"geometry",void 0),t([i()],u.prototype,"intersectingName",void 0),t([i()],u.prototype,"level",void 0),t([i({json:{read:{source:"attributes.Name"}}})],u.prototype,"name",void 0),t([i({json:{read:{source:"attributes.ObjectID"}}})],u.prototype,"objectId",void 0),t([i({type:U})],u.prototype,"popupTemplate",void 0),t([i({json:{read:{source:"attributes.Sequence"}}})],u.prototype,"sequence",void 0),t([i()],u.prototype,"shortVoiceInstruction",void 0),t([i({json:{read:{source:"attributes.StopID"}}})],u.prototype,"stopId",void 0),t([i({types:k})],u.prototype,"symbol",void 0),t([i({json:{read:{source:"attributes.TowardName"}}})],u.prototype,"towardName",void 0),t([i({readOnly:!0,json:{read:!1}})],u.prototype,"type",void 0),t([i()],u.prototype,"voiceInstruction",void 0),u=Y=t([D("esri.rest.support.DirectionPoint")],u);const Fe=u;function O(e,a){if(A(e))return null;const s={},l=new RegExp(`^${a}`,"i");for(const c of Object.keys(e))if(l.test(c)){const S=c.substring(a.length);s[j.fromJSON(S)]=e[c]}return s}function re(e,a,s){if(!A(e)){a.attributes||(a.attributes={});for(const l in e){const c=j.toJSON(l);a.attributes[`${s}${c}`]=e[l]}}}function W(e){const a={};for(const s of Object.keys(e)){const l=s;a[j.fromJSON(l)]=e[s]}return a}function V(e){const a={};for(const s of Object.keys(e)){const l=s;a[j.toJSON(l)]=e[s]}return a}function z(e,a){return A(e)||A(a)?null:Math.round((e-a)/6e4)}function Ie(e){var l,c,S;const a=e.toJSON(),s=a;return s.accumulateAttributeNames&&(s.accumulateAttributeNames=(l=a.accumulateAttributeNames)==null?void 0:l.join()),s.attributeParameterValues&&(s.attributeParameterValues=JSON.stringify(a.attributeParameterValues)),s.barriers&&(s.barriers=JSON.stringify(a.barriers)),s.outSR&&(s.outSR=(c=a.outSR)==null?void 0:c.wkid),s.overrides&&(s.overrides=JSON.stringify(a.overrides)),s.polygonBarriers&&(s.polygonBarriers=JSON.stringify(a.polygonBarriers)),s.polylineBarriers&&(s.polylineBarriers=JSON.stringify(a.polylineBarriers)),s.restrictionAttributeNames&&(s.restrictionAttributeNames=(S=a.restrictionAttributeNames)==null?void 0:S.join()),s.stops&&(s.stops=JSON.stringify(a.stops)),s.travelMode&&(s.travelMode=JSON.stringify(a.travelMode)),s}var X;let d=X=class extends x(C){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,a){return O(a.attributes,"Attr_")}writeCosts(e,a){re(e,a,"Attr_")}static fromGraphic(e){var a,s,l;return new X({addedCost:(a=e.attributes.AddedCost)!=null?a:null,barrierType:r(e.attributes.BarrierType)?g.fromJSON(e.attributes.BarrierType):null,costs:r(e.attributes.Costs)?W(JSON.parse(e.attributes.Costs)):null,curbApproach:r(e.attributes.CurbApproach)?y.fromJSON(e.attributes.CurbApproach):null,fullEdge:r(e.attributes.FullEdge)?_.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:(s=e.attributes.Name)!=null?s:null,objectId:(l=e.attributes.ObjectID)!=null?l:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:r(e.attributes.Status)?I.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:v(this.objectId),AddedCost:this.addedCost,BarrierType:r(this.barrierType)?g.toJSON(this.barrierType):null,Costs:r(this.costs)?JSON.stringify(V(this.costs)):null,CurbApproach:r(this.curbApproach)?y.toJSON(this.curbApproach):null,FullEdge:r(this.fullEdge)?_.toJSON(this.fullEdge):null,Name:this.name,Status:r(this.status)?I.toJSON(this.status):null};return new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};d.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],d.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i()],d.prototype,"addedCost",void 0),t([i({type:g.apiValues,json:{name:"attributes.BarrierType",read:{reader:g.read},write:{writer:g.write}}})],d.prototype,"barrierType",void 0),t([i()],d.prototype,"costs",void 0),t([m("costs",["attributes"])],d.prototype,"readCosts",null),t([E("costs")],d.prototype,"writeCosts",null),t([i({type:y.apiValues,json:{read:{source:"attributes.CurbApproach",reader:y.read}}})],d.prototype,"curbApproach",void 0),t([i({type:_.apiValues,json:{name:"attributes.FullEdge",read:{reader:_.read},write:{writer:_.write}}})],d.prototype,"fullEdge",void 0),t([i({type:ae,json:{write:!0}})],d.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],d.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],d.prototype,"objectId",void 0),t([i({type:U})],d.prototype,"popupTemplate",void 0),t([i({type:q.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:q.read}}})],d.prototype,"sideOfEdge",void 0),t([i({json:{read:{source:"attributes.SourceID"}}})],d.prototype,"sourceId",void 0),t([i({json:{read:{source:"attributes.SourceOID"}}})],d.prototype,"sourceOid",void 0),t([i({type:I.apiValues,json:{read:{source:"attributes.Status",reader:I.read}}})],d.prototype,"status",void 0),t([i({types:k})],d.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],d.prototype,"type",void 0),d=X=t([D("esri.rest.support.PointBarrier")],d);const xe=d;var Z;let h=Z=class extends x(C){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,a){return O(a.attributes,"Attr_")}writeCosts(e,a){re(e,a,"Attr_")}static fromGraphic(e){var a,s,l;return new Z({barrierType:r(e.attributes.BarrierType)?g.fromJSON(e.attributes.BarrierType):null,costs:r(e.attributes.Costs)?W(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:(a=e.attributes.Name)!=null?a:null,objectId:(s=e.attributes.ObjectID)!=null?s:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:(l=e.attributes.ScaleFactor)!=null?l:null,symbol:e.symbol})}toGraphic(){var a,s;const e={ObjectID:v(this.objectId),BarrierType:r(this.barrierType)?g.toJSON(this.barrierType):null,Costs:r(this.costs)?JSON.stringify(V(this.costs)):null,Name:(a=this.name)!=null?a:null,ScaleFactor:(s=this.scaleFactor)!=null?s:null};return new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],h.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i({type:g.apiValues,json:{name:"attributes.BarrierType",read:{reader:g.read},write:{writer:g.write}}})],h.prototype,"barrierType",void 0),t([i()],h.prototype,"costs",void 0),t([m("costs",["attributes"])],h.prototype,"readCosts",null),t([E("costs")],h.prototype,"writeCosts",null),t([i({type:pe,json:{write:!0}})],h.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),t([i({type:U})],h.prototype,"popupTemplate",void 0),t([i()],h.prototype,"scaleFactor",void 0),t([i({types:k})],h.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=Z=t([D("esri.rest.support.PolygonBarrier")],h);const Ee=h;var Q;let f=Q=class extends x(C){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,a){return O(a.attributes,"Attr_")}static fromGraphic(e){var a,s,l;return new Q({barrierType:r(e.attributes.BarrierType)?g.fromJSON(e.attributes.BarrierType):null,costs:r(e.attributes.Costs)?W(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:(a=e.attributes.Name)!=null?a:null,objectId:(s=e.attributes.ObjectID)!=null?s:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:(l=e.attributes.ScaleFactor)!=null?l:null,symbol:e.symbol})}toGraphic(){const e={ObjectID:v(this.objectId),BarrierType:r(this.barrierType)?g.toJSON(this.barrierType):null,Costs:r(this.costs)?JSON.stringify(V(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};f.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],f.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i({type:g.apiValues,json:{read:{source:"attributes.BarrierType",reader:g.read}}})],f.prototype,"barrierType",void 0),t([i()],f.prototype,"costs",void 0),t([m("costs",["attributes"])],f.prototype,"readCosts",null),t([i({type:ie,json:{write:!0}})],f.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],f.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],f.prototype,"objectId",void 0),t([i({type:U})],f.prototype,"popupTemplate",void 0),t([i()],f.prototype,"scaleFactor",void 0),t([i({types:k})],f.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],f.prototype,"type",void 0),f=Q=t([D("esri.rest.support.PolylineBarrier")],f);const je=f;let b=class extends x(C){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,a){var s,l;return(l=(s=a.id)!=null?s:a.itemId)!=null?l:null}readRestrictionAttributes(e,a){const{restrictionAttributeNames:s}=a;return A(s)?null:s.map(l=>ne.fromJSON(l))}writeRestrictionAttributes(e,a,s){A(e)||(a[s]=e.map(l=>ne.toJSON(l)))}};t([i({type:[Object],json:{write:!0}})],b.prototype,"attributeParameterValues",void 0),t([i({type:String,json:{write:!0}})],b.prototype,"description",void 0),t([L(be,{ignoreUnknown:!1})],b.prototype,"distanceAttributeName",void 0),t([i({type:String,json:{write:!0}})],b.prototype,"id",void 0),t([m("id",["id","itemId"])],b.prototype,"readId",null),t([L(j,{ignoreUnknown:!1})],b.prototype,"impedanceAttributeName",void 0),t([i({type:String,json:{write:!0}})],b.prototype,"name",void 0),t([i({type:[String],json:{write:!0}})],b.prototype,"restrictionAttributeNames",void 0),t([m("restrictionAttributeNames")],b.prototype,"readRestrictionAttributes",null),t([E("restrictionAttributeNames")],b.prototype,"writeRestrictionAttributes",null),t([i({type:Number,json:{write:{allowNull:!0}}})],b.prototype,"simplificationTolerance",void 0),t([L(ue)],b.prototype,"simplificationToleranceUnits",void 0),t([L(ce,{ignoreUnknown:!1})],b.prototype,"timeAttributeName",void 0),t([L(me)],b.prototype,"type",void 0),t([i({type:Boolean,json:{write:!0}})],b.prototype,"useHierarchy",void 0),t([L(de)],b.prototype,"uturnAtJunctions",void 0),b=t([D("esri.rest.support.TravelMode")],b);const ye=b;let N=class extends C{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return A(e)?null:e.map(a=>j.fromJSON(a))}writeAccumulateAttributes(e,a,s){!A(e)&&e.length&&(a[s]=e.map(l=>j.toJSON(l)))}};t([i({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],N.prototype,"accumulateAttributes",void 0),t([m("accumulateAttributes")],N.prototype,"readAccumulateAttributes",null),t([E("accumulateAttributes")],N.prototype,"writeAccumulateAttributes",null),t([i({type:String,json:{write:!0}})],N.prototype,"directionsLanguage",void 0),t([i({type:Boolean,json:{write:!0}})],N.prototype,"findBestSequence",void 0),t([i({type:Boolean,json:{write:!0}})],N.prototype,"preserveFirstStop",void 0),t([i({type:Boolean,json:{write:!0}})],N.prototype,"preserveLastStop",void 0),t([i({type:Boolean,json:{write:!0}})],N.prototype,"startTimeIsUTC",void 0),t([i({type:Boolean,json:{write:!0}})],N.prototype,"timeWindowsAreUTC",void 0),t([i({type:ye,json:{write:!0}})],N.prototype,"travelMode",void 0),N=t([D("esri.layers.support.RouteSettings")],N);const Te=N;var ee;let n=ee=class extends x(C){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,a){return r(a.attributes.EndTimeUTC)?new Date(a.attributes.EndTimeUTC):null}readEndTimeOffset(e,a){return z(a.attributes.EndTime,a.attributes.EndTimeUTC)}readStartTime(e,a){return r(a.attributes.StartTimeUTC)?new Date(a.attributes.StartTimeUTC):null}readStartTimeOffset(e,a){return z(a.attributes.StartTime,a.attributes.StartTimeUTC)}readTotalCosts(e,a){return O(a.attributes,"Total_")}readTotalViolations(e,a){return O(a.attributes,"TotalViolation_")}readTotalWait(e,a){return O(a.attributes,"TotalWait_")}static fromGraphic(e){var a,s,l,c,S,w,F;return new ee({analysisSettings:r(e.attributes.AnalysisSettings)?Te.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:r(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:(a=e.attributes.EndUTCOffset)!=null?a:null,geometry:e.geometry,messages:r(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:(s=e.attributes.ObjectID)!=null?s:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:r(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:(l=e.attributes.StartUTCOffset)!=null?l:null,symbol:e.symbol,totalCosts:r(e.attributes.TotalCosts)?W(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:(c=e.attributes.TotalMeters)!=null?c:null,totalDuration:(S=e.attributes.TotalMinutes)!=null?S:null,totalLateDuration:(w=e.attributes.TotalLateMinutes)!=null?w:null,totalWaitDuration:(F=e.attributes.TotalWaitMinutes)!=null?F:null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:v(this.objectId),AnalysisSettings:r(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:r(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:r(this.messages)?JSON.stringify(this.messages):null,RouteName:v(this.name),StartTime:r(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:r(this.totalCosts)?JSON.stringify(V(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:v(this.version)};return new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:v(this.popupTemplate)})}};n.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],n.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i()],n.prototype,"analysisSettings",void 0),t([i()],n.prototype,"endTime",void 0),t([m("endTime",["attributes.EndTimeUTC"])],n.prototype,"readEndTime",null),t([i()],n.prototype,"endTimeOffset",void 0),t([m("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],n.prototype,"readEndTimeOffset",null),t([i({json:{read:{source:"attributes.FirstStopID"}}})],n.prototype,"firstStopId",void 0),t([i({type:ie})],n.prototype,"geometry",void 0),t([i({json:{read:{source:"attributes.LastStopID"}}})],n.prototype,"lastStopId",void 0),t([i()],n.prototype,"messages",void 0),t([i({json:{read:{source:"attributes.Name"}}})],n.prototype,"name",void 0),t([i({json:{read:{source:"attributes.ObjectID"}}})],n.prototype,"objectId",void 0),t([i({type:U})],n.prototype,"popupTemplate",void 0),t([i()],n.prototype,"startTime",void 0),t([m("startTime",["attributes.StartTimeUTC"])],n.prototype,"readStartTime",null),t([i()],n.prototype,"startTimeOffset",void 0),t([m("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],n.prototype,"readStartTimeOffset",null),t([i({json:{read:{source:"attributes.StopCount"}}})],n.prototype,"stopCount",void 0),t([i({types:k})],n.prototype,"symbol",void 0),t([i()],n.prototype,"totalCosts",void 0),t([m("totalCosts",["attributes"])],n.prototype,"readTotalCosts",null),t([i()],n.prototype,"totalDistance",void 0),t([i()],n.prototype,"totalDuration",void 0),t([i()],n.prototype,"totalLateDuration",void 0),t([i()],n.prototype,"totalViolations",void 0),t([m("totalViolations",["attributes"])],n.prototype,"readTotalViolations",null),t([i()],n.prototype,"totalWait",void 0),t([m("totalWait",["attributes"])],n.prototype,"readTotalWait",null),t([i()],n.prototype,"totalWaitDuration",void 0),t([i({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),t([i()],n.prototype,"version",void 0),n=ee=t([D("esri.rest.support.RouteInfo")],n);const Me=n;var te;let o=te=class extends x(C){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,a){return z(a.attributes.ArriveTime,a.attributes.ArriveTimeUTC)}readCumulativeCosts(e,a){return O(a.attributes,"Cumul_")}readDepartTimeOffset(e,a){return z(a.attributes.DepartTime,a.attributes.DepartTimeUTC)}readServiceCosts(e,a){return O(a.attributes,"Attr_")}writeServiceCosts(e,a){re(e,a,"Attr_")}writeTimeWindowEnd(e,a){A(e)||(a.attributes||(a.attributes={}),a.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,a){A(e)||(a.attributes||(a.attributes={}),a.attributes.TimeWindowStart=e.getTime())}readViolations(e,a){return O(a.attributes,"Violation_")}readWait(e,a){return O(a.attributes,"Wait_")}static fromGraphic(e){var a,s,l,c,S,w,F,B,J,R,P;return new te({arriveCurbApproach:r(e.attributes.ArrivalCurbApproach)?y.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:r(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:r(e.attributes.CumulativeCosts)?W(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:(a=e.attributes.CumulativeMeters)!=null?a:null,cumulativeDuration:(s=e.attributes.CumulativeMinutes)!=null?s:null,curbApproach:r(e.attributes.CurbApproach)?y.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:r(e.attributes.DepartureCurbApproach)?y.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:r(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:(l=e.attributes.DepartureUTCOffset)!=null?l:null,geometry:e.geometry,lateDuration:(c=e.attributes.LateMinutes)!=null?c:null,locationType:r(e.attributes.LocationType)?$.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:(S=e.attributes.ObjectID)!=null?S:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:(w=e.attributes.Sequence)!=null?w:null,serviceCosts:r(e.attributes.ServiceCosts)?W(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:(F=e.attributes.ServiceMeters)!=null?F:null,serviceDuration:(B=e.attributes.ServiceMinutes)!=null?B:null,status:r(e.attributes.Status)?I.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:r(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:(J=e.attributes.TimeWindowEndUTCOffset)!=null?J:null,timeWindowStart:r(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:(R=e.attributes.TimeWindowStartUTCOffset)!=null?R:null,waitDuration:(P=e.attributes.WaitMinutes)!=null?P:null})}toGraphic(){var a,s;const e={ObjectID:v(this.objectId),ArrivalCurbApproach:r(this.arriveCurbApproach)?y.toJSON(this.arriveCurbApproach):null,ArrivalTime:r(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:r(this.cumulativeCosts)?JSON.stringify(V(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:r(this.curbApproach)?y.toJSON(this.curbApproach):null,DepartureCurbApproach:r(this.departCurbApproach)?y.toJSON(this.departCurbApproach):null,DepartureTime:r(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:r(this.locationType)?$.toJSON(this.locationType):null,Name:v(this.name),RouteName:v(this.routeName),Sequence:this.sequence,ServiceCosts:r(this.serviceCosts)?JSON.stringify(V(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:r(this.status)?I.toJSON(this.status):null,TimeWindowEnd:r(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:(a=this.timeWindowEndOffset)!=null?a:this.arriveTimeOffset,TimeWindowStart:r(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:(s=this.timeWindowStartOffset)!=null?s:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new M({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};o.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],o.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([i({type:y.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:y.read}}})],o.prototype,"arriveCurbApproach",void 0),t([i({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],o.prototype,"arriveTime",void 0),t([i()],o.prototype,"arriveTimeOffset",void 0),t([m("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],o.prototype,"readArriveTimeOffset",null),t([i({json:{name:"attributes.Bearing",read:!1,write:!0}})],o.prototype,"bearing",void 0),t([i({json:{name:"attributes.BearingTol",read:!1,write:!0}})],o.prototype,"bearingTol",void 0),t([i()],o.prototype,"cumulativeCosts",void 0),t([m("cumulativeCosts",["attributes"])],o.prototype,"readCumulativeCosts",null),t([i()],o.prototype,"cumulativeDistance",void 0),t([i()],o.prototype,"cumulativeDuration",void 0),t([i({type:y.apiValues,json:{name:"attributes.CurbApproach",read:{reader:y.read},write:{writer:y.write}}})],o.prototype,"curbApproach",void 0),t([i({type:y.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:y.read}}})],o.prototype,"departCurbApproach",void 0),t([i({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],o.prototype,"departTime",void 0),t([i()],o.prototype,"departTimeOffset",void 0),t([m("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],o.prototype,"readDepartTimeOffset",null),t([i({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],o.prototype,"distanceToNetworkInMeters",void 0),t([i({type:ae,json:{write:!0}})],o.prototype,"geometry",void 0),t([i()],o.prototype,"lateDuration",void 0),t([i({type:$.apiValues,json:{name:"attributes.LocationType",read:{reader:$.read},write:{writer:$.write}}})],o.prototype,"locationType",void 0),t([i({json:{name:"attributes.Name"}})],o.prototype,"name",void 0),t([i({json:{name:"attributes.NavLatency",read:!1,write:!0}})],o.prototype,"navLatency",void 0),t([i({json:{name:"attributes.ObjectID"}})],o.prototype,"objectId",void 0),t([i({type:U})],o.prototype,"popupTemplate",void 0),t([i({json:{read:{source:"attributes.PosAlong"}}})],o.prototype,"posAlong",void 0),t([i({json:{name:"attributes.RouteName"}})],o.prototype,"routeName",void 0),t([i()],o.prototype,"serviceCosts",void 0),t([m("serviceCosts",["attributes"])],o.prototype,"readServiceCosts",null),t([E("serviceCosts")],o.prototype,"writeServiceCosts",null),t([i()],o.prototype,"serviceDistance",void 0),t([i()],o.prototype,"serviceDuration",void 0),t([i({json:{name:"attributes.Sequence"}})],o.prototype,"sequence",void 0),t([i({type:q.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:q.read}}})],o.prototype,"sideOfEdge",void 0),t([i({json:{read:{source:"attributes.SnapX"}}})],o.prototype,"snapX",void 0),t([i({json:{read:{source:"attributes.SnapY"}}})],o.prototype,"snapY",void 0),t([i({json:{read:{source:"attributes.SnapZ"}}})],o.prototype,"snapZ",void 0),t([i({json:{read:{source:"attributes.SourceID"}}})],o.prototype,"sourceId",void 0),t([i({json:{read:{source:"attributes.SourceOID"}}})],o.prototype,"sourceOid",void 0),t([i({type:I.apiValues,json:{read:{source:"attributes.Status",reader:I.read}}})],o.prototype,"status",void 0),t([i({types:k})],o.prototype,"symbol",void 0),t([i({type:Date,json:{name:"attributes.TimeWindowEnd"}})],o.prototype,"timeWindowEnd",void 0),t([E("timeWindowEnd")],o.prototype,"writeTimeWindowEnd",null),t([i()],o.prototype,"timeWindowEndOffset",void 0),t([i({type:Date,json:{name:"attributes.TimeWindowStart"}})],o.prototype,"timeWindowStart",void 0),t([E("timeWindowStart")],o.prototype,"writeTimeWindowStart",null),t([i()],o.prototype,"timeWindowStartOffset",void 0),t([i({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),t([i()],o.prototype,"violations",void 0),t([m("violations",["attributes"])],o.prototype,"readViolations",null),t([i()],o.prototype,"waitDuration",void 0),t([i()],o.prototype,"wait",void 0),t([m("wait",["attributes"])],o.prototype,"readWait",null),o=te=t([D("esri.rest.support.Stop")],o);const Ue=o;export{ye as A,Ue as D,xe as O,De as R,Oe as S,j as U,Me as a,we as b,Ce as c,z as d,ne as e,je as f,Ee as g,Fe as h,ge as i,ue as j,Ne as k,de as l,Te as m,Ie as n,Se as o,ve as r,fe as s,Ae as w,ce as y};
