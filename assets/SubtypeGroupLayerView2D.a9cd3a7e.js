import{e as d,b as u,w as m,h as y,a7 as h,r as b,gJ as c}from"./index.a33ecea7.js";import g from"./FeatureLayerView2D.60e9f878.js";import"./EffectView.f5ec831b.js";import"./definitions.618cbc79.js";import"./LayerView2D.d9ef92c2.js";import"./Container.5f323bc4.js";import"./schemaUtils.bac079cd.js";import"./enums.a12f2baf.js";import"./color.d55e9401.js";import"./number.e821bc3e.js";import"./utils.28eb7bc1.js";import"./MaterialKey.23a3bc73.js";import"./alignmentUtils.cba6cd73.js";import"./visualVariablesUtils.88d0eb69.js";import"./createSymbolSchema.0ace72f9.js";import"./cimAnalyzer.32b2260b.js";import"./fontUtils.401be2b9.js";import"./BidiEngine.8d79ab2c.js";import"./GeometryUtils.b33f0569.js";import"./Rect.85ff00e1.js";import"./ExpandedCIM.1794ca2e.js";import"./util.ca7e0ea2.js";import"./FeatureLayerView.d4db084d.js";import"./floorFilterUtils.095bd939.js";import"./popupUtils.5d07a4ea.js";import"./LayerView.88bcfa48.js";import"./RefreshableLayerView.e0df9b3f.js";function f(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let a=class extends g{initialize(){this.addHandles([m(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var o;const i=this.layer.sublayers.some(p=>p.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,n=this.tileRenderer==null||((o=this.tileRenderer)==null?void 0:o.updating),l=i&&(e||s||t||r||n);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${l}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${n}
`),l}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(n=>f(n,s)).map(n=>n.subtypeCode);if(!t.length)return e;e=b(e)?e:new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};a=d([u("esri.views.2d.layers.SubtypeGroupLayerView2D")],a);const Q=a;export{Q as default};
