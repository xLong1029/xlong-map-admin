import{rk as g,rl as y,jz as w,rm as I,rn as b,jP as h,i as m,bp as _}from"./index.a33ecea7.js";class v{constructor(){this.code=null,this.description=null}}class P{constructor(t){this.error=new v,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function f(e){return new P(e)}class j{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function z(e){return new j(e)}const a=new Set;function F(e,t,i,p=!1,u){var c;a.clear();for(const r in i){const n=e.get(r);if(!n)continue;const l=i[r],s=q(n,l);if(s!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:l,sanitizedValue:s}}),a.add(n.name),n&&(p||n.editable)){const d=g(n,s);if(d)return f(y(d,n,s));t[n.name]=s}}for(const r of(c=e==null?void 0:e.requiredFields)!=null?c:[])if(!a.has(r.name))return f(`missing required field "${r.name}"`);return null}function q(e,t){let i=t;return typeof t=="string"&&w(e)?i=parseFloat(t):t!=null&&I(e)&&typeof t!="string"&&(i=String(t)),b(i)}let o;function G(e,t){if(!e||!h(t))return e;if("rings"in e||"paths"in e){if(m(o))throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function E(){return m(o)&&(o=await _(()=>import("./geometryEngineJSON.98f0d547.js"),["assets/geometryEngineJSON.98f0d547.js","assets/index.a33ecea7.js","assets/index.56d92a5e.css","assets/geometryEngineJSON.0e179d51.js"])),o}async function S(e,t){!h(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await E()}export{f as a,z as f,G as g,F as m,S as w};
