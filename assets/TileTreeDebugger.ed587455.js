import{e as r,d as P,S as $,g as S,r as p,l as j,f as x,j as O,m as k,i as A,y as d,b as L,k as z}from"./index.a33ecea7.js";const T=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let a=class extends P{constructor(s){super(s),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=T.map(s=>new $({color:[s[0],s[1],s[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(s){this._enabled!==s&&(this._enabled=s,this.update())}update(){if(!this._enabled)return void this.clear();const s=e=>{if(p(e.label))return e.label;let l=e.lij.toString();return p(e.loadPriority)&&(l+=` (${e.loadPriority})`),l},h=this.getTiles(),y=new Array,g=new Set((this._labels.size,this._labels.keys()));h.forEach((e,l)=>{const t=e.lij.toString();g.delete(t);const M=e.lij[0],u=e.geometry;if(this.enablePolygons&&!this._polygons.has(t)){const i=new S({geometry:u,symbol:this._symbols[M%this._symbols.length]});this._polygons.set(t,i),y.push(i)}if(this.enableLabels){const i=s(e),_=l/(h.length-1),c=z(0,200,_),m=z(20,6,_)/.75,w=p(e.loadPriority)&&e.loadPriority>=h.length,v=new j([c,w?0:c,w?0:c]),f=this.view.type==="3d"?()=>new x({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new O({text:i,halo:{color:"white",size:1/.75},material:{color:v},size:m})]}):()=>new k({text:i,haloColor:"white",haloSize:1/.75,color:v,size:m}),n=this._labels.get(t);if(n){const o=f();(A(n.symbol)||JSON.stringify(o)!==JSON.stringify(n.symbol))&&(n.symbol=o)}else{const o=new S({geometry:u.extent.center,symbol:f()});this._labels.set(t,o),y.push(o)}}});const b=new Array;g.forEach(e=>{const l=this._polygons.get(e);l!=null&&(b.push(l),this._polygons.delete(e));const t=this._labels.get(e);t!=null&&(b.push(t),this._labels.delete(e))}),this.view.graphics.removeMany(b),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};r([d({constructOnly:!0})],a.prototype,"view",void 0),r([d({readOnly:!0})],a.prototype,"updating",void 0),r([d()],a.prototype,"enabled",null),a=r([L("esri.views.support.TileTreeDebugger")],a);export{a as b};
