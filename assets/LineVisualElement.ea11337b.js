import{m3 as w,i as u,r as n,ad as P,m0 as v,mC as b,gQ as C,mD as E,aE as R,C as O,mE as G,mF as x,hN as j,mj as F,aN as d,kD as _,mG as M,h9 as H,ak as l,gF as f,mH as $,mI as D,n as g}from"./index.a33ecea7.js";function W(p,e,t,r=!1){const s=w(p,e);return u(s)?null:(s.hasZ&&!r||!n(t)||(s.z=P(v(t,s),0)),s)}function N(p,e,t){t.warnOnce(`Failed to project analysis geometry (id: '${p.id}'), projection from spatial reference (wkid: '${e.wkid}') to view spatial reference is not supported. Projection may be possible after calling projection.load().`)}class S extends b{constructor(e){super(e.view),this._resources=null,this._transform=C()}get object(){return n(this._resources)?this._resources.object:null}get transform(){return this._transform}set transform(e){E(this._transform,e),n(this._resources)&&(this._resources.object.transformation=this._transform)}recreate(){this.attached&&this.createResources()}recreateGeometry(){if(u(this._resources))return;const e=this._resources.object,t=this.view._stage;t.removeMany(e.geometries),e.removeAllGeometries(),this.createGeometries(e),e.visible=this.visible,t.addMany(e.geometries)}createResources(){this.destroyResources();const e=this.view._stage;if(!e)return;const t=new R({pickable:!1,updatePolicy:O.SYNC});e.add(t);const r=new G({castShadow:!1});r.transformation=this._transform,this.createExternalResources(),this.createGeometries(r),e.addMany(r.geometries),this.forEachExternalMaterial(s=>e.add(s)),e.add(r),t.add(r),r.visible=this.visible,this._resources={layer:t,object:r}}destroyResources(){const e=this.view._stage;!u(this._resources)&&e&&(e.remove(this._resources.object),e.remove(this._resources.layer),this.forEachExternalMaterial(t=>{e.remove(t),t.dispose()}),e.removeMany(this._resources.object.geometries),this._resources.object.dispose(),this.destroyExternalResources(),this._resources=null)}updateVisibility(e){u(this._resources)||(this._resources.object.visible=e)}}class z extends S{constructor(e,t){super(e),this._hasExternalMaterial=!1,this._hasExternalMaterial=n(t),this._material=n(t)?t:new x({width:1,color:j(1,0,1,1),stippleOffColor:null,stipplePattern:null,stipplePreferContinuous:!0,isClosed:!1,falloff:0,innerColor:null,innerWidth:1,hasPolygonOffset:!1,renderOccluded:F.OccludeAndTransparent,writeDepth:!0}),this.applyProps(e)}setGeometryFromRenderSpacePoint(e,t=1e3){this.geometry=[[[e[0]-t,e[1]+0,e[2]+0],[e[0]+t,e[1]+0,e[2]+0]],[[e[0]-0,e[1]-t,e[2]+0],[e[0]+0,e[1]+t,e[2]+0]],[[e[0]-0,e[1]+0,e[2]-t],[e[0]+0,e[1]+0,e[2]+t]]]}setGeometryFromExtent(e){const t=this.view.spatialReference,r=l(),s=l(),o=100,i=[];d(r,e[0],e[1],o),this.view.renderCoordsHelper.toRenderCoords(r,t,s),i.push([s[0],s[1],s[2]]),d(r,e[2],e[1],o),this.view.renderCoordsHelper.toRenderCoords(r,t,s),i.push([s[0],s[1],s[2]]),d(r,e[2],e[3],o),this.view.renderCoordsHelper.toRenderCoords(r,t,s),i.push([s[0],s[1],s[2]]),d(r,e[0],e[3],o),this.view.renderCoordsHelper.toRenderCoords(r,t,s),i.push([s[0],s[1],s[2]]),d(r,e[0],e[1],o),this.view.renderCoordsHelper.toRenderCoords(r,t,s),i.push([s[0],s[1],s[2]]),d(r,e[0],e[1],o),this.view.renderCoordsHelper.toRenderCoords(r,t,s),i.push([s[0],s[1],s[2]]),this.geometry=[i]}setGeometryFromFrustum(e){const t=[];e.lines.forEach(r=>{t.push([r.origin[0],r.origin[1],r.origin[2]]),t.push([r.endpoint[0],r.endpoint[1],r.endpoint[2]])}),this.geometry=[t]}setGeometryFromBoundedPlane(e){const t=[],r=e.origin,s=e.basis1,o=e.basis2,i=.5,a=l(),h=l(),m=l(),c=l();a[0]=r[0]-s[0]*i-o[0]*i,a[1]=r[1]-s[1]*i-o[1]*i,a[2]=r[2]-s[2]*i-o[2]*i,h[0]=r[0]-s[0]*i+o[0]*i,h[1]=r[1]-s[1]*i+o[1]*i,h[2]=r[2]-s[2]*i+o[2]*i,m[0]=r[0]+s[0]*i+o[0]*i,m[1]=r[1]+s[1]*i+o[1]*i,m[2]=r[2]+s[2]*i+o[2]*i,c[0]=r[0]+s[0]*i-o[0]*i,c[1]=r[1]+s[1]*i-o[1]*i,c[2]=r[2]+s[2]*i-o[2]*i,t.push([a[0],a[1],a[2]]),t.push([h[0],h[1],h[2]]),t.push([m[0],m[1],m[2]]),t.push([c[0],c[1],c[2]]),t.push([a[0],a[1],a[2]]),this.geometry=[t]}setGeometryFromSegment(e){const t=e.endRenderSpace;this.transform=_(y,t);const{points:r}=e.createRenderGeometry(t,this.view.renderCoordsHelper);this.geometry=[r]}setGeometryFromSegments(e,t=M){this.transform=_(y,t),this.geometry=e.map(r=>r.createRenderGeometry(t,this.view.renderCoordsHelper).points)}getTransformedGeometry(){return u(this._geometry)?null:this._geometry.map(e=>e.map(t=>H(l(),t,this.transform)))}get renderOccluded(){return this._material.parameters.renderOccluded}set renderOccluded(e){this._material.setParameters({renderOccluded:e})}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get width(){return this._material.parameters.width}set width(e){this._material.setParameters({width:e})}get color(){return this._material.parameters.color}set color(e){this._material.setParameters({color:f(e)})}get innerWidth(){return this._material.parameters.innerWidth}set innerWidth(e){this._material.setParameters({innerWidth:e})}get innerColor(){return this._material.parameters.innerColor}set innerColor(e){this._material.setParameters({innerColor:n(e)?f(e):null})}get stipplePattern(){return this._material.parameters.stipplePattern}set stipplePattern(e){n(this._material)&&this._material.setParameters({stipplePattern:e})}get stippleOffColor(){return this._material.parameters.stippleOffColor}set stippleOffColor(e){this._material.setParameters({stippleOffColor:n(e)?f(e):null})}get stipplePreferContinuous(){return this._material.parameters.stipplePreferContinuous}set stipplePreferContinuous(e){this._material.setParameters({stipplePreferContinuous:e})}get writeDepthEnabled(){return this._material.parameters.writeDepth}set writeDepthEnabled(e){this._material.setParameters({writeDepth:e})}get falloff(){return this._material.parameters.falloff}set falloff(e){this._material.setParameters({falloff:e})}get polygonOffset(){return this._material.parameters.hasPolygonOffset}set polygonOffset(e){this._material.setParameters({hasPolygonOffset:e})}createExternalResources(){}destroyExternalResources(){}createGeometries(e){for(const t of $(this.geometry)){const r=D(g(this._material),t);e.addGeometry(r)}}forEachExternalMaterial(e){this._hasExternalMaterial||e(g(this._material))}}const y=C();export{N as a,W as b,z as g,S as n};
