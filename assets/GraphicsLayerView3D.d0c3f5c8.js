import{ay as c,a as h,n as d,i as l,aD as u,C as m,e as o,y as a,b as g}from"./index.a33ecea7.js";import{n as y}from"./LayerView3D.f81b9bae.js";import{m as f,a as b}from"./queryForSymbologySnapping.3cf06087.js";import{A as v}from"./GraphicsProcessor.f9d06b27.js";import{l as S}from"./projectExtentUtils.0986a39c.js";import{u as w}from"./LayerView.88bcfa48.js";import"./Graphics3DObjectStates.e0ca5962.js";import"./rendererConversion.ba1aecaf.js";import"./optimizedFeatureQueryEngineAdapter.19cbae31.js";import"./centroid.5ec46060.js";import"./PooledRBush.efdefeda.js";let i=class extends y(w){constructor(){super(...arguments),this.type="graphics-3d",this.symbologySnappingSupported=!0,this._slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null}initialize(){this._set("processor",new v({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this.handles.add(this.layer.on("graphic-update",e=>this.processor.graphicsCore.graphicUpdateHandler(e))),this.addResolvingPromise(S(this).then(e=>this.fullExtentInLocalViewSpatialReference=e)),this.layer.internal?this.notifyChange("updating"):this.handles.add(c(()=>{var e,s;return(s=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:s.ready},()=>()=>this.notifyChange("updating"),{once:!0}))}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._set("processor",h(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){var e;return this.canResume()&&!((e=this.processor)!=null&&e.frustumVisibilitySuspended)}get slicePlaneEnabled(){const e=this.layer.internal;return this._slicePlaneEnabled&&!e}set slicePlaneEnabled(e){this._slicePlaneEnabled=e}getSuspendInfo(){var s,r,t,n;const e=super.getSuspendInfo();return e.outsideScaleRange=(r=(s=this.processor)==null?void 0:s.scaleVisibilitySuspended)!=null?r:!1,e.outsideOfView=(n=(t=this.processor)==null?void 0:t.frustumVisibilitySuspended)!=null?n:!1,e}async fetchPopupFeatures(e,s){var r,t;return(t=(r=d(s))==null?void 0:r.clientGraphics)!=null?t:[]}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,s){return this.processor.whenGraphicBounds(e,s)}computeAttachmentOrigin(e,s){var r;return(r=this.processor)==null?void 0:r.computeAttachmentOrigin(e,s)}getSymbolLayerSize(e,s){return this.processor.getSymbolLayerSize(e,s)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e){return this.processor.highlight(e)}async elevationAlignPointsInFeatures(e,s){const{processor:r}=this;if(l(r)||l(r.graphics3DGraphics))throw new u("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");const{graphics3DGraphics:t}=r,n=p=>typeof p=="number"?t.get(p):void 0;return f(this.view,this.layer,n,e,s)}async queryForSymbologySnapping(e,s){return b(this.processor,e,s)}get updatePolicy(){var e;return((e=this.processor)==null?void 0:e.graphicsCore.effectiveUpdatePolicy)||m.SYNC}canResume(){var e;return super.canResume()&&!((e=this.processor)!=null&&e.scaleVisibilitySuspended)}isUpdating(){var e,s,r;return!(!((e=this.processor)!=null&&e.updating)&&(this.layer.internal||((r=(s=this.view)==null?void 0:s.basemapTerrain)==null?void 0:r.ready)))}get performanceInfo(){var e,s,r;return{displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:-1,totalNumberOfFeatures:-1,nodes:0,core:null,updating:this.updating,elevationUpdating:(s=(e=this.processor)==null?void 0:e.elevationAlignment.updating)!=null?s:!1,visibilityFrustum:!((r=this.processor)!=null&&r.frustumVisibilitySuspended)}}getUsedMemory(){var e,s,r;return(r=(s=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:s.usedMemory)!=null?r:0}getUnloadedMemory(){var e,s;return(s=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:s.unprocessedMemoryEstimate}ignoresMemoryFactor(){return!0}};o([a()],i.prototype,"loadedGraphics",null),o([a({readOnly:!0})],i.prototype,"legendEnabled",null),o([a()],i.prototype,"layer",void 0),o([a({readOnly:!0})],i.prototype,"processor",void 0),o([a()],i.prototype,"_slicePlaneEnabled",void 0),o([a({type:Boolean})],i.prototype,"slicePlaneEnabled",null),i=o([g("esri.views.3d.layers.GraphicsLayerView3D")],i);const _=i;export{_ as default};
