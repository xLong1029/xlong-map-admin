import{n7 as b,bG as g,aP as m,rM as x,rN as _,e as L,b as P,rO as f,oD as V,ak as h,a4 as v,i as C,ad as j,qP as S,jL as E,oF as I,rP as T,rQ as y,n3 as u}from"./index.a33ecea7.js";const N=1e3;function $(t,e,s){const n=x(),o=_(n);return b(o,o,t,.5),b(o,o,e,.5),n[3]=g(o,t),m(o,o,s),n}let l=class{constructor(){this._idToComponent=new Map,this._components=new f(t=>t.bounds),this._edges=new f(t=>t.bounds),this._tmpLineSegment=V(),this._tmpP1=h(),this._tmpP2=h(),this._tmpP3=h(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),v(e),await this._ensureEdgeLocations(t,e);const s=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,s),s.length<N),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,e){const s=[];if(this._components.forEachNeighbor(i=>{if(C(i.info)){const{id:c,uid:d}=i;s.push({id:c,uid:d})}return!0},t.bounds),!s.length)return;const n={components:s},o=await this.remoteClient.invoke("fetchAllEdgeLocations",n,j(e,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const e=new p(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const s=[];this._edges.forEachNeighbor(n=>(n.component===e&&s.push(n),!0),e.bounds),this._edges.remove(s),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(C(e)||t.uid!==e.uid)return;const s=S.createView(t.locations),n=new Array(s.count),o=h(),i=h();for(let a=0;a<s.count;a++){s.position0.getVec(a,o),s.position1.getVec(a,i);const r=$(o,i,t.origin),w=new k(e,a,r);n[a]=w}this._edges.add(n);const{objectIds:c,origin:d}=t;e.info={locations:s,objectIds:c,origin:d}}_addCandidates(t,e,s){const{info:n}=e.component,{origin:o,objectIds:i}=n,c=n.locations,d=c.position0.getVec(e.index,this._tmpP1),a=c.position1.getVec(e.index,this._tmpP2);m(d,d,o),m(a,a,o);const r=i[c.componentIndex.get(e.index)];this._addEdgeCandidate(t,r,d,a,s),this._addVertexCandidate(t,r,d,s),this._addVertexCandidate(t,r,a,s)}_addEdgeCandidate(t,e,s,n,o){if(!(t.types&E.EDGE))return;const i=_(t.bounds),c=I(s,n,this._tmpLineSegment),d=T(c,i,this._tmpP3);y(t.bounds,d)&&o.push({type:"edge",objectId:e,target:u(d),distance:g(i,d),start:u(s),end:u(n)})}_addVertexCandidate(t,e,s,n){if(!(t.types&E.VERTEX))return;const o=_(t.bounds);y(t.bounds,s)&&n.push({type:"vertex",objectId:e,target:u(s),distance:g(o,s)})}};l=L([P("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],l);const F=l;class p{constructor(e,s){this.id=e,this.bounds=s,this.info=null,this.uid=++p.uid}}p.uid=0;class k{constructor(e,s,n){this.component=e,this.index=s,this.bounds=n}}export{F as default};
