import{e as o,y as a,b as d,ae as t,gG as l}from"./index.a33ecea7.js";import{o as p}from"./I3SUtil.5b1faf74.js";const E="updating";function h(s){return s==="updating"?null:s}function x(s){return s==="updating"}const g=s=>{let n=class extends s{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=e=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&t.getLogger(this.declaredClass).error("Error while evaluating definitionExpression: "+e),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&t.getLogger(this.declaredClass).error("Further errors are ignored")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const e=l.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!e.isStandardized)return t.getLogger(this.declaredClass).error("definitionExpression is using non standard function"),null;const r=[],i=e.fieldNames;return p(i,this.i3slayer.fields,{missingFields:r}),r.length>0?(t.getLogger(this.declaredClass).error(`definitionExpression references unknown fields: ${r.join(", ")}`),null):(this._definitionExpressionErrors=0,e)}catch(e){return t.getLogger(this.declaredClass).error("Failed to parse definitionExpression: "+e),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:[]}_evaluateClause(e,r){try{return e.testFeature(r)}catch(i){return this.logError(i),!1}}_addDefinitionExpressionToQuery(e){if(!this.parsedDefinitionExpression)return e;const r=this.i3slayer.definitionExpression,i=e.clone();return i.where?i.where=`(${r}) AND (${i.where})`:i.where=r,i}};return o([a()],n.prototype,"i3slayer",void 0),o([a({readOnly:!0})],n.prototype,"parsedDefinitionExpression",null),o([a({readOnly:!0})],n.prototype,"definitionExpressionFields",null),n=o([d("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],n),n};export{h as a,E as n,g as t,x as u};
