import{dy as $,sX as Ot,i as U,l3 as ut,e as s,y as l,g7 as A,ha as Fe,g8 as D,n$ as _t,aR as L,b as F,g5 as G,dj as fe,sY as pe,sZ as ze,s_ as qe,i3 as wt,r as b,ga as ne,gc as Re,gd as we,by as C,gb as Ge,ap as Ve,fC as jt,g3 as Ue,d0 as ve,fa as pt,g4 as ct,s$ as Vt,k0 as he,sP as Mt,p_ as At,fj as $t,eX as Jt,ae as mt,aD as j,g6 as k,sm as dt,n as je,E as Be,t0 as Et,t1 as zt,t2 as qt,v as Lt,w as Gt,g as Ut,t3 as Ht,o0 as kt,sj as Bt,sI as Qt,sk as Wt,pU as Zt,pV as Kt,sl as Xt,sF as Yt,pT as ei,pW as ti,dk as ii,hf as ri,t4 as si,sO as ni,hi as ai,hj as oi,A as li}from"./index.a33ecea7.js";import{w as S,o as ue,i as Ne,c as ui,l as pi,d as ci,a as mi,m as di,k as hi,L as yi,j as gi,$ as fi,f as Ri,n as wi}from"./fetchRasterInfo.43be0979.js";import{p as vt,c as Qe,v as vi,h as bi}from"./multidimensionalUtils.f078a6da.js";import{s as Si}from"./pixelRangeUtils.e796cb74.js";import{v as bt,_ as St,d as xi,C as Ii,e as Fi,f as Di,u as xt,T as Ti,S as ht,j as Ni}from"./RasterSymbolizer.afc78370.js";import{m as We,g as Pi,w as Ci}from"./dataUtils.bc7551b7.js";const Oi={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},_i=new Set(["u1","u2","u4","u8","s8","u16","s16"]),ji={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Vi=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function It(r){return Vi.has(r.type)}function Ze(r,i){var e;if(!r||!i)return $(r||i);const o=$(r);if(o.rasterFunctionDefinition&&i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),Ft(o.rasterFunctionDefinition.arguments,i)}else((e=i.functionName)==null?void 0:e.toLowerCase())!=="none"&&(Dt(o.functionArguments).Raster=i);return o}function Ft(r,i){for(const o in r)o.toLowerCase()==="raster"&&(r[o].type==="RasterFunctionVariable"?(r[o]=i.rasterFunctionDefinition,r[o].type="RasterFunctionTemplate"):r[o].type==="RasterFunctionTemplate"&&Ft(r[o].arguments,i))}function ee(r){const i=$(Oi[r.functionName+"Function"]),o=r.functionArguments;for(const e in o)e.toLowerCase()==="raster"?(i.arguments[e]=ee(o[e]),i.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(i.arguments[e].value=Gi(o[e]),i.arguments.ColorSchemeType.value=0):i.arguments[e].value=o[e];return i}function Mi(r,i){switch(i=i||{},r.type){case"raster-stretch":return Ji(r,i);case"class-breaks":return Ei(r,i);case"unique-value":return zi(r,i);case"raster-colormap":return qi(r,i);case"vector-field":return Ai(r,i);case"raster-shaded-relief":return $i(r,i);case"flow":throw new Error("Unsupported rendering rule.")}}function Dt(r){const i=r==null?void 0:r.Raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?Dt(i.functionArguments):r}const De={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Ai(r,i){const o=new S;o.functionName="VectorFieldRenderer";const{dataType:e,bandProperties:t}=i,n=e==="vector-uv";let a,u;t&&t.length===2&&(a=t.map(h=>h.BandName.toLowerCase()).indexOf("magnitude"),u=t.map(h=>h.BandName.toLowerCase()).indexOf("direction")),a!==-1&&a!==null||(a=0,u=1);const p=r.rotationType==="arithmetic"?1:2,m=r.flowRepresentation==="flow-from"?0:1,c=r.visualVariables?r.visualVariables.find(h=>h.field==="Magnitude"):new Ot,d={magnitudeBandID:a,directionBandID:u,isUVComponents:n,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:ji[r.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};return o.functionArguments=d,i.convertToRFT?new S({rasterFunctionDefinition:ee(o)}):o}function $i(r,i){const o=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new S;const e=new S;e.functionName="Hillshade";const t=r.hillshadeType==="traditional"?0:1,n=r.scalingType==="none"?1:3,a={HillshadeType:t,SlopeType:n,ZFactor:r.zFactor};return t===0&&(a.Azimuth=r.azimuth,a.Altitude=r.altitude),n===3&&(a.PSPower=r.pixelSizePower,a.PSZFactor=r.pixelSizeFactor),e.functionArguments=a,e.variableName="Raster",r.colorRamp&&(e.functionName="ShadedRelief",o?a.ColorRamp=bt(r.colorRamp):a.Colormap=St(r.colorRamp)),o?new S({rasterFunctionDefinition:ee(e)}):e}function Ji(r,i){var u,p;const o=i.convertToRFT,e=new S;e.functionName="Stretch";const t=De[xi.toJSON(r.stretchType)],n="u8",a={StretchType:t,Statistics:Li((u=r.statistics)!=null?u:[]),DRA:r.dynamicRangeAdjustment,UseGamma:r.useGamma,Gamma:r.gamma,ComputeGamma:r.computeGamma};if(r.outputMin!=null&&(a.Min=r.outputMin),r.outputMax!=null&&(a.Max=r.outputMax),t===De.standardDeviation?(a.NumberOfStandardDeviations=r.numberOfStandardDeviations,e.outputPixelType=n):t===De.percentClip?(a.MinPercent=r.minPercent,a.MaxPercent=r.maxPercent,e.outputPixelType=n):t===De.minMax?e.outputPixelType=n:t===De.sigmoid&&(a.SigmoidStrengthLevel=r.sigmoidStrengthLevel),e.functionArguments=a,e.variableName="Raster",r.colorRamp){const m=r.colorRamp,c=new S;if(o)c.functionArguments={ColorRamp:bt(m)};else{const d=Ii(m);if(d)c.functionArguments={colorRamp:d};else if(!i.convertColorRampToColormap||m.type!=="algorithmic"&&m.type!=="multipart"){const h=r.colorRamp.toJSON();h.type==="algorithmic"?h.algorithm=h.algorithm||"esriCIELabAlgorithm":h.type==="multipart"&&((p=h.colorRamps)==null?void 0:p.length)&&h.colorRamps.forEach(f=>f.algorithm=f.algorithm||"esriCIELabAlgorithm"),c.functionArguments={colorRamp:h}}else c.functionArguments={Colormap:St(m)}}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=e,o?new S({rasterFunctionDefinition:ee(c)}):c}return o?new S({rasterFunctionDefinition:ee(e)}):e}function Ei(r,i){const o=[],e=[],t=[],n=[],{pixelType:u,rasterAttributeTable:p}=i,m=U(p)?null:p.features,c=Tt(p);if(c&&m&&Array.isArray(m)&&r.classBreakInfos){r.classBreakInfos.forEach((y,g)=>{var _;const w=(_=y.symbol)==null?void 0:_.color;let x;(w==null?void 0:w.a)&&y.minValue!=null&&y.maxValue!=null&&m.forEach(J=>{y.minValue!=null&&y.maxValue!=null&&(x=J.attributes[r.field],(x>=y.minValue&&x<y.maxValue||g===r.classBreakInfos.length-1&&x>=y.minValue)&&n.push([J.attributes[c],w.r,w.g,w.b]))})});const R=u?Le(n,u):n,v=new S;return v.functionName="Colormap",v.functionArguments={},v.functionArguments.Colormap=R,v.variableName="Raster",i.convertToRFT?new S({rasterFunctionDefinition:ee(v)}):v}r.classBreakInfos.forEach((R,v)=>{if(R.minValue==null||R.maxValue==null)return;const y=R.symbol&&R.symbol.color;y!=null&&y.a?(v===0?o.push(R.minValue,R.maxValue+1e-6):o.push(R.minValue+1e-6,R.maxValue+1e-6),e.push(v),n.push([v,y.r,y.g,y.b])):t.push(R.minValue,R.maxValue)});const d=u?Le(n,u):n,h=new S;h.functionName="Remap",h.functionArguments={InputRanges:o,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const f=new S;return f.functionName="Colormap",f.functionArguments={Colormap:d,Raster:h},i.convertToRFT?new S({rasterFunctionDefinition:ee(f)}):f}function Le(r,i){const o=_i.has(i)?Si(i):null;return o&&r.push([Math.floor(o[0]-1),0,0,0],[Math.ceil(o[1]+1),0,0,0]),r}function Tt(r){if(U(r))return;const{fields:i}=r,o=i&&i.find(e=>e&&e.name&&e.name.toLowerCase()==="value");return o&&o.name}function zi(r,i){var d,h,f;const o=[],{pixelType:e,rasterAttributeTable:t}=i,n=U(t)?null:t.features,a=Tt(t),u=(h=(d=r.defaultSymbol)==null?void 0:d.color)==null?void 0:h.toRgb(),p=r.uniqueValueInfos;if(p)if(n){if(a){const R=new Map;p.forEach(y=>{var x;const g=y.value,w=(x=y.symbol)==null?void 0:x.color;g!=null&&w&&w.a&&R.set(String(g),w.toRgb())});const v=r.field;n.forEach(({attributes:y})=>{const g=String(y[v]),w=y[a],x=R.get(g);x?o.push([w,...x]):u&&o.push([w,...u])})}}else for(let R=0;R<p.length;R++){const v=p[R],y=(f=v.symbol)==null?void 0:f.color,g=+v.value;if(y!=null&&y.a){if(isNaN(g))return null;o.push([g,y.r,y.g,y.b])}}const m=e&&o.length>0?Le(o,e):o,c=new S;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",i.convertToRFT?new S({rasterFunctionDefinition:ee(c)}):c}function qi(r,i){const o=r.extractColormap();if(!o||o.length===0)return null;const{pixelType:e}=i,t=e?Le(o,e):o,n=new S;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=t,i.convertToRFT?new S({rasterFunctionDefinition:ee(n)}):n}function Li(r){const i=[];return r==null||r.forEach(o=>{const e=o;if(Array.isArray(e))i.push(e);else{if(e.min==null||e.max==null)return;const t=[e.min,e.max,e.avg||0,e.stddev||0];i.push(t)}}),i}function Gi(r){const i=[],o=[];return r.forEach(e=>{i.push(e[0]),o.push(Fi([...e.slice(1),255]))}),{type:"RasterColormap",values:i,colors:o}}var Xe;const Pe=ut()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Ye=ut()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function Ui(r){let i;switch(r?r.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return Ye.fromJSON(i)}let V=Xe=class extends G{constructor(r){super(r),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(r,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(r,i){return Ui(i.mosaicMethod||i.defaultMosaicMethod)}writeMultidimensionalDefinition(r,i,o){r!=null&&(r=r.filter(({variableName:e,dimensionName:t})=>e&&e!=="*"||t)).length&&(i[o]=r.map(e=>e.toJSON()))}readOperation(r,i){const o=i.mosaicOperation,e=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),t=o||(e?Pe.toJSON(e):null);return Pe.fromJSON(t)||"first"}castSortValue(r){return r==null||typeof r=="string"||typeof r=="number"?r:`${r}`}clone(){return new Xe({ascending:this.ascending,itemRenderingRule:$(this.itemRenderingRule),lockRasterIds:$(this.lockRasterIds),method:this.method,multidimensionalDefinition:$(this.multidimensionalDefinition),objectIds:$(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:$(this.viewpoint),where:this.where})}};s([l({type:Boolean,json:{write:!0}})],V.prototype,"ascending",void 0),s([A("ascending",["ascending","sortAscending"])],V.prototype,"readAscending",null),s([l({type:S,json:{write:!0}})],V.prototype,"itemRenderingRule",void 0),s([l({type:[Fe],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],V.prototype,"lockRasterIds",void 0),s([l({type:String,json:{type:Ye.jsonValues,write:{target:"mosaicMethod",writer:Ye.write}}})],V.prototype,"method",void 0),s([A("method",["mosaicMethod","defaultMosaicMethod"])],V.prototype,"readMethod",null),s([l({type:[vt],json:{write:!0}})],V.prototype,"multidimensionalDefinition",void 0),s([D("multidimensionalDefinition")],V.prototype,"writeMultidimensionalDefinition",null),s([l({type:[Fe],json:{name:"fids",write:!0}})],V.prototype,"objectIds",void 0),s([l({json:{type:Pe.jsonValues,read:{reader:Pe.read},write:{target:"mosaicOperation",writer:Pe.write}}})],V.prototype,"operation",void 0),s([A("operation",["mosaicOperation","mosaicOperator"])],V.prototype,"readOperation",null),s([l({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],V.prototype,"sortField",void 0),s([l({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],V.prototype,"sortValue",void 0),s([_t("sortValue")],V.prototype,"castSortValue",null),s([l({type:L,json:{write:!0}})],V.prototype,"viewpoint",void 0),s([l({type:String,json:{write:!0}})],V.prototype,"where",void 0),V=Xe=s([F("esri.layers.support.MosaicRule")],V);const H=V;let N=class extends G{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(r,i,o){this.layer.version<10.3||(i[o]=r)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(r,i,o){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(i[o]=r)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(r,i,o){this.format==="lerc"&&r!=null&&(i[o]=r)}get format(){var r;return((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(r,i,o){this.format==="lerc"&&this.layer.version>=10.5&&(i[o]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("renderingRule"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("definitionExpression"),r.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let i=r.mosaicRule;const o=r.definitionExpression;return i?o&&o!==i.where&&(i=i.clone(),i.where=o):o&&(i=new H({where:o})),i}get renderingRule(){var n,a;const r=this.layer;let i=r.renderingRule;const o=r.pixelFilter,e=!r.format||r.format.includes("jpg")||r.format.includes("png");i=this._addResampleRasterFunction(i);const t=(n=r.multidimensionalSubset)==null?void 0:n.areaOfInterest;return t&&(i=this._addClipFunction(i,t)),e&&!o&&((a=r.renderer)==null?void 0:a.type)!=="vector-field"&&(i=this.combineRendererWithRenderingRule(i)),i}combineRendererWithRenderingRule(r){var t;const i=this.layer,{rasterInfo:o,renderer:e}=i;return r=r||i.renderingRule,!e||!It(e)?r:Ze(Mi(e,{rasterAttributeTable:o.attributeTable,pixelType:o.pixelType,dataType:o.dataType,bandProperties:(t=o.keyProperties)==null?void 0:t.BandProperties,convertColorRampToColormap:i.version<10.6,convertToRFT:!!(r!=null&&r.rasterFunctionDefinition),bandCount:o.bandCount}),r)}_addResampleRasterFunction(r){var t;if(((t=this.layer.renderer)==null?void 0:t.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,o=this.layer.serviceRasterInfo.pixelSize;let e=new S({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:o}});return e=r!=null&&r.rasterFunctionDefinition?new S({rasterFunctionDefinition:ee(e)}):e,Ze(e,r)}_addClipFunction(r,i){const o=new S({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return Ze(o,r)}};s([l()],N.prototype,"layer",void 0),s([l({json:{write:!0}})],N.prototype,"adjustAspectRatio",null),s([D("adjustAspectRatio")],N.prototype,"writeAdjustAspectRatio",null),s([l({json:{write:!0}})],N.prototype,"bandIds",null),s([l({json:{write:!0}})],N.prototype,"compression",void 0),s([l({json:{write:!0}})],N.prototype,"compressionQuality",null),s([D("compressionQuality")],N.prototype,"writeCompressionQuality",null),s([l({json:{write:!0}})],N.prototype,"compressionTolerance",null),s([D("compressionTolerance")],N.prototype,"writeCompressionTolerance",null),s([l({json:{write:!0}})],N.prototype,"format",null),s([l({type:String,json:{read:{reader:ue.read},write:{writer:ue.write}}})],N.prototype,"interpolation",null),s([l({json:{write:!0}})],N.prototype,"noData",null),s([l({type:String,json:{read:{reader:Ne.read},write:{writer:Ne.write}}})],N.prototype,"noDataInterpretation",null),s([l({json:{write:!0}})],N.prototype,"pixelType",void 0),s([l({json:{write:!0}})],N.prototype,"lercVersion",void 0),s([D("lercVersion")],N.prototype,"writeLercVersion",null),s([l({type:Number})],N.prototype,"version",null),s([l({json:{write:!0}})],N.prototype,"mosaicRule",null),s([l({json:{write:!0}})],N.prototype,"renderingRule",null),N=s([F("esri.layers.mixins.ExportImageServiceParameters")],N);let be=class extends G{constructor(r){super(r),this.north=null,this.up=null,this.spatialReference=null}};s([l({type:Number,json:{write:!0}})],be.prototype,"north",void 0),s([l({type:Number,json:{write:!0}})],be.prototype,"up",void 0),s([l({type:fe,json:{write:!0}})],be.prototype,"spatialReference",void 0),be=s([F("esri.rest.support.ImageAngleResult")],be);const Hi=be;let oe=class extends G{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([l({type:Number,json:{read:!0,write:!0}})],oe.prototype,"value",void 0),s([l({type:String,json:{read:!0,write:!0}})],oe.prototype,"displayValue",void 0),s([l({type:Number,json:{read:!0,write:!0}})],oe.prototype,"uncertainty",void 0),oe=s([F("esri.rest.support.ImageMeasureResultValue")],oe);let Ie=class extends oe{constructor(){super(...arguments),this.unit=null}};s([l({type:String,json:{read:pe.read,write:pe.write}})],Ie.prototype,"unit",void 0),Ie=s([F("esri.rest.support.ImageMeasureResultLengthValue")],Ie);let Me=class extends oe{constructor(){super(...arguments),this.unit=null}};s([l({type:String,json:{read:ze.read,write:ze.write}})],Me.prototype,"unit",void 0),Me=s([F("esri.rest.support.ImageMeasureResultAreaValue")],Me);let Ce=class extends oe{constructor(){super(...arguments),this.unit=null}};s([l({type:String,json:{read:qe.read,write:qe.write}})],Ce.prototype,"unit",void 0),Ce=s([F("esri.rest.support.ImageMeasureResultAngleValue")],Ce);let le=class extends G{constructor(){super(...arguments),this.name=null,this.sensorName=null}};s([l({type:String,json:{read:!0,write:!0}})],le.prototype,"name",void 0),s([l({type:String,json:{read:!0,write:!0}})],le.prototype,"sensorName",void 0),le=s([F("esri.rest.support.BaseImageMeasureResult")],le);let Te=class extends le{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([l({type:Me,json:{read:!0,write:!0}})],Te.prototype,"area",void 0),s([l({type:Ie,json:{read:!0,write:!0}})],Te.prototype,"perimeter",void 0),Te=s([F("esri.rest.support.ImageAreaResult")],Te);const ki=Te;let Se=class extends le{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([l({type:Ie,json:{read:!0,write:!0}})],Se.prototype,"distance",void 0),s([l({type:Ce,json:{read:!0,write:!0}})],Se.prototype,"azimuthAngle",void 0),s([l({type:Ce,json:{read:!0,write:!0}})],Se.prototype,"elevationAngle",void 0),Se=s([F("esri.rest.support.ImageDistanceResult")],Se);const Bi=Se;let Ae=class extends le{constructor(){super(...arguments),this.height=null}};s([l({type:Ie,json:{read:!0,write:!0}})],Ae.prototype,"height",void 0),Ae=s([F("esri.rest.support.ImageHeightResult")],Ae);const Qi=Ae;let Z=class extends G{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([l({json:{write:!0}})],Z.prototype,"catalogItemVisibilities",void 0),s([l({type:wt,json:{write:!0}})],Z.prototype,"catalogItems",void 0),s([l({type:L,json:{write:!0}})],Z.prototype,"location",void 0),s([l({json:{write:!0}})],Z.prototype,"name",void 0),s([l({json:{write:!0}})],Z.prototype,"objectId",void 0),s([l({json:{write:!0}})],Z.prototype,"processedValues",void 0),s([l({json:{write:!0}})],Z.prototype,"properties",void 0),s([l({json:{write:!0}})],Z.prototype,"value",void 0),Z=s([F("esri.rest.support.ImageIdentifyResult")],Z);const Wi=Z;let $e=class extends G{constructor(){super(...arguments),this.geometries=null}};s([l({json:{write:!0}})],$e.prototype,"geometries",void 0),$e=s([F("esri.rest.support.ImagePixelLocationResult")],$e);const Zi=$e;let Je=class extends le{constructor(){super(...arguments),this.point=null}};s([l({type:L,json:{name:"point.value",read:!0,write:!0}})],Je.prototype,"point",void 0),Je=s([F("esri.rest.support.ImagePointResult")],Je);const Ki=Je;let ie=class extends G{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([l({json:{write:!0}})],ie.prototype,"attributes",void 0),s([l({type:L,json:{write:!0}})],ie.prototype,"location",void 0),s([l({json:{write:!0}})],ie.prototype,"locationId",void 0),s([l({json:{write:!0}})],ie.prototype,"rasterId",void 0),s([l({json:{write:!0}})],ie.prototype,"resolution",void 0),s([l({json:{write:!0}})],ie.prototype,"pixelValue",void 0),ie=s([F("esri.rest.support.ImageSample")],ie);const Xi=ie;let Ee=class extends G{constructor(){super(...arguments),this.samples=null}};s([l({type:[Xi],json:{write:!0}})],Ee.prototype,"samples",void 0),Ee=s([F("esri.rest.support.ImageSampleResult")],Ee);const Yi=Ee;function Nt(r){const i=r==null?void 0:r.time;if(i&&(i.start!=null||i.end!=null)){const o=[];i.start!=null&&o.push(i.start),i.end==null||o.includes(i.end)||o.push(i.end),r.time=o.join(",")}}async function Pt(r,i,o){const e=ne(r),t=i.geometry?[i.geometry]:[],n=await Ge(t),a=i.toJSON();Nt(a);const u=n&&n[0];b(u)&&(a.geometry=u.toJSON());const p=Re({...e.query,f:"json",...a});return we(p,o)}async function er(r,i,o){var p;const e=i.toJSON();b(e.angleName)&&(e.angleName=e.angleName.join(",")),b(i.point)&&((p=i.point.spatialReference)==null?void 0:p.imageCoordinateSystem)&&(e.point.spatialReference=ke(i.point.spatialReference)),b(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(e.spatialReference=Ct(i.spatialReference));const t=ne(r),n=Re({...t.query,f:"json",...e}),a=we(n,o),{data:u}=await C(`${t.path}/computeAngles`,a);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new fe({wkid:0,imageCoordinateSystem:u.spatialReference}):fe.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new Hi(u)}async function tr(r,i,o){var m;const e=i.toJSON(),{geometries:t}=i;if(t)for(let c=0;c<t.length;c++)(m=t[c].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=ke(t[c].spatialReference));const n=ne(r),a=Re({...n.query,f:"json",...e}),u=we(a,o),{data:p}=await C(`${n.path}/computePixelLocation`,u);return Zi.fromJSON(p)}async function ir(r,i,o){const e=await Pt(r,i,o),t=ne(r),{data:n}=await C(`${t.path}/computeStatisticsHistograms`,e),{statistics:a}=n;return a!=null&&a.length&&a.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:a,histograms:n.histograms}}async function rr(r,i,o){const e=await Pt(r,i,o),t=ne(r),{data:n}=await C(`${t.path}/computeHistograms`,e);return{histograms:n.histograms}}async function sr(r,i,o){var c,d,h;const e=i.toJSON();Nt(e),(c=e.outFields)!=null&&c.length&&(e.outFields=e.outFields.join(","));const t=(d=await Ge(i.geometry))==null?void 0:d[0];b(t)&&(e.geometry=t.toJSON());const n=ne(r),a=Re({...n.query,f:"json",...e}),u=we(a,o),{data:p}=await C(`${n.path}/getSamples`,u),m=(h=p==null?void 0:p.samples)==null?void 0:h.map(f=>{const R=f.value==="NaN"||f.value===""?null:f.value.split(" ").map(v=>Number(v));return{...f,pixelValue:R}});return Yi.fromJSON({samples:m})}async function yt(r,i,o){const e=ne(r),t=i.geometry?[i.geometry]:[];return Ge(t).then(n=>{const a=i.toJSON(),u=n&&n[0];b(u)&&(a.geometry=JSON.stringify(u.toJSON()));const p=Re({...e.query,f:"json",...a}),m=we(p,o);return C(e.path+"/identify",m)}).then(n=>Wi.fromJSON(n.data))}async function nr(r,i,o){const e=await He(r,i,[i.fromGeometry,i.toGeometry],o);return Qi.fromJSON(e)}async function ar(r,i,o){const e=await He(r,i,[i.geometry],o);return ki.fromJSON(e)}async function or(r,i,o){const e=await He(r,i,[i.geometry],o);return Ki.fromJSON(e)}async function lr(r,i,o){const e=await He(r,i,[i.fromGeometry,i.toGeometry],o);return Bi.fromJSON(e)}async function He(r,i,o,e){const t=ne(r),n=await Ge(o),a=i.toJSON();b(n[0])&&(a.fromGeometry=JSON.stringify(gt(n[0]))),b(n[1])&&(a.toGeometry=JSON.stringify(gt(n[1])));const u=Re({...t.query,f:"json",...a}),p=we(u,e),{data:m}=await C(t.path+"/measure",p);return m}function gt(r){var o;const i=r.toJSON();return(o=r.spatialReference)!=null&&o.imageCoordinateSystem&&(i.spatialReference=ke(r.spatialReference)),i}function ke(r){const{imageCoordinateSystem:i}=r;if(i){const{id:o,referenceServiceName:e}=i;return o!=null?e?{icsid:o,icsns:e}:{icsid:o}:{ics:i}}return r.toJSON()}function Ct(r,i){const o=ke(r),{icsid:e,icsns:t,wkid:n}=o;return e!=null?t==null||(i==null?void 0:i.toLowerCase().includes("/"+t.toLowerCase()+"/"))?`0:${e}`:JSON.stringify(o):n?n.toString():JSON.stringify(o)}async function ur(r,i,o){var _,J;const e=ne(r),t=Re({...e==null?void 0:e.query,f:"json"}),n=we(t,o),a=`${e==null?void 0:e.path}/${i}/info`,u=C(`${a}`,n),p=C(`${a}/keyProperties`,n),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;(_=c.statistics)!=null&&_.length&&(h=c.statistics.map(T=>({min:T[0],max:T[1],avg:T[2],stddev:T[3]})));const f=Ve.fromJSON(c.extent),R=Math.ceil(f.width/c.pixelSizeX-.1),v=Math.ceil(f.height/c.pixelSizeY-.1),y=f.spatialReference,g=new L({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:y}),w=(J=c.histograms)!=null&&J.length?c.histograms:null,x=new Di({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new xt({width:R,height:v,bandCount:c.bandCount,extent:f,spatialReference:y,pixelSize:g,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:w,keyProperties:d,storageInfo:x})}var et;let ye=et=class extends G{constructor(r){super(r),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new et($({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([l({type:[String],json:{name:"angleName",write:!0}})],ye.prototype,"angleNames",void 0),s([l({type:L,json:{write:!0}})],ye.prototype,"point",void 0),s([l({type:fe,json:{write:!0}})],ye.prototype,"spatialReference",void 0),s([l({type:Fe,json:{write:!0}})],ye.prototype,"rasterId",void 0),ye=et=s([F("esri.rest.support.ImageAngleParameters")],ye);const pr=ye,W=new jt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Q=class extends G{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0}};s([l()],Q.prototype,"type",void 0),s([l({type:W.apiValues,json:{read:W.read,write:W.write}})],Q.prototype,"measureOperation",void 0),s([l({type:H,json:{write:!0}})],Q.prototype,"mosaicRule",void 0),s([l({type:S,json:{write:!0}})],Q.prototype,"renderingRule",void 0),s([l({type:L,json:{write:!0}})],Q.prototype,"pixelSize",void 0),s([l({json:{write:!0}})],Q.prototype,"raster",void 0),Q=s([F("esri.rest.support.BaseImageMeasureParameters")],Q);var tt;let re=tt=class extends Q{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=r.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new tt($({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([l({types:Ue,json:{name:"fromGeometry",read:!0,write:!0}})],re.prototype,"geometry",void 0),s([D("geometry")],re.prototype,"writeGeometry",null),s([l({type:W.apiValues,json:{write:W.write}})],re.prototype,"measureOperation",null),s([l({json:{read:!0}})],re.prototype,"is3D",void 0),s([l({type:String,json:{read:pe.read,write:pe.write}})],re.prototype,"linearUnit",void 0),s([l({type:String,json:{read:ze.read,write:ze.write}})],re.prototype,"areaUnit",void 0),re=tt=s([F("esri.rest.support.ImageAreaParameters")],re);const cr=re;var it;let X=it=class extends Q{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=r.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new it($({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([l({type:L,json:{read:!0,write:!0}})],X.prototype,"fromGeometry",void 0),s([D("fromGeometry")],X.prototype,"writeFromGeometry",null),s([l({type:L,json:{read:!0,write:!0}})],X.prototype,"toGeometry",void 0),s([l({type:W.apiValues,json:{write:W.write}})],X.prototype,"measureOperation",null),s([l({json:{read:!0}})],X.prototype,"is3D",void 0),s([l({type:String,json:{read:pe.read,write:pe.write}})],X.prototype,"linearUnit",void 0),s([l({type:String,json:{read:qe.read,write:qe.write}})],X.prototype,"angularUnit",void 0),X=it=s([F("esri.rest.support.ImageDistanceParameters")],X);const mr=X;var rt;let se=rt=class extends Q{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=r.toJSON())}get measureOperation(){return this.operationType}clone(){return new rt($({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([l({type:L,json:{read:!0}})],se.prototype,"fromGeometry",void 0),s([D("fromGeometry")],se.prototype,"writeFromGeometry",null),s([l({type:L,json:{read:!0,write:!0}})],se.prototype,"toGeometry",void 0),s([l({type:W.apiValues,json:{write:W.write}})],se.prototype,"measureOperation",null),s([l({json:{read:!0}})],se.prototype,"operationType",void 0),s([l({type:String,json:{read:pe.read,write:pe.write}})],se.prototype,"linearUnit",void 0),se=rt=s([F("esri.rest.support.ImageHeightParameters")],se);const dr=se;var st;let Y=st=class extends G{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=r.toJSON())}clone(){return new st($({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};s([l({types:Ue,json:{read:pt}})],Y.prototype,"geometry",void 0),s([D("geometry")],Y.prototype,"writeGeometry",null),s([l({type:H,json:{write:!0}})],Y.prototype,"mosaicRule",void 0),s([l({type:S,json:{write:!0}})],Y.prototype,"renderingRule",void 0),s([l({type:L,json:{write:!0}})],Y.prototype,"pixelSize",void 0),s([l({json:{write:!0}})],Y.prototype,"raster",void 0),s([l({type:ct,json:{read:{source:"time"},write:{target:"time"}}})],Y.prototype,"timeExtent",void 0),Y=st=s([F("esri.rest.support.ImageHistogramParameters")],Y);const ft=Y;var nt;let P=nt=class extends G{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=JSON.stringify(r.toJSON()))}set mosaicRule(r){let i=r;i&&i.mosaicMethod&&(i=H.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(r,i,o){r!=null&&(i[o]=JSON.stringify(r.toJSON()))}set renderingRule(r){let i=r;i&&i.rasterFunction&&(i=S.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("renderingRule",i)}writeRenderingRule(r,i,o){r!=null&&(i[o]=JSON.stringify(r.toJSON())),r.rasterFunctionDefinition&&(i[o]=JSON.stringify(r.rasterFunctionDefinition))}writeRenderingRules(r,i,o){r!=null&&(i[o]=JSON.stringify(r.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(r,i,o){r!=null&&(i[o]=JSON.stringify(r))}writeTimeExtent(r,i,o){if(r!=null){const e=b(r.start)?r.start.getTime():null,t=b(r.end)?r.end.getTime():null;i[o]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new nt($({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([l({json:{write:!0}})],P.prototype,"geometry",void 0),s([D("geometry")],P.prototype,"writeGeometry",null),s([l({type:H,json:{write:!0}})],P.prototype,"mosaicRule",null),s([D("mosaicRule")],P.prototype,"writeMosaicRule",null),s([l({type:S,json:{write:!0}})],P.prototype,"renderingRule",null),s([D("renderingRule")],P.prototype,"writeRenderingRule",null),s([l({type:[S],json:{write:!0}})],P.prototype,"renderingRules",void 0),s([D("renderingRules")],P.prototype,"writeRenderingRules",null),s([l({type:L,json:{write:!0}})],P.prototype,"pixelSize",void 0),s([D("pixelSize")],P.prototype,"writePixelSize",null),s([l({type:Boolean,json:{write:!0}})],P.prototype,"returnGeometry",void 0),s([l({type:Boolean,json:{write:!0}})],P.prototype,"returnCatalogItems",void 0),s([l({type:Boolean,json:{write:!0}})],P.prototype,"returnPixelValues",void 0),s([l({type:Number,json:{write:!0}})],P.prototype,"maxItemCount",void 0),s([l({type:ct,json:{write:{target:"time"}}})],P.prototype,"timeExtent",void 0),s([D("timeExtent")],P.prototype,"writeTimeExtent",null),s([l({json:{write:!0}})],P.prototype,"raster",void 0),s([l({json:{write:!0}})],P.prototype,"viewId",void 0),s([l({type:Boolean,json:{write:!0}})],P.prototype,"processAsMultidimensional",void 0),P=nt=s([F("esri.rest.support.ImageIdentifyParameters")],P);const Rt=P;var at;let xe=at=class extends G{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,i,o){i.geometries={geometryType:"esriGeometryPoint",geometries:r.map(e=>e.toJSON())}}clone(){var r,i;return new at({geometries:(i=(r=this.geometries)==null?void 0:r.map(o=>o.clone()))!=null?i:[],rasterId:this.rasterId})}};s([l({type:[L],json:{write:!0}})],xe.prototype,"geometries",void 0),s([D("geometries")],xe.prototype,"writeGeometry",null),s([l({type:Fe,json:{write:!0}})],xe.prototype,"rasterId",void 0),xe=at=s([F("esri.rest.support.ImagePixelLocationParameters")],xe);const hr=xe;var ot;let ge=ot=class extends Q{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=r.toJSON())}get measureOperation(){const{is3D:r,geometry:i}=this;return i.type==="point"?r?"point-3D":"point":r?"centroid-3D":"centroid"}clone(){return new ot($({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([l({types:Ue,json:{name:"fromGeometry",read:pt}})],ge.prototype,"geometry",void 0),s([D("geometry")],ge.prototype,"writeGeometry",null),s([l({type:W.apiValues,json:{read:W.read,write:W.write}})],ge.prototype,"measureOperation",null),s([l({json:{read:!0}})],ge.prototype,"is3D",void 0),ge=ot=s([F("esri.rest.support.ImagePointParameters")],ge);const yr=ge;var lt;let z=lt=class extends G{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(r,i,o){r!=null&&(i.geometryType=ve(r),i[o]=r.toJSON())}set locations(r){if(r!=null&&r.length){const i=new Vt({spatialReference:r[0].spatialReference});i.points=r.map(o=>[o.x,o.y]),this._set("locations",r),this.geometry=i}}clone(){return new lt($({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([l({types:Ue,json:{read:pt}})],z.prototype,"geometry",void 0),s([D("geometry")],z.prototype,"writeGeometry",null),s([l()],z.prototype,"locations",null),s([l({type:String,json:{type:ue.jsonValues,read:ue.read,write:ue.write}})],z.prototype,"interpolation",void 0),s([l({type:H,json:{write:!0}})],z.prototype,"mosaicRule",void 0),s([l({type:[String],json:{write:!0}})],z.prototype,"outFields",void 0),s([l({type:L,json:{write:!0}})],z.prototype,"pixelSize",void 0),s([l({type:String,json:{write:!0}})],z.prototype,"raster",void 0),s([l({type:Boolean,json:{write:!0}})],z.prototype,"returnFirstValueOnly",void 0),s([l({type:Number,json:{write:!0}})],z.prototype,"sampleDistance",void 0),s([l({type:Number,json:{write:!0}})],z.prototype,"sampleCount",void 0),s([l({type:Number,json:{write:!0}})],z.prototype,"sliceId",void 0),s([l({type:ct,json:{read:{source:"time"},write:{target:"time"}}})],z.prototype,"timeExtent",void 0),z=lt=s([F("esri.rest.support.ImageSampleParameters")],z);const gr=z,Ke=ut()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),fr=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Rr=Ht(kt,{min:0,max:255});function wr(r){var o;if(!r)return null;const i=(o=JSON.stringify(r).match(/"rasterFunction":"(.*?")/gi))==null?void 0:o.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}const vr=r=>{let i=class extends r{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new N({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,n){e!=null&&this.format!=="lerc"&&(t[n]=e)}writeCompressionTolerance(e,t,n){this.format==="lerc"&&e!=null&&(t[n]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?H.fromJSON(t):null}get fieldsIndex(){return this.fields?new $t(this.fields):null}set format(e){e&&fr.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=H.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const n=e||t.mosaicRule;return n?H.fromJSON(n):this._isMosaicRuleSupported(t)?H.fromJSON(t):null}writeMosaicRule(e,t,n){let a=this.mosaicRule;const u=this.definitionExpression;a?u&&u!==a.where&&(a=a.clone(),a.where=u):u&&(a=new H({where:u})),this._isValidCustomizedMosaicRule(a)&&(t[n]=a.toJSON())}writeNoData(e,t,n){e!=null&&typeof e=="number"&&(t[n]=Rr(e))}readObjectIdField(e,t){if(!e){const n=t.fields.filter(a=>a.type==="esriFieldTypeOID"||a.type==="oid");e=n&&n[0]&&n[0].name}return e}get parsedUrl(){return Jt(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,n){var p,m;const a=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=mi(a,n);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!a.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),It(u)||mt.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,n){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m,c;const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new he({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new he({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new he({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?$(this.fields):[];u.push(n),((m=this.capabilities)==null?void 0:m.operations.supportsQuery)&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(d=>d.name.toLowerCase()==="none")&&u.push(a),b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(d=>d.name.toLowerCase()!=="none").forEach(d=>{u.push(new he({name:"Raster.ServicePixelValue."+d.name,alias:d.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new he({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new he({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=(c=this.rasterInfo)!=null?c:{};if(b(p)){const d=p.fields.filter(h=>h.type!=="esriFieldTypeOID"&&h.name.toLowerCase()!=="value").map(h=>{const f=$(h);return f.name=e+h.name,f});u=u.concat(d)}return u}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=S.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const n=t.rasterFunctionInfos;return t.renderingRule||n&&n.length&&n[0].name!=="None"?this._isRFTJson(t.renderingRule)?S.fromJSON({rasterFunctionDefinition:t.renderingRule}):S.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,n){const a=e.toJSON();a.rasterFunctionDefinition?t[n]=a.rasterFunctionDefinition:t[n]=a}readSpatialReference(e,t){const n=e||t.extent.spatialReference;return n?fe.fromJSON(n):null}readPixelType(e){return Ke.fromJSON(e)||e}writePixelType(e,t,n){(U(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[n]=Ke.toJSON(e))}readVersion(e,t){let n=t.currentVersion;return n||(n=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let n=e;const{renderer:a,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&a&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(a.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,t),this._cachedRendererJson=a.toJSON());const h=await d.symbolize({bandIds:m,...e},t);n={extent:e.extent,pixelBlock:h}}else n={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return n}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new j("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=k(pr,e).clone(),er(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new j("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=k(hr,e).clone(),tr(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new j("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=k(ft,e).clone(),this._applyMosaicAndRenderingRules(e),rr(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new j("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=k(ft,e).clone(),this._applyMosaicAndRenderingRules(e),ir(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?n.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?n.mensuration.supportsHeightFromBaseAndTopShadow:n.mensuration.supportsHeightFromTopAndTopShadow))throw new j("imagery-layer:measure-height","this operation is not supported on the input image service");return e=k(dr,e).clone(),this._applyMosaicAndRenderingRules(e),nr(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsAreaAndPerimeter&&(!e.is3D||n.mensuration.supports3D)))throw new j("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=k(cr,e).clone(),this._applyMosaicAndRenderingRules(e),ar(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsDistanceAndAngle&&(!e.is3D||n.mensuration.supports3D)))throw new j("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=k(mr,e).clone(),this._applyMosaicAndRenderingRules(e),lr(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsPointOrCentroid&&(!e.is3D||n.mensuration.supports3D)))throw new j("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=k(yr,e).clone(),this._applyMosaicAndRenderingRules(e),or(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return b(t)?t.get(e):void 0}getFieldDomain(e,t){const n=this.getField(e);return n?n.domain:null}async fetchImage(e,t,n,a={}){var d;if(e==null||t==null||n==null)throw new j("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const h=await this.generateRasterInfo(this.renderingRule,{signal:a.signal});h&&(this.rasterInfo=h)}const u=this.getExportImageServiceParameters(e,t,n,a.timeExtent);if(u==null){if(a.requestAsImageElement&&this._canRequestImageElement(this.format)){const w=document.createElement("canvas");return w.width=t,w.height=n,a.returnImageBitmap?{imageBitmap:await dt(w,`${o(this.parsedUrl)}/exportImage`)}:{imageOrCanvasElement:w}}const{bandIds:h,rasterInfo:f}=this,R=(d=(h==null?void 0:h.length)||f.bandCount)!=null?d:0,v=t*n,y=f.pixelType,g=[];for(let w=0;w<R;w++)g.push(We.createEmptyBand(y,v));return{pixelData:{pixelBlock:new We({width:t,height:n,pixels:g,mask:new Uint8Array(v),pixelType:y}),extent:e}}}const p=!!a.requestAsImageElement&&!this.pixelFilter,m=p&&!!a.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:a.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return C(o(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new j("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):C(o(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>wt.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const n={...t,query:this._getQueryParams()};return ur(o(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){var me,de,te;const{data:n}=await C(o(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),a=n&&n.ics;if(!a)return;let u=null;try{u=(await C(o(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!u||!u.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?C(o(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(I=>I.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},d=C(o(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...t}).then(I=>I.data).catch(()=>({})),h=5,f=(u.xmin+u.xmax)/2,R=(u.ymax-u.ymin)/(h+1),v=u.ymin+R,y=[];for(let I=0;I<h;I++)y.push({x:f,y:v+R*I});const g={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:y}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},w=C(o(this.parsedUrl)+"/project",{query:this._getQueryParams(g),...t}).then(I=>I.data).catch(()=>({})),x=await Promise.all([p,d,w]);let _=x[0].ipxf;if(_==null){const I=(me=a.geodataXform)==null?void 0:me.xf_0;((de=I==null?void 0:I.name)==null?void 0:de.toLowerCase())==="topup"&&((te=I==null?void 0:I.coefficients)==null?void 0:te.length)===6&&(_={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:I.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const J=Ve.fromJSON(x[1]&&x[1].geometries&&x[1].geometries[0]);J&&(J.spatialReference=new fe({wkid:0,imageCoordinateSystem:a}));const T=x[2].geometries?x[2].geometries.filter(I=>I!=null&&I.x!=null&&I.y!=null&&I.x!=="NaN"&&I.y!=="NaN"):[],K=T.length;if(K<3)return{ics:a,icsToPixelTransform:_,icsExtent:J,northDirection:null};let ce=0,M=0,O=0,q=0;for(let I=0;I<K;I++)ce+=T[I].x,M+=T[I].y,O+=T[I].x*T[I].x,q+=T[I].x*T[I].y;const E=(K*q-ce*M)/(K*O-ce*ce);let ae=0;const Oe=T[h-1].x>T[0].x,_e=T[h-1].y>T[0].y;return E===1/0?ae=_e?90:270:E===0?ae=Oe?0:180:E>0?ae=Oe?180*Math.atan(E)/Math.PI:180*Math.atan(E)/Math.PI+180:E<0&&(ae=_e?180+180*Math.atan(E)/Math.PI:360+180*Math.atan(E)/Math.PI),{ics:a,icsToPixelTransform:_,icsExtent:J,northDirection:ae}}async generateRasterInfo(e,t){var u;if(e=k(S,e),this.serviceRasterInfo&&(!e||((u=e.functionName)==null?void 0:u.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const n=wr(e);if(!n)return null;if(this._functionRasterInfos[n])return this._functionRasterInfos[n];const a=this._generateRasterInfo(e,t);this._functionRasterInfos[n]=a;try{return await a}catch{return this._functionRasterInfos[n]=null,null}}getExportImageServiceParameters(e,t,n,a){var y;e=e.clone().shiftCentralMeridian();const u=Ct(e.spatialReference,o(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=(y=this.renderingRule)==null?void 0:y.rasterFunctionDefinition,f=!this.renderer||this.renderer.type==="raster-stretch";if((m==null?void 0:m.length)&&this._hasRenderingRule(this.renderingRule)&&!h&&f){const g={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")g.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=g;else if(d.rasterFunction==="Colormap"){const w=d.rasterFunctionArguments.Raster;(w==null?void 0:w.rasterFunction)==="Stretch"?(g.rasterFunctionArguments.Raster=w.rasterFunctionArguments.Raster,w.rasterFunctionArguments.Raster=g):(g.rasterFunctionArguments.Raster=w,d.rasterFunctionArguments.Raster=g)}else g.rasterFunctionArguments.Raster=d,d=g;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");c instanceof Array&&c.length>0&&(p.noData=c.join(","));const R=this._processMultidimensionalIntersection(null,a,this.exportImageServiceParameters.mosaicRule);if(R.isOutSide)return null;p.mosaicRule=b(R.mosaicRule)?JSON.stringify(R.mosaicRule):null,a=R.timeExtent,p.renderingRule=this._getRenderingRuleString(S.fromJSON(d));const v={};if(b(a)){const{start:g,end:w}=a.toJSON();g&&w&&g===w?v.time=""+g:g==null&&w==null||(v.time=`${g!=null?g:"null"},${w!=null?w:"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+n,...p,...v}}async getSamples(e,t){var a;if(!((a=await this._fetchCapabilities(t==null?void 0:t.signal))!=null&&a.operations.supportsGetSamples))throw new j("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=k(gr,e).clone();const{raster:n}=this;return n&&e.raster==null&&(e.raster=n),sr(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new j("imagery-layer:identify","identify operation is not supported on the input image service");e=k(Rt,e).clone();const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new j("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=je(n.timeExtent),e.mosaicRule=je(n.mosaicRule);const{raster:a,renderingRule:u}=this;return u&&e.renderingRule==null&&(e.renderingRule=u),a&&e.raster==null&&(e.raster=a),yt(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Be;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Et(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),zt(this.url,e,t)}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),qt(this.url,e,t)}async queryVisibleRasters(e,t){var _,J,T,K,ce;if(!e)throw new j("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:a,returnTopmostRaster:u,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",f=this._rasterFunctionNamesIndex;if(b(e.outFields)&&(m=e.outFields.some(M=>!M.toLowerCase().includes(h)),this.version>=10.4)){const M=e.outFields.filter(q=>q.toLowerCase().includes(h)&&q.length>h.length).map(q=>{const E=q.slice(h.length+1);return[this._updateRenderingRulesFunctionName(E,f),E]});c=M.map(q=>new S({functionName:q[0]})),d=M.map(q=>q[1]);const{renderingRule:O}=this;c.length===0?O!=null&&O.functionName?(c.push(O),d.push(O.functionName)):c=null:(O==null?void 0:O.functionName)&&!c.some(q=>q.functionName===O.functionName)&&(c.push(O),d.push(O.functionName))}const R=U(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:v}=this;let y=e.timeExtent||this.timeExtent;if(v){const{isOutside:M,intersection:O}=Qe(v,{geometry:je(e.geometry),timeExtent:je(e.timeExtent),multidimensionalDefinition:(_=this.exportImageServiceParameters.mosaicRule)==null?void 0:_.multidimensionalDefinition});if(M)throw new j("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");O&&b(O.timeExtent)&&(y=O.timeExtent)}const g=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y),w=this._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:g,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:c,pixelSize:n,returnCatalogItems:m,returnGeometry:R,raster:this.raster,maxItemCount:u?1:null});delete w.f;const x=new Rt(w);try{await this.generateRasterInfo(this.renderingRule);const M=await yt(this.url,x,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),O=e.outFields,q=M.value!=null&&M.value.toLowerCase().includes("nodata");if(!(m&&!R&&((J=M==null?void 0:M.catalogItems)==null?void 0:J.features.length)&&(p||!q)))return this._processVisibleRastersResponse(M,{returnDomainValues:a,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:O});const E=this.objectIdField||"ObjectId",ae=(K=(T=M.catalogItems)==null?void 0:T.features)!=null?K:[],Oe=ae.map(de=>{var te;return(te=de.attributes)==null?void 0:te[E]}),_e=new Be({objectIds:Oe,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[E]}),me=await this.queryRasters(_e);return(ce=me==null?void 0:me.features)!=null&&ce.length&&me.features.forEach(de=>{ae.forEach(te=>{te.attributes[E]===de.attributes[E]&&(te.geometry=new Lt(de.geometry),b(e.outSpatialReference)&&(te.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(M,{returnDomainValues:a,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:O})}catch{throw new j("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const n=C(o(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),a=C(o(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([n,a]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,t):Pi(e.meshType,e.simulationSettings,e.flowData,b(t.signal)?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e!=null?e:this.serviceRasterInfo.multidimensionalInfo;return vi(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,n=b(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):di(o(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),p)),a=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([n,a,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),mt.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([Gt(()=>this.renderingRule,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;b(m.multidimensionalInfo)&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var v;const n=this.timeInfo,{multidimensionalInfo:a}=this.serviceRasterInfo;if(U(e)||U(a)||U(t)||U(n==null?void 0:n.startField))return e;const{startField:u}=n,p=a.variables.some(y=>y.dimensions.some(g=>g.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(v=e.multidimensionalDefinition)==null?void 0:v.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=b(t.start)?t.start.getTime():null,d=b(t.end)?t.end.getTime():null,h=c==null||d==null||c===d,f=h?[c||d]:[[c,d]],R=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(R?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=h,y.values=f))});else if(!R){const y=e.multidimensionalDefinition.filter(g=>g.variableName!=null&&g.dimensionName==null);y.length?y.forEach(g=>{g.dimensionName=p,g.isSlice=h,g.values=f}):e.multidimensionalDefinition.push(new vt({variableName:"",dimensionName:p,isSlice:h,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return U(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new j("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=b(e)?k(Be,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new wi;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:n}=this;return e.type==="unique-value"&&this._hasRenderingRule(n)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&hi(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var n;let t=this.sourceJSON;if(!t){const{data:a,ssl:u}=await C(o(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=a,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((n=t.capabilities)==null?void 0:n.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly"))>-1)throw new j("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var a;if(!e)return!1;const t=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((a=e.fields)==null?void 0:a.length)>1);return t||n}_isVectorFieldResampleFunction(e){if(U(e))return!1;const{functionName:t,functionArguments:n}=e,a=(t==null?void 0:t.toLowerCase())==="resample",u=(n==null?void 0:n.ResampleType)||(n==null?void 0:n.resampleType);return a&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var a,u;const t=this._isPicture(),{rasterInfo:n}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&n.bandCount>=3){const m=yi(n);!m||n.bandCount===3&&m[0]===0&&m[1]===1&&m[2]===2||(this.bandIds=m)}e||(e=gi(n,{bandIds:this.bandIds,variableName:this.renderingRule?null:(u=(a=this.mosaicRule)==null?void 0:a.multidimensionalDefinition)==null?void 0:u[0].variableName}));const p=fi(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=n):this.symbolizer=new Ti({rendererJSON:p,rasterInfo:n}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:b(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&b(e.renderingRule)&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:n}=this;return{raster:t,viewId:n,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,n){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):ht(e,t,n)}async _getRasterFunctionInfos(e){var n;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(n=(await C(o(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:n.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,returnImageBitmap:a,signal:u}=e;if(n&&this._canRequestImageElement(t.format)){const v=`${o(this.parsedUrl)}/exportImage`,{data:y}=await C(v,{responseType:a?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await dt(y,v),params:t}:{imageOrCanvasElement:y,params:t}}const p=this._initJobHandler(),m=C(o(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=t.format||"jpgpng";let h=d;if(h!=="bsq"&&h!=="bip"&&(h=Ni(c)),!h)throw new j("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const f={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(h==="png"||h==="jpg")?ht(c,{useCanvas:!0,...t},f):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},f)),extent:t.extent},params:t}}_generateRasterInfo(e,t){const n={...t,query:this._getQueryParams()};return Ri(o(this.parsedUrl),e,n)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var n;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=bi(e,{multidimensionalSubset:this.multidimensionalSubset});if(b(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new H;const a=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&((n=this.renderingRule.functionName)==null?void 0:n.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(a!=null&&a.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const n=e.value,{templateRRFunctionNames:a,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=e.catalogItems&&e.catalogItems.features,h=e.properties&&e.properties.Values&&e.properties.Values.map(x=>x.replace(/ /gi,", "))||[];const f=this.objectIdField||"ObjectId",R=typeof n=="string"&&n.toLowerCase().includes("nodata"),v=[];if(n&&!d&&!R){const x={};x[f]=0,h=[n],d=[new Ut(this.fullExtent,null,x)]}if(!d)return[];let y,g,w;this._updateResponseFieldNames(d,m),R&&!u&&(d=[]);for(let x=0;x<d.length;x++){if(y=d[x],n!=null){if(g=h[x],w=this.renderingRule&&c&&c.length>0&&a&&a.length>0&&a.includes(this.renderingRule.functionName)?c[a.indexOf(this.renderingRule.functionName)]:n,g.toLowerCase()==="nodata"&&!u)continue;const _="Raster.ItemPixelValue",J="Raster.ServicePixelValue";y.attributes[_]=g,y.attributes[J]=w,this._updateFeatureWithMagDirValues(y,g);const T=this.fields&&this.fields.length>0;let K=this.renderingRule&&b(this.serviceRasterInfo.attributeTable)?T?g:n:w;this.renderingRule||(K=T?g:n),this._updateFeatureWithRasterAttributeTableValues(y,K)}if(y.sourceLayer=y.layer=this,p&&this._updateFeatureWithDomainValues(y),a&&c&&a.length===c.length)for(let _=0;_<a.length;_++){const J="Raster.ServicePixelValue."+a[_];y.attributes[J]=c[_]}v.push(d[x])}return v}_processMultidimensionalIntersection(e,t,n){const{multidimensionalSubset:a}=this;if(!a)return{isOutSide:!1,timeExtent:t,mosaicRule:n=this._combineMosaicRuleWithTimeExtent(n,t)};if(a){const{isOutside:u,intersection:p}=Qe(a,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p&&b(p.timeExtent)&&(t=p.timeExtent)}if(n=this._combineMosaicRuleWithTimeExtent(n,t),b(n)&&n.multidimensionalDefinition){const{isOutside:u}=Qe(a,{multidimensionalDefinition:n.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:n}}_updateFeatureWithRasterAttributeTableValues(e,t){const n=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(U(n))return;const{features:a,fields:u}=n,p=u.map(d=>d.name).filter(d=>d.toLowerCase()==="value"),m=p&&p[0];if(!m)return;const c=a.filter(d=>d.attributes[m]===(t!=null?parseInt(t,10):null));c&&c[0]&&u.forEach(d=>{const h=this._rasterAttributeTableFieldPrefix+d.name;e.attributes[h]=c[0].attributes[d.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const n=t.split(/,\s*/).map(c=>parseFloat(c)),a=n.map(c=>[c]),u=n.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new We({height:1,width:1,pixelType:"f32",pixels:a,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Ve(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Ci([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(n=>n.domain&&n.domain.type==="coded-value");t!=null&&t.forEach(n=>{const a=e.attributes[n.name];if(a!=null){const u=n.domain.codedValues.find(p=>p.code===a);u&&(e.attributes[n.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const n=this.fieldsIndex;U(n)||e.forEach(a=>{var u;if(a&&a.attributes)for(const p of t){const m=(u=n.get(p))==null?void 0:u.name;m&&m!==p&&(a.attributes[p]=a.attributes[m],delete a.attributes[m])}})}_getRenderingRuleString(e){var t;if(e){let n=e.toJSON();return n=(t=n.rasterFunctionDefinition)!=null?t:n,(n.thumbnail||n.thumbnailEx)&&(n.thumbnail=n.thumbnailEx=null),JSON.stringify(n)}return null}_hasRenderingRule(e){return e!=null&&e.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replace(/ /gi,"_");return t.has(n)?t.get(n):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:n,renderingRule:a}=this;a&&e.renderingRule==null&&(e.renderingRule=a),n&&e.mosaicRule==null&&(e.mosaicRule=n),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(v=>v.trim()):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:a,maxRecordCount:u}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!!(e.spatialReference||e.extent&&e.extent.spatialReference),d=t.includes("edit"),h=t.includes("mensuration")&&c,f=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(v=>v.trim()),R=h&&f.includes("basic");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsMeasure:h,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&p,supportsProject:n>=10.3&&p,supportsComputeStatisticsHistograms:n>=10.4&&p,supportsQueryBoundary:n>=10.6&&p,supportsCalculateVolume:n>=10.7&&m,supportsComputePixelLocation:n>=10.7&&t.includes("catalog"),supportsComputeAngles:n>=10.91,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(a!=null&&a.supportsStatistics),supportsOrderBy:!!(a!=null&&a.supportsOrderBy),supportsDistinct:!!(a!=null&&a.supportsDistinct),supportsPagination:!!(a!=null&&a.supportsPagination),supportsStandardizedQueriesOnly:!!(a!=null&&a.useStandardizedQueries),supportsPercentileStatistics:!!(a!=null&&a.supportsPercentileStatistics),supportsCentroid:!!(a!=null&&a.supportsReturningGeometryCentroid),supportsDistance:!!(a!=null&&a.supportsQueryWithDistance),supportsExtent:!!(a!=null&&a.supportsReturningQueryExtent),supportsGeometryProperties:!!(a!=null&&a.supportsReturningGeometryProperties),supportsHavingClause:!!(a!=null&&a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(a!=null&&a.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:R,supportsAreaAndPerimeter:R,supportsPointOrCentroid:R,supportsHeightFromBaseAndTop:h&&f.includes("base-top height"),supportsHeightFromBaseAndTopShadow:h&&f.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:h&&f.includes("top-top shadow height"),supports3D:h&&f.includes("3d")}}}};function o(e){var t;return(t=e==null?void 0:e.path)!=null?t:""}return s([l()],i.prototype,"_functionRasterInfos",void 0),s([l()],i.prototype,"_rasterJobHandler",void 0),s([l()],i.prototype,"_cachedRendererJson",void 0),s([l({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),s([A("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),s([l()],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),s([l({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),s([l()],i.prototype,"adjustAspectRatio",void 0),s([l({type:[Fe],json:{write:!0}})],i.prototype,"bandIds",void 0),s([A("bandIds")],i.prototype,"readBandIds",null),s([l({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),s([A("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),s([l({type:Number})],i.prototype,"compressionQuality",void 0),s([D("compressionQuality")],i.prototype,"writeCompressionQuality",null),s([l({type:Number})],i.prototype,"compressionTolerance",void 0),s([D("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),s([l({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),s([l({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),s([A("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),s([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),s([l({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),s([l()],i.prototype,"rasterInfo",void 0),s([l({readOnly:!0,type:[he]})],i.prototype,"fields",void 0),s([l({readOnly:!0})],i.prototype,"fieldsIndex",null),s([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),s([A("service","format",["serviceDataType"])],i.prototype,"readFormat",null),s([l({type:Ve})],i.prototype,"fullExtent",void 0),s([l({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),s([l({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),s([l({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),s([l({type:String,json:{type:ue.jsonValues,read:ue.read,write:ue.write}})],i.prototype,"interpolation",void 0),s([l()],i.prototype,"minScale",void 0),s([A("service","minScale")],i.prototype,"readMinScale",null),s([l()],i.prototype,"maxScale",void 0),s([A("service","maxScale")],i.prototype,"readMaxScale",null),s([l({type:H})],i.prototype,"mosaicRule",null),s([A("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),s([D("mosaicRule")],i.prototype,"writeMosaicRule",null),s([l()],i.prototype,"multidimensionalInfo",void 0),s([l({type:ui,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),s([l({json:{type:Fe}})],i.prototype,"noData",void 0),s([D("noData")],i.prototype,"writeNoData",null),s([l({type:String,json:{type:Ne.jsonValues,read:Ne.read,write:Ne.write}})],i.prototype,"noDataInterpretation",void 0),s([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),s([A("objectIdField")],i.prototype,"readObjectIdField",null),s([l({})],i.prototype,"geometryType",void 0),s([l({})],i.prototype,"typeIdField",void 0),s([l({})],i.prototype,"types",void 0),s([l({readOnly:!0})],i.prototype,"parsedUrl",null),s([l({type:Function})],i.prototype,"pixelFilter",void 0),s([l()],i.prototype,"raster",void 0),s([l({readOnly:!0})],i.prototype,"sourceType",void 0),s([A("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),s([l()],i.prototype,"viewId",void 0),s([l({types:pi,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ci,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),s([A("renderer")],i.prototype,"readRenderer",null),s([D("renderer")],i.prototype,"writeRenderer",null),s([l()],i.prototype,"symbolizer",void 0),s([l(Mt)],i.prototype,"opacity",void 0),s([l({readOnly:!0})],i.prototype,"rasterFields",null),s([l({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),s([l({type:S})],i.prototype,"renderingRule",null),s([A("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),s([D("renderingRule")],i.prototype,"writeRenderingRule",null),s([l()],i.prototype,"serviceDataType",void 0),s([l({readOnly:!0,type:fe})],i.prototype,"spatialReference",void 0),s([A("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),s([l({json:{type:Ke.jsonValues}})],i.prototype,"pixelType",void 0),s([A("pixelType")],i.prototype,"readPixelType",null),s([D("pixelType")],i.prototype,"writePixelType",null),s([l({constructOnly:!0,type:xt})],i.prototype,"serviceRasterInfo",void 0),s([l()],i.prototype,"sourceJSON",void 0),s([l(At)],i.prototype,"url",void 0),s([l({readOnly:!0})],i.prototype,"version",void 0),s([A("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=s([F("esri.layers.mixins.ArcGISImageService")],i),i};let B=class extends Bt(Qt(Wt(Zt(Kt(vr(Xt(Yt(ei(ti(li)))))))))){constructor(...r){super(...r),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(r,i){return typeof r=="string"?{url:r,...i}:r}load(r){const i=b(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(ii).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(r,i,o){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[o]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(r){const i=this.rasterFields,o=this.title,e=new Set;let t=!1,n=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const a=new Set;t&&a.add("raster.itempixelvalue");for(const u of i){const p=u.name.toLowerCase();a.has(p)||p.includes("raster.servicepixelvalue.")||e.add(u.name)}return n&&e.add("raster.magnitude").add("raster.direction"),ri({fields:i,title:o},{...r,visibleFieldNames:e})}queryFeatures(r,i){return this.queryRasters(r,i).then(o=>{if(o!=null&&o.features)for(const e of o.features)e.layer=e.sourceLayer=this;return o})}queryFeatureCount(r,i){return this.queryRasterCount(r,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(r){return si(this,r)}};s([l(ni)],B.prototype,"legendEnabled",void 0),s([l({type:["show","hide"]})],B.prototype,"listMode",void 0),s([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),s([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],B.prototype,"operationalLayerType",void 0),s([D("web-map","operationalLayerType")],B.prototype,"writeOperationalLayerType",null),s([l(ai)],B.prototype,"popupEnabled",void 0),s([l({type:oi,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],B.prototype,"popupTemplate",void 0),s([l({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),s([l({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),B=s([F("esri.layers.ImageryLayer")],B);const Tr=B;export{Tr as default};
